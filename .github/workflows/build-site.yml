# This is a basic workflow to help you get started with Actions

name: Build Pelican Site

# Controls when the action will run. 
on:
  # Triggers the workflow on push events only for the master branch
  push:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # Set up Node
      - name: Set up Node
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: Install Node packages
        run: |
          cd asset-generator && npm install --save-dev

      - name: Clear asset directory
        run: |
          rm -Rf content/images
          rm -Rf content/js

      - name: Generate dynamic assets
        run: |
          cd asset-generator
          rm -Rf dist web-bundles
          tsc
          node dist/index.js
          webpack --mode production

      - name: Copy dynamic assets into the site directory
        run: |
          cp -r asset-generator/static/. content/images
          cp -r asset-generator/web-bundles/. content/js

      # Set up Python
      - name: Set up Python 3.9
        uses: actions/setup-python@v4
        with:
          python-version: 3.9
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Build site
        run: |
          pelican content -o output -s publishconf.py
          
      - name: Commit to gh-pages branch
        run: |
          ghp-import output -b gh-pages
          git push -f origin gh-pages
