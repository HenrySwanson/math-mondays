<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Math Mondays</title><link href="https://mathmondays.com/" rel="alternate"></link><link href="https://mathmondays.com/feed.xml" rel="self"></link><id>https://mathmondays.com/</id><updated>2023-02-06T00:00:00-08:00</updated><entry><title>Wirefly Hive Problem</title><link href="https://mathmondays.com/wirefly-hive" rel="alternate"></link><published>2023-02-06T00:00:00-08:00</published><updated>2023-02-06T00:00:00-08:00</updated><author><name>Henry Swanson</name></author><id>tag:mathmondays.com,2023-02-06:/wirefly-hive</id><summary type="html">&lt;p&gt;This puzzle comes from a video about Magic the Gathering that my brother sent me, which you can watch &lt;a href="https://www.youtube.com/watch?v=mKZ-ibOkRzs"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;div class="video-wrapper"&gt;
&lt;iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="" frameborder="0" src="https://www.youtube-nocookie.com/embed/mKZ-ibOkRzs" title="YouTube video player"&gt;
&lt;/iframe&gt;
&lt;/div&gt;
&lt;p&gt;The video is more about the specific rules of Magic, but this isn’t a Magic blog, so let’s get to the math as soon as possible.&lt;/p&gt;
</summary><content type="html">&lt;p&gt;This puzzle comes from a video about Magic the Gathering that my brother sent me, which you can watch &lt;a href="https://www.youtube.com/watch?v=mKZ-ibOkRzs"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;div class="video-wrapper"&gt;
    &lt;iframe src="https://www.youtube-nocookie.com/embed/mKZ-ibOkRzs" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen&gt;
    &lt;/iframe&gt;
&lt;/div&gt;

&lt;p&gt;The video is more about the specific rules of Magic, but this isn&amp;rsquo;t a Magic blog, so let&amp;rsquo;s get to the math as soon as possible.&lt;/p&gt;


&lt;p&gt;I&amp;rsquo;ll try to summarize what&amp;rsquo;s going on here, but I don&amp;rsquo;t actually play Magic, so please forgive the inevitable inaccuracy here.&lt;/p&gt;
&lt;p&gt;It&amp;rsquo;s your turn, and on your side of the board, you have some infinite source of mana, a &lt;strong&gt;Wirefly Hive&lt;/strong&gt;, and &lt;strong&gt;Filigree Sages&lt;/strong&gt;. Meanwhile, your opponent has a &lt;strong&gt;Leonin Elder&lt;/strong&gt;.&lt;/p&gt;
&lt;div class="image-container"&gt;
&lt;p&gt;&lt;img alt="Wirefly Hive" height="350px" src="/images/wirefly/wirefly-hive.jpg"&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Filigree Sages" height="350px" src="/images/wirefly/filigree-sages.jpg"&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Leonin Elder" height="350px" src="/images/wirefly/leonin-elder.jpg"&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Basically, what this means is that, due to the effect of &lt;strong&gt;Filigree Sages&lt;/strong&gt;, you can activate &lt;strong&gt;Wirefly Hive&lt;/strong&gt; as many times as you want this turn. Each time you do so, you flip a coin.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;If it comes up heads, you get a &lt;strong&gt;Wirefly&lt;/strong&gt; with 2 power (i.e attack strength), and your opponent gains 1 life from the effect of &lt;strong&gt;Leonin Elder&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;However, if it&amp;rsquo;s tails, all your Wireflies are destroyed. Plus, your opponent keeps their increased life!&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This means that if you flip several heads in a row, you can gain a bunch of attack, potentially enough to kill your opponent. However, the more you flip tails, the harder your task becomes, as your opponent&amp;rsquo;s life steadily climbs higher.&lt;/p&gt;
&lt;p&gt;The question is: if your opponent starts with &lt;span class="math"&gt;\(L\)&lt;/span&gt; life, what is the probability that you eventually amass enough Wireflies to win?&lt;/p&gt;
&lt;h1&gt;Small &lt;span class="math"&gt;\(L\)&lt;/span&gt;&lt;/h1&gt;
&lt;p&gt;Obviously if &lt;span class="math"&gt;\(L = 0\)&lt;/span&gt; you have already won, so let&amp;rsquo;s look at &lt;span class="math"&gt;\(L = 1\)&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;If we flip heads, then we get 1 Wirefly, and our opponent increases to 2 life. Because our Wirefly has attack 2, that&amp;rsquo;s enough for us to win.&lt;/p&gt;
&lt;p&gt;But what if we flip tails?&lt;/p&gt;
&lt;p&gt;All zero of our Wireflies get destroyed, and our opponent remains at 1 life, so this is actually a no-op. Nothing has happened, and we are free to keep flipping until we get a heads.&lt;/p&gt;
&lt;p&gt;In other words, the probability of winning with &lt;span class="math"&gt;\(L = 1\)&lt;/span&gt; is 100%!&lt;/p&gt;
&lt;p&gt;How about &lt;span class="math"&gt;\(L = 2\)&lt;/span&gt;?&lt;/p&gt;
&lt;h1&gt;Recurrence Relation&lt;/h1&gt;
&lt;p&gt;Just like before, we can keep flipping tails at the start, and nothing will happen. So eventually, we will flip a head, and get one Wirefly, bringing our opponent to 3 life. But now it gets harder.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;If we get another heads, we get a second Wirefly, and our opponent heals to 4 life. We can now attack with our two Wireflies for 4 damage and win.&lt;/li&gt;
&lt;li&gt;If we get tails, we lose our Wirefly, and have to start all over, but our opponent starts with 3 life this time.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If we let &lt;span class="math"&gt;\(p(L)\)&lt;/span&gt; be the probability of winning, when our opponent starts with &lt;span class="math"&gt;\(L\)&lt;/span&gt; life, then we have
&lt;/p&gt;
&lt;div class="math"&gt;$$p(2) = \frac{1}{2} + \frac{1}{2} p(3)$$&lt;/div&gt;
&lt;p&gt;We can do something similar for higher &lt;span class="math"&gt;\(L\)&lt;/span&gt;. If our opponent starts with &lt;span class="math"&gt;\(L\)&lt;/span&gt; life, then we flip the coin until we get our first head, giving our opponent &lt;span class="math"&gt;\(L+1\)&lt;/span&gt; life, and us one Wirefly. After that, if we get a streak of &lt;span class="math"&gt;\(L\)&lt;/span&gt; heads, our opponent will have &lt;span class="math"&gt;\(2L\)&lt;/span&gt; life, but we will have &lt;span class="math"&gt;\(L\)&lt;/span&gt; Wireflies total, and that is just enough to win. However, if our streak only lasts &lt;span class="math"&gt;\(k &amp;lt; L\)&lt;/span&gt; heads, we have to start over, with our opponent at &lt;span class="math"&gt;\(L+k\)&lt;/span&gt; life. &lt;/p&gt;
&lt;p&gt;The probability of getting a streak of &lt;span class="math"&gt;\(L\)&lt;/span&gt; heads (remember, the first is &amp;ldquo;free&amp;rdquo;), is &lt;span class="math"&gt;\(1/2^{L-1}\)&lt;/span&gt;. The probability of getting &lt;span class="math"&gt;\(k\)&lt;/span&gt; heads followed by a tail is &lt;span class="math"&gt;\(1/2^{k-1+1}\)&lt;/span&gt;. Putting it all together, we get:&lt;/p&gt;
&lt;div class="math"&gt;$$ p(L) = \frac{1}{2^L} + \sum_{k = 1}^{L} \frac{1}{2^k} p(L+k) $$&lt;/div&gt;
&lt;p&gt;Unlike normal recurrence relations, this grows towards higher values of &lt;span class="math"&gt;\(L\)&lt;/span&gt;, and we have no base case to start with (try expanding this formula for &lt;span class="math"&gt;\(L=1\)&lt;/span&gt;!).&lt;/p&gt;
&lt;p&gt;Additionally, this relation is under-determined. For example, it is satisfied by &lt;span class="math"&gt;\(p(L) = 1\)&lt;/span&gt; always, which could be the answer, but as we discover below, it is not. So we&amp;rsquo;ve lost some information somewhere, but I don&amp;rsquo;t know what it is.&lt;/p&gt;
&lt;p&gt;I was not able to get anywhere with this, but maybe there&amp;rsquo;s some fancy generating function tricks one can do.&lt;/p&gt;
&lt;h1&gt;Random Walk&lt;/h1&gt;
&lt;p&gt;To make some progress, let&amp;rsquo;s transform the problem a bit.&lt;/p&gt;
&lt;p&gt;If instead, we weaken our Wireflies to have only 1 attack, and change the effect on &lt;strong&gt;Leonin Elder&lt;/strong&gt; to be &amp;ldquo;Whenever an artifact is destroyed, gain 1 life&amp;rdquo;, then we get the same puzzle, but it&amp;rsquo;s easier to reason about geometrically!&lt;/p&gt;
&lt;p&gt;(If our opponent has &lt;span class="math"&gt;\(L\)&lt;/span&gt; life, we still have to flip &lt;span class="math"&gt;\(L\)&lt;/span&gt; heads in a row to get lethal damage. And when we break a streak of &lt;span class="math"&gt;\(k\)&lt;/span&gt; heads, we still have to start over with our opponent at &lt;span class="math"&gt;\(L+k\)&lt;/span&gt; life.)&lt;/p&gt;
&lt;p&gt;Let&amp;rsquo;s draw a grid, where the x-axis is &amp;ldquo;opponent&amp;rsquo;s life&amp;rdquo;, and the y-axis is &amp;ldquo;number of Wireflies&amp;rdquo;. Each time we flip heads, we move up one step, and when we flip tails, we slide diagonally down to the x-axis. Our goal is to touch the diagonal &lt;span class="math"&gt;\(x=y\)&lt;/span&gt;, at which point we have lethal damage.&lt;/p&gt;
&lt;div class="image-container"&gt;
&lt;p&gt;&lt;img alt="Grid showing the directions of the random walk" height="300px" src="/images/wirefly/grid.svg"&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Now our problem takes the form of a random walk!&lt;/p&gt;
&lt;p&gt;In order to figure out the probability of touching the diagonal, let&amp;rsquo;s figure out the probability of touching it at each point.&lt;/p&gt;
&lt;p&gt;If our opponent starts with &lt;span class="math"&gt;\(L\)&lt;/span&gt; life, and we touch the diagonal at &lt;span class="math"&gt;\((N, N)\)&lt;/span&gt;, then we must have:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Traversed some path from &lt;span class="math"&gt;\((L, 0)\)&lt;/span&gt; to &lt;span class="math"&gt;\((N, 0)\)&lt;/span&gt;, without touching the diagonal.&lt;/li&gt;
&lt;li&gt;Then we flipped &lt;span class="math"&gt;\(N\)&lt;/span&gt; consecutive heads.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The probability of the latter is easy to compute; we&amp;rsquo;ve done it several times already: &lt;span class="math"&gt;\(1/2^{N-1}\)&lt;/span&gt;. The former is trickier.&lt;/p&gt;
&lt;p&gt;Any particular path from &lt;span class="math"&gt;\((L, 0)\)&lt;/span&gt; to &lt;span class="math"&gt;\((N, 0)\)&lt;/span&gt; comes from a specific sequence of heads streaks, punctuated by arbitrary runs of tails. For example, the sequence shown in the diagram above has streaks of &lt;span class="math"&gt;\((1, 2, 1)\)&lt;/span&gt;, and could have been produced by:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;H&lt;/strong&gt;T&lt;strong&gt;HH&lt;/strong&gt;T&lt;strong&gt;H&lt;/strong&gt;T&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;H&lt;/strong&gt;TTTT&lt;strong&gt;HH&lt;/strong&gt;TTTTT&lt;strong&gt;H&lt;/strong&gt;TTTTTT&lt;/li&gt;
&lt;li&gt;TTTTT&lt;strong&gt;H&lt;/strong&gt;T&lt;strong&gt;HH&lt;/strong&gt;TT&lt;strong&gt;H&lt;/strong&gt;T&lt;/li&gt;
&lt;li&gt;and so on&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;What&amp;rsquo;s the probability of getting this particular sequence?&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;We have to get a streak of one head: &lt;span class="math"&gt;\(1/2\)&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;Then a streak of two heads: &lt;span class="math"&gt;\(1/4\)&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;And lastly, a streak of one head again: &lt;span class="math"&gt;\(1/2\)&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In total, that&amp;rsquo;s &lt;span class="math"&gt;\(1/16\)&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;In general, the probability of getting a streak pattern of &lt;span class="math"&gt;\((k_1, k_2, \ldots, k_i)\)&lt;/span&gt; is &lt;span class="math"&gt;\(1/2^{k_1} \cdot 1/2^{k_2} \cdots 1/2^{k_i}\)&lt;/span&gt;, or in other words, &lt;span class="math"&gt;\(1/2^{k_1 + k_2 + \cdots + k_i}\)&lt;/span&gt;. And since we know we need &lt;span class="math"&gt;\(N - L\)&lt;/span&gt; heads to get from &lt;span class="math"&gt;\((L, 0)\)&lt;/span&gt; to &lt;span class="math"&gt;\((N, 0)\)&lt;/span&gt;, that means each path has the &lt;strong&gt;exact same probability&lt;/strong&gt;: &lt;span class="math"&gt;\(1/2^{N - L}\)&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;The only thing we&amp;rsquo;re missing is the number of paths from &lt;span class="math"&gt;\((L, 0)\)&lt;/span&gt; to &lt;span class="math"&gt;\((N, 0)\)&lt;/span&gt;. If we call that quantity &lt;span class="math"&gt;\(a_{L, N}\)&lt;/span&gt;, then the probability that we win is:&lt;/p&gt;
&lt;div class="math"&gt;$$ p(L) = \sum_{N = L}^\infty p(\textrm{walked to $(N, 0)$}) \cdot \frac{1}{2^{N-1}} = \sum_{N = L}^\infty \frac{a_{L, N}}{2^{N - L}} \cdot \frac{1}{2^{N-1}} $$&lt;/div&gt;
&lt;p&gt;The only thing left to do is find the values of &lt;span class="math"&gt;\(a_{L, N}\)&lt;/span&gt;.&lt;/p&gt;
&lt;h1&gt;Counting Paths&lt;/h1&gt;
&lt;p&gt;Counting these paths turns out to be quite an ordeal, and I never ended up finding a closed form for them. Still though, there&amp;rsquo;s a clean recurrence relation that one can use to compute these things, so let&amp;rsquo;s dive in.&lt;/p&gt;
&lt;p&gt;If we&amp;rsquo;re looking for a path from &lt;span class="math"&gt;\((L, 0)\)&lt;/span&gt; to &lt;span class="math"&gt;\((N, 0)\)&lt;/span&gt;, our last step has to be a diagonal. There&amp;rsquo;s only a few possible places we can slide down the diagonal and hit &lt;span class="math"&gt;\((N, 0)\)&lt;/span&gt;.&lt;/p&gt;
&lt;div class="image-container"&gt;
&lt;p&gt;&lt;img alt="Diagonal arrow down to (6, 0)" height="300px" src="/images/wirefly/diagonal-slide.svg"&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Specifically, we can be on any point &lt;span class="math"&gt;\((N - i, N + i)\)&lt;/span&gt;, as long as &lt;span class="math"&gt;\(N - i &amp;lt; N + i\)&lt;/span&gt;, otherwise we&amp;rsquo;d be on (or past) the diagonal, and this would not be a valid path.&lt;/p&gt;
&lt;p&gt;The only way to get from &lt;span class="math"&gt;\((L, 0)\)&lt;/span&gt; to &lt;span class="math"&gt;\((N - i, N + i)\)&lt;/span&gt; is to make it to &lt;span class="math"&gt;\((N - i, 0)\)&lt;/span&gt;, and then go straight up. So each path to &lt;span class="math"&gt;\((N - i, 0)\)&lt;/span&gt; gives us exactly one path to &lt;span class="math"&gt;\((N, 0)\)&lt;/span&gt;, meaning the number of paths is just:&lt;/p&gt;
&lt;div class="math"&gt;$$ a_{L, N} = \sum_{i} a_{L, N - i} $$&lt;/div&gt;
&lt;p&gt;where the sum is taken over all &lt;span class="math"&gt;\(i\)&lt;/span&gt; such that &lt;span class="math"&gt;\(N - i &amp;lt; N + i\)&lt;/span&gt;. Also, we can skip all &lt;span class="math"&gt;\(i\)&lt;/span&gt; such that &lt;span class="math"&gt;\(N - i &amp;lt; L\)&lt;/span&gt;, because there are no paths going backwards.&lt;/p&gt;
&lt;p&gt;For a specific example, consider &lt;span class="math"&gt;\(a_{2, 6}\)&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;We can slide down to &lt;span class="math"&gt;\((6, 0)\)&lt;/span&gt; from &lt;span class="math"&gt;\((5, 1)\)&lt;/span&gt; or &lt;span class="math"&gt;\((4, 2)\)&lt;/span&gt;, but not &lt;span class="math"&gt;\((3, 3)\)&lt;/span&gt;. So we have that &lt;span class="math"&gt;\(a_{2, 6} = a_{2, 5} + a_{2, 4}\)&lt;/span&gt;. The possible paths are shown below, albeit, kind of cluttered:&lt;/p&gt;
&lt;div class="image-container"&gt;
&lt;p&gt;&lt;img alt="All paths from (2, 0) to (6, 0)" height="300px" src="/images/wirefly/paths-for-six.svg"&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;We see that there are 3 possible paths, two of which come from &lt;span class="math"&gt;\(a_{2, 5}\)&lt;/span&gt; (blue and purple), and one of which comes from &lt;span class="math"&gt;\(a_{2, 4}\)&lt;/span&gt; (cyan).&lt;/p&gt;
&lt;h1&gt;Simpler Recurrence&lt;/h1&gt;
&lt;p&gt;This is a pretty simple recurrence relation, but we can actually do better!&lt;/p&gt;
&lt;p&gt;Consider &lt;span class="math"&gt;\(a_{2, 7}\)&lt;/span&gt;. From our existing knowledge, we have that &lt;span class="math"&gt;\(a_{2, 7} = a_{2, 6} + a_{2, 5} + a_{2, 4}\)&lt;/span&gt;. But if we replace &lt;span class="math"&gt;\(a_{2, 5} + a_{2, 4}\)&lt;/span&gt;, then we get that &lt;span class="math"&gt;\(a_{2, 7} = 2 a_{2, 6}\)&lt;/span&gt;!&lt;/p&gt;
&lt;p&gt;Similarly, &lt;span class="math"&gt;\(a_{2, 8} = a_{2, 7} + a_{2, 6} + a_{2, 5}\)&lt;/span&gt;, but here we are not quite so lucky &amp;ndash; we do not have all the terms we need. The best we can do is &lt;span class="math"&gt;\(a_{2, 8} = 2 a_{2, 7} - a_{2, 4}\)&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;And in general, for all &lt;span class="math"&gt;\(n\)&lt;/span&gt; and &lt;span class="math"&gt;\(k &amp;gt; n\)&lt;/span&gt;, we have:&lt;/p&gt;
&lt;div class="math"&gt;$$ a_{n, 2k+1} = 2 a_{n, 2k} $$&lt;/div&gt;
&lt;div class="math"&gt;$$ a_{n, 2k} = 2 a_{n, 2k-1} - a_{n, k} $$&lt;/div&gt;
&lt;h1&gt;Conclusion?&lt;/h1&gt;
&lt;p&gt;Unfortunately, I was not able to find any closed-form solution here.&lt;/p&gt;
&lt;p&gt;I threw the recurrence relation into Python, and got the following results:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;span class="math"&gt;\(L\)&lt;/span&gt;&lt;/th&gt;
&lt;th&gt;&lt;span class="math"&gt;\(p(L)\)&lt;/span&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;N/A&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;0.68332&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;td&gt;0.36663&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;0.18645&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;5&lt;/td&gt;
&lt;td&gt;0.093619&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;6&lt;/td&gt;
&lt;td&gt;0.046859&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;7&lt;/td&gt;
&lt;td&gt;0.023435&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;8&lt;/td&gt;
&lt;td&gt;0.011718&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;9&lt;/td&gt;
&lt;td&gt;0.0058593&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;10&lt;/td&gt;
&lt;td&gt;0.0029297&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Additionally, I found an &lt;a href="https://oeis.org/A002083"&gt;OEIS sequence&lt;/a&gt; that counts &lt;span class="math"&gt;\(a_{2, n}\)&lt;/span&gt;, and I was able to find other references to this sequence, but not the specific sum we&amp;rsquo;re looking for. Wolfram Alpha doesn&amp;rsquo;t produce any reasonable guesses for a closed form either. Can&amp;rsquo;t win them all, I guess.&lt;/p&gt;
&lt;script type="text/javascript"&gt;if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) {
    var align = "center",
        indent = "0em",
        linebreak = "false";

    if (false) {
        align = (screen.width &lt; 768) ? "left" : align;
        indent = (screen.width &lt; 768) ? "0em" : indent;
        linebreak = (screen.width &lt; 768) ? 'true' : linebreak;
    }

    var mathjaxscript = document.createElement('script');
    mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#';
    mathjaxscript.type = 'text/javascript';
    mathjaxscript.src = 'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.3/latest.js?config=TeX-AMS-MML_HTMLorMML';

    var configscript = document.createElement('script');
    configscript.type = 'text/x-mathjax-config';
    configscript[(window.opera ? "innerHTML" : "text")] =
        "MathJax.Hub.Config({" +
        "    config: ['MMLorHTML.js']," +
        "    TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'none' } }," +
        "    jax: ['input/TeX','input/MathML','output/HTML-CSS']," +
        "    extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js']," +
        "    displayAlign: '"+ align +"'," +
        "    displayIndent: '"+ indent +"'," +
        "    showMathMenu: true," +
        "    messageStyle: 'normal'," +
        "    tex2jax: { " +
        "        inlineMath: [ ['\\\\(','\\\\)'] ], " +
        "        displayMath: [ ['$$','$$'] ]," +
        "        processEscapes: true," +
        "        preview: 'TeX'," +
        "    }, " +
        "    'HTML-CSS': { " +
        "        availableFonts: ['STIX', 'TeX']," +
        "        preferredFont: 'STIX'," +
        "        styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'inherit ! important'} }," +
        "        linebreaks: { automatic: "+ linebreak +", width: '90% container' }," +
        "    }, " +
        "}); " +
        "if ('default' !== 'default') {" +
            "MathJax.Hub.Register.StartupHook('HTML-CSS Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax['HTML-CSS'].FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
            "MathJax.Hub.Register.StartupHook('SVG Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax.SVG.FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
        "}";

    (document.body || document.getElementsByTagName('head')[0]).appendChild(configscript);
    (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript);
}
&lt;/script&gt;</content><category term="misc"></category><category term="puzzles"></category></entry><entry><title>Circular Prison of Unknown Size</title><link href="https://mathmondays.com/circular-prison" rel="alternate"></link><published>2022-03-28T00:00:00-07:00</published><updated>2022-03-28T00:00:00-07:00</updated><author><name>Henry Swanson</name></author><id>tag:mathmondays.com,2022-03-28:/circular-prison</id><summary type="html">&lt;p&gt;“Prisoner puzzles” are a popular kind of mathematical puzzle, in which a large group of cooperative players (“prisoners”) play a game against an adversarial supervisor (often “the warden”), with limited communication. Some classic examples are &lt;a href="https://en.wikipedia.org/wiki/100_prisoners_problem"&gt;here&lt;/a&gt; and &lt;a href="https://www.popularmechanics.com/science/math/a25254/riddle-of-the-week-16/"&gt;here&lt;/a&gt; (there’s frequent overlap with “hat problems”).&lt;/p&gt;
&lt;p&gt;Recently, I ran across a &lt;a href="https://puzzling.stackexchange.com/questions/16168/the-circular-prison-of-unknown-size"&gt;very difficult prisoner puzzle&lt;/a&gt;, which required an intricate solution from the prisoners to win. I’ve rephrased the problem and a few solutions below, along with an interactive demonstration of the strategies.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The inevitable has happened – all the mathematicians in the world have been gathered up and arrested for being huge nerds.&lt;/p&gt;
&lt;p&gt;The mathematicians are housed in a custom prison, which has &lt;span class="math"&gt;\(n\)&lt;/span&gt; identical, isolated cells, arranged in a large circle, each containing a single occupant (no empty cells). Inside each cell is a light switch and a light bulb, but the electrical wiring is unusual. If the light switch in a cell is on at noon, the bulb in the &lt;em&gt;adjacent&lt;/em&gt; cell will briefly flash. Otherwise, and at all other times, the light bulb is off&lt;sup id="sf-circular-prison-1-back"&gt;&lt;a class="simple-footnote" href="#sf-circular-prison-1" title="Essentially, every prisoner gets to send a bit to the cell next door. The noon thing is just to rule out prisoners trying to send multiple signals."&gt;1&lt;/a&gt;&lt;/sup&gt;.&lt;/p&gt;
&lt;p&gt;In order to prevent communication, every midnight, the warden fills the cells with knockout gas, flips all the switches to “off”, and rearranges the prisoners however he wants. (Still only one prisoner per cell though.)&lt;/p&gt;
&lt;p&gt;One day, the warden enters your cell and issues you a challenge to win your freedom, and that of your colleagues. At any point, any one of the prisoners can announce “There are &lt;span class="math"&gt;\(n\)&lt;/span&gt; prisoners!”. If they are correct, then everyone is free. Otherwise, everyone will be executed. He allows you to send a message to all of your colleagues, describing the game and the plan, to which they are not allowed to reply. The warden, of course, will read your message, and shuffle everyone to thwart your strategy.&lt;/p&gt;
&lt;p&gt;What plan would you devise?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;script type='text/javascript'&gt;if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) {
    var align = "center",
        indent = "0em",
        linebreak = "false";

    if (false) {
        align = (screen.width &lt; 768) ? "left" : align;
        indent = (screen.width &lt; 768) ? "0em" : indent;
        linebreak = (screen.width &lt; 768) ? 'true' : linebreak;
    }

    var mathjaxscript = document.createElement('script');
    mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#';
    mathjaxscript.type = 'text/javascript';
    mathjaxscript.src = 'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.3/latest.js?config=TeX-AMS-MML_HTMLorMML';

    var configscript = document.createElement('script');
    configscript.type = 'text/x-mathjax-config';
    configscript[(window.opera ? "innerHTML" : "text")] =
        "MathJax.Hub.Config({" +
        "    config: ['MMLorHTML.js']," +
        "    TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'none' } }," +
        "    jax: ['input/TeX','input/MathML','output/HTML-CSS']," +
        "    extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js']," +
        "    displayAlign: '"+ align +"'," +
        "    displayIndent: '"+ indent +"'," +
        "    showMathMenu: true," +
        "    messageStyle: 'normal'," +
        "    tex2jax: { " +
        "        inlineMath: [ ['\\\\(','\\\\)'] ], " +
        "        displayMath: [ ['$$','$$'] ]," +
        "        processEscapes: true," +
        "        preview: 'TeX'," +
        "    }, " +
        "    'HTML-CSS': { " +
        "        availableFonts: ['STIX', 'TeX']," +
        "        preferredFont: 'STIX'," +
        "        styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'inherit ! important'} }," +
        "        linebreaks: { automatic: "+ linebreak +", width: '90% container' }," +
        "    }, " +
        "}); " +
        "if ('default' !== 'default') {" +
            "MathJax.Hub.Register.StartupHook('HTML-CSS Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax['HTML-CSS'].FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
            "MathJax.Hub.Register.StartupHook('SVG Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax.SVG.FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
        "}";

    (document.body || document.getElementsByTagName('head')[0]).appendChild(configscript);
    (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript);
}
&lt;/script&gt;</summary><content type="html">&lt;p&gt;“Prisoner puzzles” are a popular kind of mathematical puzzle, in which a large group of cooperative players (“prisoners”) play a game against an adversarial supervisor (often “the warden”), with limited communication. Some classic examples are &lt;a href="https://en.wikipedia.org/wiki/100_prisoners_problem"&gt;here&lt;/a&gt; and &lt;a href="https://www.popularmechanics.com/science/math/a25254/riddle-of-the-week-16/"&gt;here&lt;/a&gt; (there’s frequent overlap with “hat problems”).&lt;/p&gt;
&lt;p&gt;Recently, I ran across a &lt;a href="https://puzzling.stackexchange.com/questions/16168/the-circular-prison-of-unknown-size"&gt;very difficult prisoner puzzle&lt;/a&gt;, which required an intricate solution from the prisoners to win. I’ve rephrased the problem and a few solutions below, along with an interactive demonstration of the strategies.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The inevitable has happened – all the mathematicians in the world have been gathered up and arrested for being huge nerds.&lt;/p&gt;
&lt;p&gt;The mathematicians are housed in a custom prison, which has &lt;span class="math"&gt;\(n\)&lt;/span&gt; identical, isolated cells, arranged in a large circle, each containing a single occupant (no empty cells). Inside each cell is a light switch and a light bulb, but the electrical wiring is unusual. If the light switch in a cell is on at noon, the bulb in the &lt;em&gt;adjacent&lt;/em&gt; cell will briefly flash. Otherwise, and at all other times, the light bulb is off&lt;sup id="sf-circular-prison-1-back"&gt;&lt;a href="#sf-circular-prison-1" class="simple-footnote" title="Essentially, every prisoner gets to send a bit to the cell next door. The noon thing is just to rule out prisoners trying to send multiple signals."&gt;1&lt;/a&gt;&lt;/sup&gt;.&lt;/p&gt;
&lt;p&gt;In order to prevent communication, every midnight, the warden fills the cells with knockout gas, flips all the switches to “off”, and rearranges the prisoners however he wants. (Still only one prisoner per cell though.)&lt;/p&gt;
&lt;p&gt;One day, the warden enters your cell and issues you a challenge to win your freedom, and that of your colleagues. At any point, any one of the prisoners can announce “There are &lt;span class="math"&gt;\(n\)&lt;/span&gt; prisoners!”. If they are correct, then everyone is free. Otherwise, everyone will be executed. He allows you to send a message to all of your colleagues, describing the game and the plan, to which they are not allowed to reply. The warden, of course, will read your message, and shuffle everyone to thwart your strategy.&lt;/p&gt;
&lt;p&gt;What plan would you devise?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;hr&gt;
&lt;p&gt;The StackExchange link above describes a few solutions, and there are two in particular that I think are particularly interesting. In all cases, it’s important that you are singled out by the warden, because this breaks the symmetry between you and everyone else, and allows you to act as the &lt;em&gt;captain&lt;/em&gt; for the group.&lt;/p&gt;
&lt;h1&gt;Upper Bound&lt;/h1&gt;
&lt;p&gt;For both strategies, the first step is to establish an upper bound, which can be done as follows:&lt;/p&gt;
&lt;div class="theorem-box"&gt;
&lt;div class="theorem-title"&gt;Finding an Upper Bound&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;We perform a sequence of &lt;em&gt;rounds&lt;/em&gt;, i.e., Round 1, Round 2, etc., consisting of a &lt;em&gt;waxing phase&lt;/em&gt; and a &lt;em&gt;waning phase&lt;/em&gt;.&lt;/li&gt;
&lt;li&gt;Within each round, prisoners are either “active” (will flip their switch today) or “inactive” (will not).&lt;/li&gt;
&lt;li&gt;The waxing phase of round &lt;span class="math"&gt;\(k\)&lt;/span&gt; lasts for &lt;span class="math"&gt;\(k\)&lt;/span&gt; days:&lt;ul&gt;
&lt;li&gt;At the start of this round, the captain starts off active, and everyone else starts inactive.&lt;/li&gt;
&lt;li&gt;During this phase, anyone who sees a light becomes active, and stays that way for the rest of the phase.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;The waning phase of round &lt;span class="math"&gt;\(k\)&lt;/span&gt; lasts for &lt;span class="math"&gt;\(2^k\)&lt;/span&gt; days:&lt;ul&gt;
&lt;li&gt;At the start of this phase, prisoners carry over their active status from the end of the waxing phase.&lt;/li&gt;
&lt;li&gt;If a prisoner does not see a light, they immediately become inactive and remain that way for the rest of the phase.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;p&gt;We claim that, at the end of a round, either everyone is active or everyone is inactive. If no one does, we move on to the next round, otherwise, we stop, and claim that &lt;span class="math"&gt;\(n \le 2^k\)&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;Consider the number of active prisoners at the end of the waxing phase. Because each prisoner can activate only one other prisoner per day, the number of active prisoners can at most double each day. This means that, at the end of the waxing phase, there are at most &lt;span class="math"&gt;\(2^k\)&lt;/span&gt; active prisoners.&lt;/p&gt;
&lt;p&gt;Now, if everyone is active, the waning phase consists of everyone flipping the switch every day, and the round ends with everyone still active. Otherwise, some inactive prisoner border some active prisoner, and the number of active prisoners decreases by at least one per day. Since we started the phase with at most &lt;span class="math"&gt;\(2^k\)&lt;/span&gt; active prisoners, after &lt;span class="math"&gt;\(2^k\)&lt;/span&gt; days, everyone will be inactive.&lt;/p&gt;
&lt;p&gt;Note: this process must eventually terminate, because during the &lt;span class="math"&gt;\(k\)&lt;/span&gt;th round, there are at least &lt;span class="math"&gt;\(k\)&lt;/span&gt; active prisoners at the end of the waxing phase, and so, worst case scenario, we’ll finish at round &lt;span class="math"&gt;\(n\)&lt;/span&gt;.&lt;/p&gt;
&lt;h1&gt;Solution by Flipping Coins&lt;/h1&gt;
&lt;p&gt;At this point, the solutions take different approaches. One of the solutions, given in &lt;a href="https://puzzling.stackexchange.com/a/16206/78405"&gt;this answer&lt;/a&gt;, relies on giving the prisoners the ability to flip coins, allowing them to make decisions that the warden can’t predict ahead of time.&lt;/p&gt;
&lt;p&gt;In order to communicate the results of these coin flips, we build an “announcement” subprocedure.&lt;/p&gt;
&lt;div class="theorem-box"&gt;
&lt;div class="theorem-title"&gt;Announcements&lt;/div&gt;
&lt;p&gt;For a predicate &lt;span class="math"&gt;\(P\)&lt;/span&gt;, an &lt;em&gt;announcement&lt;/em&gt; for &lt;span class="math"&gt;\(P\)&lt;/span&gt; is a procedure that makes it common knowledge whether there exists some prisoner satisfying &lt;span class="math"&gt;\(P\)&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;The announcement period lasts &lt;span class="math"&gt;\(B\)&lt;/span&gt; days, where &lt;span class="math"&gt;\(B\)&lt;/span&gt; is an upper bound for the number of prisoners.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Every prisoner satisfying &lt;span class="math"&gt;\(P\)&lt;/span&gt; is always active (and always flips the switch).&lt;/li&gt;
&lt;li&gt;Other prisoners become active when they see a light, and remain active afterwards, much like the waxing phase.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;At the end of the announcement period, if someone satisfied &lt;span class="math"&gt;\(P\)&lt;/span&gt;, everyone is active, otherwise everyone is inactive. This makes the (non-)satisfaction of &lt;span class="math"&gt;\(P\)&lt;/span&gt; common knowledge.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Now we can describe the strategy. The goal is to assign each prisoner a number from &lt;span class="math"&gt;\(1\)&lt;/span&gt; to &lt;span class="math"&gt;\(n\)&lt;/span&gt;. At each point, the numbers &lt;span class="math"&gt;\(1\)&lt;/span&gt; through &lt;span class="math"&gt;\(d\)&lt;/span&gt; will be assigned, and &lt;span class="math"&gt;\(d\)&lt;/span&gt; is common knowledge. The captain starts out numbered &lt;span class="math"&gt;\(1\)&lt;/span&gt;, and everyone else starts off unnumbered (i.e., &lt;span class="math"&gt;\(d = 1\)&lt;/span&gt;).&lt;/p&gt;
&lt;p&gt;Then, they repeat the following procedure:&lt;/p&gt;
&lt;div class="theorem-box"&gt;
&lt;div class="theorem-title"&gt;Strategy&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;(&lt;span class="math"&gt;\(B\)&lt;/span&gt; Days) Perform an announcement for “is unnumbered”.&lt;ul&gt;
&lt;li&gt;If we get a negative result, then everyone is numbered, and everyone knows &lt;span class="math"&gt;\(n\)&lt;/span&gt;.&lt;/li&gt;
&lt;li&gt;Otherwise, proceed.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;(&lt;span class="math"&gt;\(1\)&lt;/span&gt; Day) Candidate Selection Day&lt;ul&gt;
&lt;li&gt;This day is the crucial day of the strategy.&lt;/li&gt;
&lt;li&gt;Every numbered prisoner simultaneously flips a coin. If they flip heads, they flip the switch today, otherwise they don’t.&lt;/li&gt;
&lt;li&gt;Unnumbered prisoners do not flip the switch today.&lt;/li&gt;
&lt;li&gt;Prisoners who see a light today are called &lt;em&gt;candidates&lt;/em&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;(&lt;span class="math"&gt;\(d \cdot B\)&lt;/span&gt; Days) For each &lt;span class="math"&gt;\(i\)&lt;/span&gt; from &lt;span class="math"&gt;\(1\)&lt;/span&gt; to &lt;span class="math"&gt;\(d\)&lt;/span&gt;, the prisoner numbered &lt;span class="math"&gt;\(i\)&lt;/span&gt; makes an announcement for “flipped heads”.&lt;ul&gt;
&lt;li&gt;After this, everyone knows exactly how many heads were flipped, i.e., how many candidates there are.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;(&lt;span class="math"&gt;\(B\)&lt;/span&gt; Days) Finally, an announcement is made for “is unnumbered candidate”.&lt;ul&gt;
&lt;li&gt;If this announcement is positive, and exactly one head was flipped, then there is a unique unnumbered candidate, and so they should assign themselves the number &lt;span class="math"&gt;\(d+1\)&lt;/span&gt;, and everyone increments &lt;span class="math"&gt;\(d\)&lt;/span&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;p&gt;Repeated enough times, this procedure will eventually&lt;sup id="sf-circular-prison-2-back"&gt;&lt;a href="#sf-circular-prison-2" class="simple-footnote" title="As in, almost surely."&gt;2&lt;/a&gt;&lt;/sup&gt; complete. Imagine that we’ve numbered all but one prisoner. In order to number the last prisoner, every numbered prisoner needs to flip tails, except the one adjacent to the unnumbered one. This is unlikely to happen, but it will eventually occur. The same is also true of all prior attempts to number a prisoner.&lt;/p&gt;
&lt;p&gt;Also, the warden can rearrange the prisoners how he wishes, but because every numbered prisoner is equally capable of nominating a candidate, his efforts cannot actually impede the procedure.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;To see how this algorithm plays out in practice, here is an interactive simulation. The coins are weighted to come up heads &lt;span class="math"&gt;\(1/d\)&lt;/span&gt; of the time, which I think is optimal.&lt;/p&gt;
&lt;p&gt;The prisoners are named &lt;span class="math"&gt;\(A\)&lt;/span&gt; through &lt;span class="math"&gt;\(E\)&lt;/span&gt;, but this is just so that you can track their identities between shuffles. Their numbered labels are in the lower left, the coins they flip are in the lower right, and their candidacy status is in the upper right.&lt;/p&gt;
&lt;!-- TODO: generate prisoner graphics legend automatically --&gt;

&lt;div&gt;
&lt;span id="day-counter-1"&gt;&lt;/span&gt;
  &lt;div style="float: right;"&gt;
    &lt;button id="start-over-button-1" type="button"&gt;Start Over&lt;/button&gt;
    &lt;button id="undo-button-1" type="button"&gt;Undo&lt;/button&gt;
    &lt;button id="next-button-1" type="button"&gt;Next&lt;/button&gt;
    &lt;button id="finish-phase-button-1" type="button"&gt;Finish Phase&lt;/button&gt;
  &lt;/div&gt;
&lt;/div&gt;

&lt;div&gt;&lt;span id="state-description-1"&gt;&lt;/span&gt;&lt;/div&gt;

&lt;div id="prison-interactive-1" style="border-style: solid;border-width: 3px;border-radius: 5px;background-color: #fff"&gt;&lt;/div&gt;

&lt;div&gt;&lt;span id="common-knowledge-1"&gt;&lt;/span&gt;&lt;/div&gt;

&lt;h1&gt;Solution by Linear Algebra&lt;/h1&gt;
&lt;p&gt;The other approach (described &lt;a href="https://puzzling.stackexchange.com/a/24791/78405"&gt;here&lt;/a&gt; and &lt;a href="https://puzzling.stackexchange.com/a/24734/78405"&gt;here&lt;/a&gt;) is more complicated, but does not use randomness, and is guaranteed to finish in a certain number of days. It also leverages some linear algebra, so it’s a good thing our prisoners are mathematicians!&lt;/p&gt;
&lt;p&gt;It begins the same way as the first solution, by establishing an upper bound &lt;span class="math"&gt;\(B\)&lt;/span&gt;, and it uses the same announcement procedure. But instead of numbering individual prisoners, the goal is to partition them into subsets, and, after a certain point, deduce the size of these subsets.&lt;/p&gt;
&lt;p&gt;Confused? Me too. It only really clicked for me after writing out this section.&lt;/p&gt;
&lt;p&gt;At each point, there will be a partition of prisoners into subsets &lt;span class="math"&gt;\(S_1, \ldots, S_k\)&lt;/span&gt;; the prisoners will all know &lt;span class="math"&gt;\(k\)&lt;/span&gt;, and which subset they themselves are in. The sets are initialized with you, the captain, in &lt;span class="math"&gt;\(S_1\)&lt;/span&gt;, and everyone else in &lt;span class="math"&gt;\(S_2\)&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;To refine this partition further, they attempt the following procedure repeatedly:&lt;/p&gt;
&lt;div class="theorem-box"&gt;
&lt;div class="theorem-title"&gt;Strategy&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;For each subset &lt;span class="math"&gt;\(I \subseteq \{1, 2, \ldots, k\}\)&lt;/span&gt;, other than the empty set and the whole set,&lt;ul&gt;
&lt;li&gt;(&lt;span class="math"&gt;\(1\)&lt;/span&gt; Day) All prisoners in &lt;span class="math"&gt;\(\bigcup_{i \in I} S_i\)&lt;/span&gt; flash their lights today. Let &lt;span class="math"&gt;\(T\)&lt;/span&gt; be the set of prisoners that see lights today.&lt;/li&gt;
&lt;li&gt;For each individual &lt;span class="math"&gt;\(j = 1, 2, \ldots, k\)&lt;/span&gt;, check how &lt;span class="math"&gt;\(T\)&lt;/span&gt; and &lt;span class="math"&gt;\(S_j\)&lt;/span&gt; overlap:&lt;ul&gt;
&lt;li&gt;(&lt;span class="math"&gt;\(B\)&lt;/span&gt; Days) Perform an announcement for prisoners in &lt;span class="math"&gt;\(S_j \cap T\)&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;(&lt;span class="math"&gt;\(B\)&lt;/span&gt; Days) Perform an announcement for prisoners in &lt;span class="math"&gt;\(S_j \setminus T\)&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;If both announcements were positive, replace &lt;span class="math"&gt;\(S_j\)&lt;/span&gt; with &lt;span class="math"&gt;\(S_j \cap T\)&lt;/span&gt;, and add &lt;span class="math"&gt;\(S_j \setminus T\)&lt;/span&gt; as a new set, incrementing &lt;span class="math"&gt;\(k\)&lt;/span&gt;. Then, abort this procedure and try again.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Basically, &lt;span class="math"&gt;\(T\)&lt;/span&gt; is used to “cut” an &lt;span class="math"&gt;\(S_j\)&lt;/span&gt; into two smaller subsets, if possible.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;If we get to this point, stop. We claim it is now possible to announce the correct number of mathematicians.&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;p&gt;The loop must eventually stop, because in the worst case, &lt;span class="math"&gt;\(k = n\)&lt;/span&gt; and all subsets are size one. We can even put an upper bound on how long it will take. We can run the procedure at most &lt;span class="math"&gt;\(n-2\)&lt;/span&gt; times before all our subsets are size one. If we delay the splitting as long as possible, we’ll have to go through &lt;span class="math"&gt;\(2^n\)&lt;/span&gt;-ish subsets, each of which takes &lt;span class="math"&gt;\(2B+1\)&lt;/span&gt; days. Since the worst case for our upper bound is &lt;span class="math"&gt;\(B = 2^n\)&lt;/span&gt;, this gives &lt;span class="math"&gt;\((n-2)2^n(2\cdot 2^n+1) \approx 2n^2 \cdot 4^n\)&lt;/span&gt; days.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;But how does this help them calculate &lt;span class="math"&gt;\(n\)&lt;/span&gt;?&lt;/p&gt;
&lt;p&gt;Fix one of the subsets &lt;span class="math"&gt;\(I\)&lt;/span&gt;. Because &lt;span class="math"&gt;\(k\)&lt;/span&gt; did not increase on the final attempt, we know &lt;span class="math"&gt;\(T\)&lt;/span&gt; was not able to cut any of the &lt;span class="math"&gt;\(S_j\)&lt;/span&gt; this time. In other words, for all &lt;span class="math"&gt;\(j\)&lt;/span&gt;, either every prisoner in &lt;span class="math"&gt;\(S_j\)&lt;/span&gt; saw a light, or none of them did. Let &lt;span class="math"&gt;\(I'\)&lt;/span&gt; be the set of &lt;span class="math"&gt;\(j\)&lt;/span&gt; such that prisoners in &lt;span class="math"&gt;\(S_j\)&lt;/span&gt; saw lights. Since the number of prisoners seeing a light must equal the number of prisoners flipping a switch, this gives us an equation:&lt;/p&gt;
&lt;div class="math"&gt;$$ \sum_{i \in I} |S_i| = \sum_{j \in I'} |S_j| $$&lt;/div&gt;
&lt;p&gt;Note that &lt;span class="math"&gt;\(I'\)&lt;/span&gt; cannot be a subset of &lt;span class="math"&gt;\(I\)&lt;/span&gt;. The circular nature of the prison means that, unless &lt;span class="math"&gt;\(I\)&lt;/span&gt; is the whole set or the empty set, there must be someone outside of &lt;span class="math"&gt;\(I\)&lt;/span&gt; that saw a light, and we excluded those subsets from the procedure.&lt;/p&gt;
&lt;p&gt;So, letting &lt;span class="math"&gt;\(x_i\)&lt;/span&gt; be the size of &lt;span class="math"&gt;\(S_i\)&lt;/span&gt;, we now have a system of equations about the variables &lt;span class="math"&gt;\(x_1, \ldots, x_k\)&lt;/span&gt;. Importantly, the prisoners know these equations as well! Because of the announcements made when attempting to cut with &lt;span class="math"&gt;\(T\)&lt;/span&gt;, the prisoners know whether &lt;span class="math"&gt;\(S_j \cap T\)&lt;/span&gt; or &lt;span class="math"&gt;\(S_j \setminus T\)&lt;/span&gt; is empty or not, and this tells them the contents of &lt;span class="math"&gt;\(I'\)&lt;/span&gt;. (They already know &lt;span class="math"&gt;\(I\)&lt;/span&gt; because they agree on the order of iteration.) Lastly, they know that &lt;span class="math"&gt;\(S_1\)&lt;/span&gt; is just the captain, and so &lt;span class="math"&gt;\(x_1 = 1\)&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;We claim that, under these constraints, there is exactly one possible solution, and once the prisoners find it, they know the size of every subset exactly. They can win by simply guessing that &lt;span class="math"&gt;\(n = \sum x_i\)&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Proof&lt;/em&gt;:&lt;/p&gt;
&lt;p&gt;Let &lt;span class="math"&gt;\(x_1, \ldots, x_k\)&lt;/span&gt; and &lt;span class="math"&gt;\(y_1, \ldots, y_k\)&lt;/span&gt; be two such solutions. Let &lt;span class="math"&gt;\(r\)&lt;/span&gt; be the minimum value of &lt;span class="math"&gt;\(y_i/x_i\)&lt;/span&gt; over all &lt;span class="math"&gt;\(i\)&lt;/span&gt;, and let &lt;span class="math"&gt;\(z_i = y_i - r x_i\)&lt;/span&gt;. We note three things:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Each &lt;span class="math"&gt;\(z_i \ge 0\)&lt;/span&gt;, because &lt;span class="math"&gt;\(r \le y_i/x_i\)&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;At least one &lt;span class="math"&gt;\(z_i = 0\)&lt;/span&gt;, because there is some &lt;span class="math"&gt;\(i\)&lt;/span&gt; for which &lt;span class="math"&gt;\(r = y_i/x_i\)&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;As a linear combination of solutions, the &lt;span class="math"&gt;\(z_i\)&lt;/span&gt; are also a solution&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Assume for the sake of contradiction that some of the &lt;span class="math"&gt;\(z_i\)&lt;/span&gt; are non-zero. Let &lt;span class="math"&gt;\(Z\)&lt;/span&gt; be the set of &lt;span class="math"&gt;\(i\)&lt;/span&gt; for which &lt;span class="math"&gt;\(z_i = 0\)&lt;/span&gt;, which is by our assumption, not the whole set. Consider the equation corresponding to that subset; there is some subset &lt;span class="math"&gt;\(Z' \not\subseteq Z\)&lt;/span&gt; such that:&lt;/p&gt;
&lt;div class="math"&gt;$$ \sum_{i \in Z} z_i = \sum_{j \in Z'} z_j $$&lt;/div&gt;
&lt;p&gt;The left hand side must be zero, by definition, but because &lt;span class="math"&gt;\(Z' \setminus Z\)&lt;/span&gt; is non-empty, there is some non-zero &lt;span class="math"&gt;\(z_j\)&lt;/span&gt; on the right hand side. All the &lt;span class="math"&gt;\(z_j\)&lt;/span&gt;s are non-negative, so we have reached a contradiction. Thus, all &lt;span class="math"&gt;\(z_i\)&lt;/span&gt; are zero, meaning that &lt;span class="math"&gt;\(y_i = r x_i\)&lt;/span&gt;. And because &lt;span class="math"&gt;\(x_1 = y_1 = 1\)&lt;/span&gt;, this forces &lt;span class="math"&gt;\(r\)&lt;/span&gt; to be &lt;span class="math"&gt;\(1\)&lt;/span&gt;, and so the two solutions are identical.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;This approach is simulated below, but with one minor caveat. Once the system of equations has a unique solution, the mathematicians will just blurt it out immediately, instead of waiting for all &lt;span class="math"&gt;\(2^n - 2\)&lt;/span&gt; equations to come in.&lt;/p&gt;
&lt;p&gt;Note: Experimentally, it seems that it’s extremely common for the prisoners to all get partitioned into sets of size &lt;span class="math"&gt;\(1\)&lt;/span&gt;, but that’s not necessarily the case every time. If you were able to rearrange the prisoners as you wished, you could set up such a situation: once you have &lt;span class="math"&gt;\(4\)&lt;/span&gt; partitions, you can ensure that partition &lt;span class="math"&gt;\(4\)&lt;/span&gt; is never split up.&lt;/p&gt;
&lt;p&gt;But I haven’t yet added the ability to drag-and-drop prisoners around, so you have to approximate this by just hitting “Undo” and “Next” until you get the result you want. Maybe I’ll add that once I stop seething at JavaScript.&lt;/p&gt;
&lt;div&gt;
&lt;span id="day-counter-2"&gt;&lt;/span&gt;
  &lt;div style="float: right;"&gt;
    &lt;button id="start-over-button-2" type="button"&gt;Start Over&lt;/button&gt;
    &lt;button id="undo-button-2" type="button"&gt;Undo&lt;/button&gt;
    &lt;button id="next-button-2" type="button"&gt;Next&lt;/button&gt;
    &lt;button id="finish-phase-button-2" type="button"&gt;Finish Phase&lt;/button&gt;
  &lt;/div&gt;
&lt;/div&gt;

&lt;div&gt;&lt;span id="state-description-2"&gt;&lt;/span&gt;&lt;/div&gt;

&lt;div id="prison-interactive-2" style="border-style: solid;border-width: 3px;border-radius: 5px;background-color: #fff"&gt;&lt;/div&gt;

&lt;div&gt;&lt;span id="common-knowledge-2"&gt;&lt;/span&gt;&lt;/div&gt;

&lt;script src="/js/circular_prison/main.js"&gt;&lt;/script&gt;

&lt;script type="text/javascript"&gt;if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) {
    var align = "center",
        indent = "0em",
        linebreak = "false";

    if (false) {
        align = (screen.width &lt; 768) ? "left" : align;
        indent = (screen.width &lt; 768) ? "0em" : indent;
        linebreak = (screen.width &lt; 768) ? 'true' : linebreak;
    }

    var mathjaxscript = document.createElement('script');
    mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#';
    mathjaxscript.type = 'text/javascript';
    mathjaxscript.src = 'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.3/latest.js?config=TeX-AMS-MML_HTMLorMML';

    var configscript = document.createElement('script');
    configscript.type = 'text/x-mathjax-config';
    configscript[(window.opera ? "innerHTML" : "text")] =
        "MathJax.Hub.Config({" +
        "    config: ['MMLorHTML.js']," +
        "    TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'none' } }," +
        "    jax: ['input/TeX','input/MathML','output/HTML-CSS']," +
        "    extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js']," +
        "    displayAlign: '"+ align +"'," +
        "    displayIndent: '"+ indent +"'," +
        "    showMathMenu: true," +
        "    messageStyle: 'normal'," +
        "    tex2jax: { " +
        "        inlineMath: [ ['\\\\(','\\\\)'] ], " +
        "        displayMath: [ ['$$','$$'] ]," +
        "        processEscapes: true," +
        "        preview: 'TeX'," +
        "    }, " +
        "    'HTML-CSS': { " +
        "        availableFonts: ['STIX', 'TeX']," +
        "        preferredFont: 'STIX'," +
        "        styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'inherit ! important'} }," +
        "        linebreaks: { automatic: "+ linebreak +", width: '90% container' }," +
        "    }, " +
        "}); " +
        "if ('default' !== 'default') {" +
            "MathJax.Hub.Register.StartupHook('HTML-CSS Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax['HTML-CSS'].FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
            "MathJax.Hub.Register.StartupHook('SVG Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax.SVG.FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
        "}";

    (document.body || document.getElementsByTagName('head')[0]).appendChild(configscript);
    (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript);
}
&lt;/script&gt;&lt;ol class="simple-footnotes"&gt;&lt;li id="sf-circular-prison-1"&gt;Essentially, every prisoner gets to send a bit to the cell next door. The noon thing is just to rule out prisoners trying to send multiple signals. &lt;a href="#sf-circular-prison-1-back" class="simple-footnote-back"&gt;↩&lt;/a&gt;&lt;/li&gt;&lt;li id="sf-circular-prison-2"&gt;As in, &lt;a href="https://en.wikipedia.org/wiki/Almost_surely"&gt;almost surely&lt;/a&gt;. &lt;a href="#sf-circular-prison-2-back" class="simple-footnote-back"&gt;↩&lt;/a&gt;&lt;/li&gt;&lt;/ol&gt;</content><category term="misc"></category><category term="interactive"></category><category term="puzzles"></category></entry><entry><title>A Cooperative Hat Game</title><link href="https://mathmondays.com/hat-game" rel="alternate"></link><published>2021-02-15T00:00:00-08:00</published><updated>2021-02-15T00:00:00-08:00</updated><author><name>Henry Swanson</name></author><id>tag:mathmondays.com,2021-02-15:/hat-game</id><summary type="html">&lt;p&gt;&lt;span class="mathdefs"&gt;
&lt;span class="math"&gt;\(\newcommand{W}{\square}
\newcommand{B}{\blacksquare}\)&lt;/span&gt;
&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;Hat puzzles are super popular among mathematicians. Most of them have cute and clever solutions. Here’s one that, at the time of writing, is still an open problem.&lt;/p&gt;
&lt;!-- TODO consider 0-indexing the darn thing --&gt;
&lt;blockquote&gt;
&lt;p&gt;Alice and Bob sit facing each other, each with an infinite tower of hats on their heads. Each hat is either black or white, with equal probability. Alice can see all of Bob’s hats, but not her own, and vice versa. On the count of three, both players must name a natural number, which is used to index into their own hat tower. If the two hats match, then the players win, otherwise they lose. (Also, they’re not allowed to talk, cough, wink, or otherwise communicate.)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;As an example, say Alice’s hats are &lt;span class="math"&gt;\(\W\W\B\W\W\B\cdots\)&lt;/span&gt; and Bob’s hats are &lt;span class="math"&gt;\(\B\W\B\W\W\B\cdots\)&lt;/span&gt;. If Alice says 3 and Bob says 1, then since Alice’s third hat and Bob’s first hat are both black, then they win. If they both say 1, their first hats do not match, so they lose.&lt;/p&gt;
&lt;!-- TODO diagram! --&gt;
&lt;p&gt;What’s the best possible strategy, and how often does it win? No one knows! I have some conjectures here, and some (probably unoriginal) strategies that do pretty well.&lt;/p&gt;
&lt;script type='text/javascript'&gt;if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) {
    var align = "center",
        indent = "0em",
        linebreak = "false";

    if (false) {
        align = (screen.width &lt; 768) ? "left" : align;
        indent = (screen.width &lt; 768) ? "0em" : indent;
        linebreak = (screen.width &lt; 768) ? 'true' : linebreak;
    }

    var mathjaxscript = document.createElement('script');
    mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#';
    mathjaxscript.type = 'text/javascript';
    mathjaxscript.src = 'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.3/latest.js?config=TeX-AMS-MML_HTMLorMML';

    var configscript = document.createElement('script');
    configscript.type = 'text/x-mathjax-config';
    configscript[(window.opera ? "innerHTML" : "text")] =
        "MathJax.Hub.Config({" +
        "    config: ['MMLorHTML.js']," +
        "    TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'none' } }," +
        "    jax: ['input/TeX','input/MathML','output/HTML-CSS']," +
        "    extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js']," +
        "    displayAlign: '"+ align +"'," +
        "    displayIndent: '"+ indent +"'," +
        "    showMathMenu: true," +
        "    messageStyle: 'normal'," +
        "    tex2jax: { " +
        "        inlineMath: [ ['\\\\(','\\\\)'] ], " +
        "        displayMath: [ ['$$','$$'] ]," +
        "        processEscapes: true," +
        "        preview: 'TeX'," +
        "    }, " +
        "    'HTML-CSS': { " +
        "        availableFonts: ['STIX', 'TeX']," +
        "        preferredFont: 'STIX'," +
        "        styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'inherit ! important'} }," +
        "        linebreaks: { automatic: "+ linebreak +", width: '90% container' }," +
        "    }, " +
        "}); " +
        "if ('default' !== 'default') {" +
            "MathJax.Hub.Register.StartupHook('HTML-CSS Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax['HTML-CSS'].FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
            "MathJax.Hub.Register.StartupHook('SVG Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax.SVG.FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
        "}";

    (document.body || document.getElementsByTagName('head')[0]).appendChild(configscript);
    (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript);
}
&lt;/script&gt;</summary><content type="html">&lt;p&gt;&lt;span class="mathdefs"&gt;
&lt;span class="math"&gt;\(\newcommand{W}{\square}
\newcommand{B}{\blacksquare}\)&lt;/span&gt;
&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;Hat puzzles are super popular among mathematicians. Most of them have cute and clever solutions. Here&amp;rsquo;s one that, at the time of writing, is still an open problem.&lt;/p&gt;
&lt;!-- TODO consider 0-indexing the darn thing --&gt;

&lt;blockquote&gt;
&lt;p&gt;Alice and Bob sit facing each other, each with an infinite tower of hats on their heads. Each hat is either black or white, with equal probability. Alice can see all of Bob&amp;rsquo;s hats, but not her own, and vice versa. On the count of three, both players must name a natural number, which is used to index into their own hat tower. If the two hats match, then the players win, otherwise they lose. (Also, they&amp;rsquo;re not allowed to talk, cough, wink, or otherwise communicate.)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;As an example, say Alice&amp;rsquo;s hats are &lt;span class="math"&gt;\(\W\W\B\W\W\B\cdots\)&lt;/span&gt; and Bob&amp;rsquo;s hats are &lt;span class="math"&gt;\(\B\W\B\W\W\B\cdots\)&lt;/span&gt;. If Alice says 3 and Bob says 1, then since Alice&amp;rsquo;s third hat and Bob&amp;rsquo;s first hat are both black, then they win. If they both say 1, their first hats do not match, so they lose.&lt;/p&gt;
&lt;!-- TODO diagram! --&gt;

&lt;p&gt;What&amp;rsquo;s the best possible strategy, and how often does it win? No one knows! I have some conjectures here, and some (probably unoriginal) strategies that do pretty well.&lt;/p&gt;


&lt;h1&gt;Simplest Strategy&lt;/h1&gt;
&lt;p&gt;The simplest strategy is for both players to ignore any information they have and just pick the first hat. Unsurprisingly, this doesn&amp;rsquo;t go very well. The outcomes &lt;span class="math"&gt;\(\W/\W\)&lt;/span&gt;, &lt;span class="math"&gt;\(\W/\B\)&lt;/span&gt;, &lt;span class="math"&gt;\(\B/\W\)&lt;/span&gt;, and &lt;span class="math"&gt;\(\B/\B\)&lt;/span&gt; are all equally likely, so the chance of winning is &lt;span class="math"&gt;\(1/2\)&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;It&amp;rsquo;s not at all obvious that you can do any better than this. Since there&amp;rsquo;s no communication, neither player can learn anything about their own hats, and so both players are equally likely to pick a white hat or a black hat. How can you squeeze out any additional advantage?&lt;/p&gt;
&lt;h1&gt;First-White Strategy&lt;/h1&gt;
&lt;p&gt;Here&amp;rsquo;s a strategy that does better. Both players look for the first white hat on their partner&amp;rsquo;s head, and guess the corresponding number. For example, if Bob is wearing &lt;span class="math"&gt;\(\B\B\W\B\W\W\cdots\)&lt;/span&gt;, Alice would say &amp;ldquo;3&amp;rdquo;. If he&amp;rsquo;s wearing &lt;span class="math"&gt;\(\W\W\W\B\W\B\cdots\)&lt;/span&gt;, Alice would say &amp;ldquo;1&amp;rdquo;. Call Alice&amp;rsquo;s guess &lt;span class="math"&gt;\(a\)&lt;/span&gt; and Bob&amp;rsquo;s guess &lt;span class="math"&gt;\(b\)&lt;/span&gt;. What&amp;rsquo;s the probability of success?&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Case &lt;span class="math"&gt;\(a = b\)&lt;/span&gt;: they&amp;rsquo;re both pointing at white hats, so they win.&lt;/li&gt;
&lt;li&gt;Case &lt;span class="math"&gt;\(a &amp;lt; b\)&lt;/span&gt;: Bob&amp;rsquo;s guess means that every one of Alice&amp;rsquo;s hats before &lt;span class="math"&gt;\(b\)&lt;/span&gt; was black, including the one at &lt;span class="math"&gt;\(a\)&lt;/span&gt;. Alice stopped looking at Bob&amp;rsquo;s hats at &lt;span class="math"&gt;\(a\)&lt;/span&gt;, so Bob&amp;rsquo;s &lt;span class="math"&gt;\(b\)&lt;/span&gt;th hat could be either color. They win with probability &lt;span class="math"&gt;\(1/2\)&lt;/span&gt;.&lt;/li&gt;
&lt;li&gt;Case &lt;span class="math"&gt;\(a &amp;gt; b\)&lt;/span&gt;: Symmetric to the previous case.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;So if &lt;span class="math"&gt;\(p\)&lt;/span&gt; is the probability that &lt;span class="math"&gt;\(a = b\)&lt;/span&gt;, then the chance of success is &lt;span class="math"&gt;\(p + (1 - p) / 2 = 1/2 + p/2\)&lt;/span&gt;. Even before we know &lt;span class="math"&gt;\(p\)&lt;/span&gt;, we can already tell that we&amp;rsquo;re going to do better than &lt;span class="math"&gt;\(1/2\)&lt;/span&gt;!&lt;/p&gt;
&lt;p&gt;To find &lt;span class="math"&gt;\(p\)&lt;/span&gt;, we sum up the probabilities both players say &amp;ldquo;1&amp;rdquo;, that they both say &amp;ldquo;2&amp;rdquo;, that they both say &amp;ldquo;3&amp;rdquo;, etc. Note that the chance that Alice says &amp;ldquo;&lt;span class="math"&gt;\(k\)&lt;/span&gt;&amp;rdquo; is the chance that Bob&amp;rsquo;s &lt;span class="math"&gt;\(k\)&lt;/span&gt;th hat is white, &lt;em&gt;and&lt;/em&gt; that none of the previous ones were. Likewise for Bob. Summing up the resulting geometric series, we get&lt;/p&gt;
&lt;div class="math"&gt;$$
p = \sum_{k = 1}^\infty \left[ \left(\frac{1}{2} \right) \left(\frac{1}{2} \right)^{k-1} \right]^2 = \sum_{k = 1}^\infty \frac{1}{4^k} = \frac{1/4}{1 - 1/4} = \frac{1}{3}
$$&lt;/div&gt;
&lt;p&gt;So by following this strategy, Alice and Bob can win with probability &lt;span class="math"&gt;\(2/3\)&lt;/span&gt;. Much better!&lt;/p&gt;
&lt;h1&gt;Finite Strategies&lt;/h1&gt;
&lt;p&gt;Here&amp;rsquo;s another approach: what if we focus only on the first &lt;span class="math"&gt;\(N\)&lt;/span&gt; hats, reducing it to a finite problem?&lt;/p&gt;
&lt;p&gt;If &lt;span class="math"&gt;\(N = 1\)&lt;/span&gt; obviously there&amp;rsquo;s nothing interesting we can do, so let&amp;rsquo;s look at &lt;span class="math"&gt;\(N = 2\)&lt;/span&gt;. If Alice sees only black hats on Bob&amp;rsquo;s head, then she knows that strategizing is hopeless &amp;ndash; Bob will pick a black hat for sure, and she&amp;rsquo;ll pick a black hat with probability only 50%. Same thing goes if she sees only white, and same thing from Bob&amp;rsquo;s point of view. So the only interesting cases are when both players have non-monochromatic hat stacks.&lt;/p&gt;
&lt;p&gt;There&amp;rsquo;s four possible situations: &lt;span class="math"&gt;\(\W\B / \W\B\)&lt;/span&gt;, &lt;span class="math"&gt;\(\W\B / \B\W\)&lt;/span&gt;, &lt;span class="math"&gt;\(\B\W / \W\B\)&lt;/span&gt;, and &lt;span class="math"&gt;\(\B\W / \B\W\)&lt;/span&gt;. We could brute-force all possible strategies (there&amp;rsquo;s only four possible for each player, and half of those are constant strategies). But let&amp;rsquo;s think this one through. Let&amp;rsquo;s say, arbitrarily, that Alice guesses &amp;ldquo;1&amp;rdquo; if she sees &lt;span class="math"&gt;\(\W\B\)&lt;/span&gt;, and &amp;ldquo;2&amp;rdquo; if she sees &lt;span class="math"&gt;\(\B\W\)&lt;/span&gt;. If Bob sees &lt;span class="math"&gt;\(\W\B\)&lt;/span&gt; on Alice&amp;rsquo;s head, what should he do?&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;If he has &lt;span class="math"&gt;\(\W\B\)&lt;/span&gt;, then Alice will pick &amp;ldquo;1&amp;rdquo;, selecting her white hat. Bob should select his white hat by saying &amp;ldquo;1&amp;rdquo;.&lt;/li&gt;
&lt;li&gt;If he has &lt;span class="math"&gt;\(\B\W\)&lt;/span&gt;, then Alice will pick &amp;ldquo;2&amp;rdquo;, selecting her black hat. Bob should select his black hat by saying &amp;ldquo;1&amp;rdquo;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In both situations, saying &amp;ldquo;1&amp;rdquo; guarantees a win. Similarly, if he sees &lt;span class="math"&gt;\(\B\W\)&lt;/span&gt; on Alice&amp;rsquo;s head, he wins by saying &amp;ldquo;2&amp;rdquo;. So in the &amp;ldquo;neither player is monochrome&amp;rdquo; situation, they can win 100% of the time! For the monochrome cases, no strategy is possible, and so that&amp;rsquo;s just 50%. There&amp;rsquo;s 4 non-monochrome cases, and 12 monochrome ones, so that gives a win rate of &lt;span class="math"&gt;\(10/16 = 62.5\%\)&lt;/span&gt;.&lt;/p&gt;
&lt;!-- TODO diagram --&gt;

&lt;p&gt;How about &lt;span class="math"&gt;\(N = 3\)&lt;/span&gt;? We could just ignore the third hat, giving us a win rate of at least &lt;span class="math"&gt;\(10/16\)&lt;/span&gt;, but we can do better. Consider the following (asymmetric) strategy:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;If a player sees a monochromatic stack, they pick an arbitrary hat. Doesn&amp;rsquo;t matter.&lt;/li&gt;
&lt;li&gt;If a player sees only one white hat, they pick the index corresponding to that hat.&lt;/li&gt;
&lt;li&gt;If Alice sees one black hat, she picks the hat &lt;em&gt;after&lt;/em&gt; that one (with wraparound, so &lt;span class="math"&gt;\(\B\W\W \to 2\)&lt;/span&gt;, &lt;span class="math"&gt;\(\W\B\W \to 3\)&lt;/span&gt;, &lt;span class="math"&gt;\(\W\W\B \to 1\)&lt;/span&gt;).&lt;/li&gt;
&lt;li&gt;If Bob sees one black hat, he picks the hat &lt;em&gt;before&lt;/em&gt; that one (again, with wraparound).&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;How does this strategy do? Note that the strategy is unchanged by cyclic shifting of the hats, which reduces the amount of casework we have to do.&lt;/p&gt;
&lt;p&gt;If either player has a monochromatic stack, then they win only 50% of the time, as usual.&lt;/p&gt;
&lt;p&gt;If they both have a one-white-hat stack, then they have a guaranteed win.
&lt;/p&gt;
&lt;div class="math"&gt;$$
\begin{matrix}
\\
\textrm{Alice's hats} \\
\\
\textrm{Bob's hats}
\end{matrix}
\qquad
\begin{matrix}
\downarrow\hphantom{\B\B} \\
\W\B\B \\
\downarrow\hphantom{\B\B} \\
\W\B\B
\end{matrix}
\qquad
\begin{matrix}
\downarrow \\
\W\B\B \\
\downarrow\hphantom{\B\B} \\
\B\W\B
\end{matrix}
\qquad
\begin{matrix}
\hphantom{\B\B}\downarrow \\
\W\B\B \\
\downarrow\hphantom{\B\B} \\
\B\B\W
\end{matrix}
$$&lt;/div&gt;
&lt;p&gt;If they both have one-black-hat stacks, then they also have a guaranteed win, though it&amp;rsquo;s less obvious why.
&lt;/p&gt;
&lt;div class="math"&gt;$$
\begin{matrix}
\\
\textrm{Alice's hats} \\
\\
\textrm{Bob's hats}
\end{matrix}
\qquad
\begin{matrix}
\downarrow \\
\B\W\W \\
\hphantom{\B\B}\downarrow \\
\B\W\W
\end{matrix}
\qquad
\begin{matrix}
\hphantom{\B\B}\downarrow \\
\B\W\W \\
\hphantom{\B\B}\downarrow \\
\W\B\W
\end{matrix}
\qquad
\begin{matrix}
\downarrow\hphantom{\B\B} \\
\B\W\W \\
\hphantom{\B\B}\downarrow \\
\W\W\B
\end{matrix}
$$&lt;/div&gt;
&lt;p&gt;The only remaining case is when one player has a one-white stack, and the other has a one-black stack. We can&amp;rsquo;t win every matchup here, but we can get a solid &lt;span class="math"&gt;\(4/6\)&lt;/span&gt;. (Note: what happens if you change the one-black strategy to &amp;ldquo;pick the black hat&amp;rdquo;?).
&lt;/p&gt;
&lt;div class="math"&gt;$$
\begin{matrix}
\\
\textrm{Alice's hats} \\
\\
\textrm{Bob's hats}
\end{matrix}
\qquad
\begin{matrix}
\downarrow \\
\W\B\B \\
\downarrow \hphantom{\B\B} \\
\B\W\W
\end{matrix}
\qquad
\begin{matrix}
\hphantom{\B\B} \downarrow \\
\W\B\B \\
\downarrow \hphantom{\B\B} \\
\W\B\W
\end{matrix}
\qquad
\begin{matrix}
\downarrow \hphantom{\B\B} \\
\W\B\B \\
\downarrow \hphantom{\B\B} \\
\W\W\B
\end{matrix}
$$&lt;/div&gt;
&lt;div class="math"&gt;$$
\begin{matrix}
\\
\textrm{Alice's hats} \\
\\
\textrm{Bob's hats}
\end{matrix}
\qquad
\begin{matrix}
\downarrow \hphantom{\B\B} \\
\B\W\W \\
\hphantom{\B\B} \downarrow \\
\W\B\B \\
\end{matrix}
\qquad
\begin{matrix}
\downarrow \\
\B\W\W \\
\hphantom{\B\B} \downarrow \\
\B\W\B \\
\end{matrix}
\qquad
\begin{matrix}
\hphantom{\B\B} \downarrow \\
\B\W\W \\
\hphantom{\B\B} \downarrow \\
\B\B\W \\
\end{matrix}
$$&lt;/div&gt;
&lt;p&gt;This totals up to a winning probability of &lt;span class="math"&gt;\(44/64 = 68.75\%\)&lt;/span&gt;. Better than &lt;span class="math"&gt;\(N = 2\)&lt;/span&gt;, but also better than our &amp;ldquo;first-white&amp;rdquo; strategy!&lt;/p&gt;
&lt;p&gt;The casework becomes worse and worse for &lt;span class="math"&gt;\(N \ge 4\)&lt;/span&gt;, so we&amp;rsquo;ll stop here for now.&lt;/p&gt;
&lt;h1&gt;Stronger Together&lt;/h1&gt;
&lt;p&gt;We&amp;rsquo;ve seen two kinds of strategies so far: first-white, and finite strategies. These can be combined, in a pretty simple way, into a strategy better than either of them alone!&lt;/p&gt;
&lt;p&gt;With an &lt;span class="math"&gt;\(N\)&lt;/span&gt;-hat strategy, the augumented strategy goes as follows:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Each player looks at the first &lt;span class="math"&gt;\(N\)&lt;/span&gt; hats on their partner&amp;rsquo;s head.&lt;/li&gt;
&lt;li&gt;If they&amp;rsquo;re not monochromatic, then apply the finite strategy as usual.&lt;/li&gt;
&lt;li&gt;Otherwise, skip those &lt;span class="math"&gt;\(N\)&lt;/span&gt; hats, and look at hats &lt;span class="math"&gt;\(N+1\)&lt;/span&gt; to &lt;span class="math"&gt;\(2N\)&lt;/span&gt;.&lt;/li&gt;
&lt;li&gt;If those are non-monochromatic, apply the finite strategy, but increase all your answers by &lt;span class="math"&gt;\(N\)&lt;/span&gt;.&lt;/li&gt;
&lt;li&gt;Otherwise, look at the next block of &lt;span class="math"&gt;\(N\)&lt;/span&gt; hats, and repeat.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The finite strategies perform worst when facing a monochromatic block of hats. By using the &amp;ldquo;scan upwards and focus on the first non-monochromatic block&amp;rdquo; trick, we can sometimes salvage situations where the finite strategy would have to accept the 50-50 guess.&lt;/p&gt;
&lt;p&gt;Say that the &lt;span class="math"&gt;\(N\)&lt;/span&gt;-hat strategy has win rate &lt;span class="math"&gt;\(q\)&lt;/span&gt;. We&amp;rsquo;d first like to find &lt;span class="math"&gt;\(q^\ast\)&lt;/span&gt;, the conditional win rate for scenarios where neither player has a monochromatic stack. Let &lt;span class="math"&gt;\(W\)&lt;/span&gt; be the event &amp;ldquo;we win&amp;rdquo;, and &lt;span class="math"&gt;\(E\)&lt;/span&gt; be the event &amp;ldquo;neither player has a monochromatic stack&amp;rdquo;. The number of situations where Alice has a non-monochromatic stack is &lt;span class="math"&gt;\(2^N - 2\)&lt;/span&gt;, and same for Bob. So the probability of &lt;span class="math"&gt;\(E\)&lt;/span&gt; is &lt;span class="math"&gt;\((2^N - 2)^2/4^N\)&lt;/span&gt;. Thus,&lt;/p&gt;
&lt;div class="math"&gt;$$
\begin{align*}
Pr(W) &amp;amp;= Pr(W | E) Pr(E) + Pr(W | \lnot E) Pr(\lnot E) \\
q &amp;amp;= q^\ast \frac{(2^N - 2)^2}{4^N} + \frac{1}{2} \left( 1 - \frac{(2^N - 2)^2}{4^N} \right) \\
q &amp;amp;= q^\ast \frac{(2^N - 2)^2}{4^N} + \frac{2^{N+1} - 2}{4^N} \\
q \frac{4^N}{(2^N - 2)^2} &amp;amp;= q^\ast + \frac{2^{N+1} - 2}{(2^N - 2)^2} \\
\frac{4^N q - 2^{N+1} + 2}{(2^N - 2)^2} &amp;amp;= q^\ast \\
\end{align*}
$$&lt;/div&gt;
&lt;p&gt;Next, we want to find &lt;span class="math"&gt;\(r\)&lt;/span&gt;, the probability that both players will select the same block of &lt;span class="math"&gt;\(N\)&lt;/span&gt; hats. The chance an individual block is monochromatic is &lt;span class="math"&gt;\(2/2^N\)&lt;/span&gt;, and so the chance that Alice (or Bob) picks the &lt;span class="math"&gt;\(k\)&lt;/span&gt;th block is &amp;ldquo;probability the &lt;span class="math"&gt;\(k\)&lt;/span&gt;th block is non-monochromatic&amp;rdquo; times &amp;ldquo;probability the first &lt;span class="math"&gt;\(k-1\)&lt;/span&gt; were monochromatic&amp;rdquo;. This is quite similar to the setup we had for the original first-white strategy.&lt;/p&gt;
&lt;div class="math"&gt;$$
\begin{align*}
r &amp;amp;= \sum_{k=1}^\infty \left( \frac{2^N - 2}{2^N} \cdot \left( \frac{2}{2^N} \right)^{k-1} \right)^2 \\
&amp;amp;= \frac{(2^N - 2)^2}{4^N} \sum_{k=1}^\infty \left( \frac{4}{4^N} \right)^{k-1} \\
&amp;amp;= \frac{(2^N - 2)^2}{4^N} \frac{1}{1 - 4/4^N} \\
&amp;amp;= \frac{(2^N - 2)^2}{4^N - 4} \\
&amp;amp;= \frac{2^N - 2}{2^N + 2}
\end{align*}
$$&lt;/div&gt;
&lt;p&gt;So now we can find &lt;span class="math"&gt;\(q'\)&lt;/span&gt;, the win rate of the augmented strategy. If they pick the same block, then they win with probability &lt;span class="math"&gt;\(q^\ast\)&lt;/span&gt; (remember that these blocks are necessarily non-monochromatic). If they don&amp;rsquo;t, then someone is picking into a monochromatic block, and so we&amp;rsquo;re fated to get only &lt;span class="math"&gt;\(1/2\)&lt;/span&gt; success.&lt;/p&gt;
&lt;div class="math"&gt;$$
\begin{align*}
q' &amp;amp;= r q^\ast + (1 - r) \frac{1}{2} \\
&amp;amp;= \frac{2^N - 2}{2^N + 2} \frac{4^N q - 2^{N+1} + 2}{(2^N - 2)^2} + \frac{4}{2^N + 2} \frac{1}{2} \\
&amp;amp;= \frac{4^N q - 2^{N+1} + 2}{4^N - 4} + \frac{2(2^N - 2)}{4^N - 4} \\
&amp;amp;= \frac{4^N q - 2}{4^N - 4}
\end{align*}
$$&lt;/div&gt;
&lt;p&gt;Since &lt;span class="math"&gt;\(q \ge 1/2\)&lt;/span&gt;, we have &lt;span class="math"&gt;\(q' \ge q\)&lt;/span&gt;, and when the first inequality is strict, so is the second. So, perhaps unsurprisingly, augmenting a finite strategy makes it work better. How much better? Let&amp;rsquo;s take our &lt;span class="math"&gt;\(N = 3\)&lt;/span&gt; strategy:&lt;/p&gt;
&lt;div class="math"&gt;$$ \frac{4^3 (44/64) - 2}{4^3 - 4} = \frac{42}{60} = \frac{7}{10} $$&lt;/div&gt;
&lt;p&gt;We&amp;rsquo;ve nudged our 68.75% chance of winning to a 70% chance. That&amp;rsquo;s small, but it&amp;rsquo;s not nothing. Unfortunately, it&amp;rsquo;s as far as we can go &amp;ndash; this is conjectured to be an optimal strategy. No one&amp;rsquo;s found or ruled out anything better yet.&lt;/p&gt;
&lt;h1&gt;Observations&lt;/h1&gt;
&lt;p&gt;Now that we&amp;rsquo;ve seen some strategies, we can look for some patterns.&lt;/p&gt;
&lt;p&gt;In the simplest strategy, we&amp;rsquo;re equally likely to get any pair of hats. With the &amp;ldquo;first-white&amp;rdquo; strategy, what are the odds of each outcome? The only way to get &lt;span class="math"&gt;\(\W/\W\)&lt;/span&gt; is for both players to guess the same index, which happens with probability &lt;span class="math"&gt;\(1/3\)&lt;/span&gt;. In the other &lt;span class="math"&gt;\(2/3\)&lt;/span&gt; of the time, half the time Alice guesses the higher number, and half the time it&amp;rsquo;s Bob. In the former case, Bob&amp;rsquo;s hat is guaranteed black, and Alice&amp;rsquo;s hat is random. In the latter case, it&amp;rsquo;s the other way around. So that adds up to &lt;span class="math"&gt;\(\B/\B\)&lt;/span&gt; with probability &lt;span class="math"&gt;\(1/3\)&lt;/span&gt;, &lt;span class="math"&gt;\(\W/\B\)&lt;/span&gt; with probablity &lt;span class="math"&gt;\(1/6\)&lt;/span&gt;, and &lt;span class="math"&gt;\(\B/\W\)&lt;/span&gt; with &lt;span class="math"&gt;\(1/6\)&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;Similarly, if you work through the strategies given in the &amp;ldquo;Finite Strategies&amp;rdquo; section, the probability of &lt;span class="math"&gt;\(\W/\W\)&lt;/span&gt; and &lt;span class="math"&gt;\(\B/\B\)&lt;/span&gt; outcomes are equal, as are &lt;span class="math"&gt;\(\B/\W\)&lt;/span&gt; and &lt;span class="math"&gt;\(\W/\B\)&lt;/span&gt; outcomes. This is no coincidence.&lt;/p&gt;
&lt;p&gt;Since Alice is equally likely to pick a white or black hat (remember, she never learns anything about her own hat stack), &lt;span class="math"&gt;\(Pr(\W/\W) + Pr(\W/\B)\)&lt;/span&gt; has to equal &lt;span class="math"&gt;\(Pr(\B/\B) + Pr(\B/\W)\)&lt;/span&gt;. Similarly, Bob has to be equally likely to pick white or black, meaning &lt;span class="math"&gt;\(Pr(\W/\W) + Pr(\B/\W)\)&lt;/span&gt; equals &lt;span class="math"&gt;\(Pr(\W/\B) + Pr(\B/\B)\)&lt;/span&gt;. Subtracting one equation from the other gives &lt;span class="math"&gt;\(Pr(\B/\W) = Pr(\W/\B)\)&lt;/span&gt;, and some quick algebra gives &lt;span class="math"&gt;\(Pr(\W/\W) + Pr(\B/\B)\)&lt;/span&gt; as well.&lt;/p&gt;
&lt;p&gt;This tells us something interesting &amp;ndash; changing the win condition to &amp;ldquo;both players pick white hats&amp;rdquo; doesn&amp;rsquo;t change the nature of the game at all. Maximizing the probability of matching pairs is the same as maximizing the number of white pairs (and in fact, this is how the problem is usually presented.)&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;Another thing we can look at is the relationship between the finite and infinite game. Let &lt;span class="math"&gt;\(p_\infty\)&lt;/span&gt; denote the best possible winning probability for the infinite game, and &lt;span class="math"&gt;\(p_N\)&lt;/span&gt; for the game with just &lt;span class="math"&gt;\(N\)&lt;/span&gt; hats. How are these related to each other?&lt;/p&gt;
&lt;p&gt;Since an &lt;span class="math"&gt;\(N\)&lt;/span&gt;-hat strategy works just as well for a &lt;span class="math"&gt;\((N+1)\)&lt;/span&gt;-hat game (by just ignoring the last hat), we know that &lt;span class="math"&gt;\(p_{N+1}\)&lt;/span&gt; is at least &lt;span class="math"&gt;\(p_N\)&lt;/span&gt;. Similarly, &lt;span class="math"&gt;\(p_\infty \ge p_N\)&lt;/span&gt; for all &lt;span class="math"&gt;\(N\)&lt;/span&gt;. This gives us a chain of inequalities:&lt;/p&gt;
&lt;div class="math"&gt;$$ p_1 \le p_2 \le p_3 \le \cdots \le p_\infty $$&lt;/div&gt;
&lt;p&gt;Also, from augmenting a strategy, we know that &lt;span class="math"&gt;\(p_\infty \ge \frac{4^N p_N - 2}{4^N - 4}\)&lt;/span&gt; for all &lt;span class="math"&gt;\(N\)&lt;/span&gt;.&lt;/p&gt;
&lt;h1&gt;Upper Bounds, Infinite&lt;/h1&gt;
&lt;p&gt;Well, we know that &lt;span class="math"&gt;\(p_\infty\)&lt;/span&gt; is at least &lt;span class="math"&gt;\(0.7\)&lt;/span&gt;; can we put an upper bound on it too?&lt;/p&gt;
&lt;p&gt;Let&amp;rsquo;s say Alice and Bob have already decided on a strategy, one that has win rate &lt;span class="math"&gt;\(p\)&lt;/span&gt;. Now, imagine that, right before the game starts, we split the game into two identical games: in one game, things proceed as normal, and in the other game, all of Alice&amp;rsquo;s hats are swapped with their opposites. Every black hat becomes a white hat, and vice versa. We&amp;rsquo;ll refer to these players as &amp;ldquo;Alice&amp;rdquo; and &amp;ldquo;nega-Alice&amp;rdquo;. Let &lt;span class="math"&gt;\(X\)&lt;/span&gt; be the random variable &amp;ldquo;how many games are won&amp;rdquo; (so it is either &lt;span class="math"&gt;\(0\)&lt;/span&gt;, &lt;span class="math"&gt;\(1\)&lt;/span&gt;, or &lt;span class="math"&gt;\(2\)&lt;/span&gt;).&lt;/p&gt;
&lt;p&gt;Then clearly the expected value of &lt;span class="math"&gt;\(X\)&lt;/span&gt; is just &lt;span class="math"&gt;\(p + p\)&lt;/span&gt; &amp;ndash; each game has probability &lt;span class="math"&gt;\(p\)&lt;/span&gt; of being won, and expected value is linear. But we can also bound it in an interesting way. Let &lt;span class="math"&gt;\(S\)&lt;/span&gt; be the event &amp;ldquo;Bob picks the same color hat in both games&amp;rdquo;. Then in such a situation, only one of the two games is winnable. Both Alices will see the same hats on Bob, and will say the same number. But this will always result in different hats between them, and so Bob will win in exactly one game. If we let &lt;span class="math"&gt;\(q\)&lt;/span&gt; denote the probability of &lt;span class="math"&gt;\(S\)&lt;/span&gt; under the chosen strategy:&lt;/p&gt;
&lt;div class="math"&gt;$$ E[X] = Pr(S) E[X|S] + Pr(\lnot S) E[X | \lnot S] \le q + (1 - q) 2 = 2 - q $$&lt;/div&gt;
&lt;p&gt;Rearranging, we get that &lt;span class="math"&gt;\(p \le 1 - q/2\)&lt;/span&gt;. What do we know about &lt;span class="math"&gt;\(q\)&lt;/span&gt;? If Bob picks the same index in both games, then he&amp;rsquo;s guaranteed to pick the same color hat too, and if he doesn&amp;rsquo;t, then the hats are uncorrelated, and there&amp;rsquo;s a 50-50 chance he picks the same hat. So this means &lt;span class="math"&gt;\(q \ge 1/2\)&lt;/span&gt;, and thus &lt;span class="math"&gt;\(p \le 3/4\)&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;So we know that the optimal &lt;span class="math"&gt;\(p_\infty\)&lt;/span&gt; is between &lt;span class="math"&gt;\(0.7\)&lt;/span&gt; and &lt;span class="math"&gt;\(0.75\)&lt;/span&gt;. This is the best I&amp;rsquo;ve been able to prove, but apparently, there is a proof that &lt;span class="math"&gt;\(p_\infty &amp;lt; \frac{81}{112} \approx 0.723\)&lt;/span&gt;, as mentioned in &lt;a href="https://arxiv.org/abs/1407.4711"&gt;this paper&lt;/a&gt;. Doesn&amp;rsquo;t seem to be published though, unfortunately.&lt;/p&gt;
&lt;h1&gt;Upper Bounds, Finite&lt;/h1&gt;
&lt;p&gt;Let&amp;rsquo;s, for the moment, assume that &lt;span class="math"&gt;\(p_\infty\)&lt;/span&gt; is indeed &lt;span class="math"&gt;\(7/10\)&lt;/span&gt;, and try to put some upper bounds on &lt;span class="math"&gt;\(p_N\)&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;In this section, it&amp;rsquo;ll be easier to work with &amp;ldquo;number of winning outcomes&amp;rdquo; than &amp;ldquo;probability of winning&amp;rdquo;, so for a strategy on &lt;span class="math"&gt;\(N\)&lt;/span&gt; hats, we&amp;rsquo;ll call the number of winning outcomes the &amp;ldquo;score&amp;rdquo; of a strategy, which is equal to &lt;span class="math"&gt;\(4^N\)&lt;/span&gt; times the win rate. The optimal score for an &lt;span class="math"&gt;\(N\)&lt;/span&gt;-hat strategy we&amp;rsquo;ll denote &lt;span class="math"&gt;\(s_N\)&lt;/span&gt;, which is of course equal to &lt;span class="math"&gt;\(4^N p_N\)&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;We&amp;rsquo;ll start with the inequality we learned about from augumenting finite strategies: &lt;span class="math"&gt;\(p_\infty \ge \frac{4^N p_N - 2}{4^N - 4}\)&lt;/span&gt;. Rearranging it, we get that &lt;span class="math"&gt;\(s_N = 4^N p_N \le \frac{7}{10} (4^N - 4) + 2\)&lt;/span&gt;. Let &lt;span class="math"&gt;\(B_N\)&lt;/span&gt; be the floor of the RHS, so that &lt;span class="math"&gt;\(s_N \le B_N\)&lt;/span&gt;. Later, we&amp;rsquo;ll show that these bounds are sharp, and so &lt;span class="math"&gt;\(s_N\)&lt;/span&gt; actually equals &lt;span class="math"&gt;\(B_N\)&lt;/span&gt;, but for now it&amp;rsquo;s easier to call them different names.&lt;/p&gt;
&lt;p&gt;Computing some values of &lt;span class="math"&gt;\(B_N\)&lt;/span&gt;, we can see a pattern forming:&lt;/p&gt;
&lt;!-- TODO fix table margins and top border --&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;span class="math"&gt;\(N\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math"&gt;\(1\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math"&gt;\(2\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math"&gt;\(3\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math"&gt;\(4\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math"&gt;\(5\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math"&gt;\(6\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math"&gt;\(7\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math"&gt;\(8\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math"&gt;\(9\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math"&gt;\(10\)&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;span class="math"&gt;\(B_N\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math"&gt;\(2\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math"&gt;\(10\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math"&gt;\(44\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math"&gt;\(178\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math"&gt;\(716\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math"&gt;\(2866\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math"&gt;\(11468\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math"&gt;\(45874\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math"&gt;\(183500\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math"&gt;\(734002\)&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;They seem to follow an almost-geometric recurrence relation:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class="math"&gt;\(B_1 = 2\)&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;for even &lt;span class="math"&gt;\(N\)&lt;/span&gt;, &lt;span class="math"&gt;\(B_N = 4 B_{N-1} + 2\)&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;for odd &lt;span class="math"&gt;\(N\)&lt;/span&gt;, &lt;span class="math"&gt;\(B_N = 4 B_{N-1} + 4\)&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Proof: Let &lt;span class="math"&gt;\(e_N\)&lt;/span&gt; be the amount removed by flooring, i.e., &lt;span class="math"&gt;\(\left( \frac{7}{10} (4^N - 4) + 2 \right) - B_N\)&lt;/span&gt;. We&amp;rsquo;d like to find &lt;span class="math"&gt;\(e_N\)&lt;/span&gt;, since it will make our lives easier.&lt;/p&gt;
&lt;p&gt;For odd &lt;span class="math"&gt;\(N\)&lt;/span&gt;, this is easy: &lt;span class="math"&gt;\(4^N - 4\)&lt;/span&gt; is divisible by &lt;span class="math"&gt;\(10\)&lt;/span&gt;, so the flooring is unnecessary, which makes &lt;span class="math"&gt;\(e_N = 0\)&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;For even &lt;span class="math"&gt;\(N\)&lt;/span&gt;, &lt;span class="math"&gt;\(4^N - 4\)&lt;/span&gt; is &lt;span class="math"&gt;\(2\)&lt;/span&gt; mod &lt;span class="math"&gt;\(10\)&lt;/span&gt;, and so &lt;span class="math"&gt;\(\frac{7}{10} (4^N - 4)\)&lt;/span&gt; is of the form &amp;ldquo;integer &lt;span class="math"&gt;\(+ \frac{7 \cdot 2}{10}\)&lt;/span&gt;&amp;rdquo;. This makes &lt;span class="math"&gt;\(e_N = 2/5\)&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;Now, we can find the difference between &lt;span class="math"&gt;\(B_N\)&lt;/span&gt; and &lt;span class="math"&gt;\(4 B_{N-1}\)&lt;/span&gt;:
&lt;/p&gt;
&lt;div class="math"&gt;$$
\begin{align*}
B_N - 4 B_{N-1} &amp;amp;= \left( \frac{7}{10} (4^N - 4) + 2 - e_N \right) - 4 \left( \frac{7}{10} (4^{N-1} - 4) + 2 - e_{N-1} \right) \\
&amp;amp;= \left( \frac{7}{10} (4^N - 4) + 2 - e_N \right) + \left( \frac{7}{10} (16 - 4^N) - 8 + 4 e_{N-1} \right) \\
&amp;amp;= \frac{7}{10} (16 - 4) - 6 + 4 e_{N-1} - e_N \\
&amp;amp;= \frac{12}{5} + 4 e_{N-1} - e_N
\end{align*}
$$&lt;/div&gt;
&lt;p&gt;For odd &lt;span class="math"&gt;\(N\)&lt;/span&gt;, this is &lt;span class="math"&gt;\(\frac{12}{5} + \frac{8}{5} - 0 = 4\)&lt;/span&gt;. For even &lt;span class="math"&gt;\(N\)&lt;/span&gt;, this is &lt;span class="math"&gt;\(\frac{12}{5} + 0 - \frac{2}{5} = 2\)&lt;/span&gt;. Check.&lt;/p&gt;
&lt;p&gt;Now, we don&amp;rsquo;t know for sure that these &lt;span class="math"&gt;\(B_N\)&lt;/span&gt; are upper bounds on our score. That proof relied on &lt;span class="math"&gt;\(p_\infty\)&lt;/span&gt; actually being &lt;span class="math"&gt;\(7/10\)&lt;/span&gt;. But when I take a computer and search for good strategies, I found lots of strategies that acheive &lt;span class="math"&gt;\(B_N\)&lt;/span&gt;, and none that surpass it. That&amp;rsquo;s pretty suggestive that this conjecture is right.&lt;/p&gt;
&lt;p&gt;But computer-generated strategies don&amp;rsquo;t give good intution, and my program starts to struggle at about &lt;span class="math"&gt;\(N = 11\)&lt;/span&gt;. Can we come up with a way to construct strategies that hit &lt;span class="math"&gt;\(B_N\)&lt;/span&gt;?&lt;/p&gt;
&lt;h1&gt;Finite Strategies, Part II&lt;/h1&gt;
&lt;p&gt;We&amp;rsquo;ll start with the following &lt;span class="math"&gt;\(3\)&lt;/span&gt;-hat strategy, and build it up into &lt;span class="math"&gt;\(4\)&lt;/span&gt;-hat and &lt;span class="math"&gt;\(5\)&lt;/span&gt;-hat strategies. (I&amp;rsquo;ve picked a symmetric one, for ease of presentation). It has score &lt;span class="math"&gt;\(44\)&lt;/span&gt;:&lt;/p&gt;
&lt;!-- TODO can i show a grid giving the score? --&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Hats&lt;/td&gt;
&lt;td&gt;&lt;span class="math"&gt;\(\B\B\B\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math"&gt;\(\W\B\B\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math"&gt;\(\B\W\B\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math"&gt;\(\W\W\B\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math"&gt;\(\B\B\W\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math"&gt;\(\W\B\W\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math"&gt;\(\B\W\W\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math"&gt;\(\W\W\W\)&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Choice&lt;/td&gt;
&lt;td&gt;&lt;span class="math"&gt;\(1\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math"&gt;\(2\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math"&gt;\(1\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math"&gt;\(1\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math"&gt;\(3\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math"&gt;\(2\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math"&gt;\(3\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math"&gt;\(1\)&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;It&amp;rsquo;s easy to extend to a &lt;span class="math"&gt;\(4\)&lt;/span&gt;-hat strategy, by just ignoring the last hat and applying the original strategy. But obviously this doesn&amp;rsquo;t improve the probability of winning, and it just increases the score to &lt;span class="math"&gt;\(4 \cdot 44 = 176\)&lt;/span&gt;, which is a little less than &lt;span class="math"&gt;\(B_4 = 178\)&lt;/span&gt;. Somehow we need to squeeze out an additional two points.&lt;/p&gt;
&lt;p&gt;The key observation is that when we designed the &lt;span class="math"&gt;\(3\)&lt;/span&gt;-hat strategy, it didn&amp;rsquo;t matter what our decision was when seeing &lt;span class="math"&gt;\(\B\B\B\)&lt;/span&gt; or &lt;span class="math"&gt;\(\W\W\W\)&lt;/span&gt;. When you see your partner with a monochromatic stack of hats, you know that your choice doesn&amp;rsquo;t matter. But when we extended this to a &lt;span class="math"&gt;\(4\)&lt;/span&gt;-hat strategy, those decisons were copied over to &lt;span class="math"&gt;\(\B\B\B\W\)&lt;/span&gt; and &lt;span class="math"&gt;\(\W\W\W\B\)&lt;/span&gt;, where now they might matter! (They still won&amp;rsquo;t matter for &lt;span class="math"&gt;\(\B\B\B\B\)&lt;/span&gt; and &lt;span class="math"&gt;\(\W\W\W\W\)&lt;/span&gt; of course.)&lt;/p&gt;
&lt;p&gt;Let&amp;rsquo;s just focus on the case where both Alice and Bob have one of these &amp;ldquo;almost monochromatic&amp;rdquo; stacks. Right now, they&amp;rsquo;ll both say &amp;ldquo;1&amp;rdquo;, and will only win when their stacks are identical. If they change their strategy so that &lt;span class="math"&gt;\(\B\B\B\W \to 4\)&lt;/span&gt;, then they&amp;rsquo;ll win all four possible matchups.
&lt;/p&gt;
&lt;div class="math"&gt;$$
\begin{matrix}
\\
\textrm{Alice's hats} \\
\\
\textrm{Bob's hats}
\end{matrix}
\qquad
\begin{matrix}
\hphantom{\B\B\B} \downarrow \\
\B\B\B\W \\
\hphantom{\B\B\B} \downarrow \\
\B\B\B\W \\
\end{matrix}
\qquad
\begin{matrix}
\downarrow \hphantom{\B\B\B} \\
\B\B\B\W \\
\hphantom{\B\B\B} \downarrow \\
\W\W\W\B \\
\end{matrix}
\qquad
\begin{matrix}
\hphantom{\B\B\B} \downarrow \\
\W\W\W\B \\
\downarrow \hphantom{\B\B\B} \\
\B\B\B\W \\
\end{matrix}
\qquad
\begin{matrix}
\downarrow \hphantom{\B\B\B} \\
\W\W\W\B \\
\downarrow \hphantom{\B\B\B} \\
\W\W\W\B \\
\end{matrix}
$$&lt;/div&gt;
&lt;p&gt;That could be our extra two points we need. We just need to confirm that this tweak didn&amp;rsquo;t have a negative effect elsewhere.&lt;/p&gt;
&lt;p&gt;If the matchup doesn&amp;rsquo;t involve &lt;span class="math"&gt;\(\B\B\B\W\)&lt;/span&gt;, then obviously the result is unaffected. So all we have to look at are matchups of the form &amp;ldquo;&lt;span class="math"&gt;\(\B\B\B\W\)&lt;/span&gt; vs &amp;lsquo;anything other than &lt;span class="math"&gt;\(\B\B\B\W\)&lt;/span&gt; and &lt;span class="math"&gt;\(\W\W\W\B\)&lt;/span&gt;&amp;rsquo;&amp;ldquo;. Before our tweak, we won exactly half of these matchups. Afterwards, the first player will answer &amp;ldquo;1&amp;rdquo;, &amp;ldquo;2&amp;rdquo;, or &amp;ldquo;3&amp;rdquo;, and the second player will answer &amp;ldquo;4&amp;rdquo;. The first player is guaranteed to pick a black hat, and since the second player is equally likely to pick a white or black hat, we still win exactly half of our matchups. So we have a score of &lt;span class="math"&gt;\(178\)&lt;/span&gt;, as desired!&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;How about &lt;span class="math"&gt;\(N = 5\)&lt;/span&gt;? We could try the same approach &amp;ndash; extend and tweak the &lt;span class="math"&gt;\(\B\B\B\B\W\)&lt;/span&gt; state &amp;ndash; but that would only get us to &lt;span class="math"&gt;\(4 \cdot 178 + 2 = 714\)&lt;/span&gt;, which is still two points away from our target of &lt;span class="math"&gt;\(B_5 = 716\)&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;The key is to think about why tweaking &lt;span class="math"&gt;\(\B\B\B\W\)&lt;/span&gt; was a strict improvement on the old strategy. It didn&amp;rsquo;t affect the outcome against most other hat configurations. You can reframe our &lt;span class="math"&gt;\(4\)&lt;/span&gt;-hat strategy as similar to our augumented &amp;ldquo;first-white&amp;rdquo; strategy:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Split the &lt;span class="math"&gt;\(4\)&lt;/span&gt; hats you see into a block of &lt;span class="math"&gt;\(3\)&lt;/span&gt; and a block of &lt;span class="math"&gt;\(1\)&lt;/span&gt;.&lt;/li&gt;
&lt;li&gt;If the first block is not monochromatic, apply the &lt;span class="math"&gt;\(3\)&lt;/span&gt;-hat strategy.&lt;/li&gt;
&lt;li&gt;If it is, apply the following strategy:&lt;/li&gt;
&lt;/ul&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Hats&lt;/td&gt;
&lt;td&gt;&lt;span class="math"&gt;\((\B\B\B)\B\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math"&gt;\((\W\W\W)\B\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math"&gt;\((\B\B\B)\W\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math"&gt;\((\W\W\W)\W\)&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Choice&lt;/td&gt;
&lt;td&gt;&lt;span class="math"&gt;\(1\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math"&gt;\(1\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math"&gt;\(4\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math"&gt;\(1\)&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;That table should look familar; it&amp;rsquo;s essentially our &lt;span class="math"&gt;\(2\)&lt;/span&gt;-hat strategy from earlier on, but using the monochromatic block as a single hat!&lt;/p&gt;
&lt;p&gt;This provides an interesting way to build strategies. If we have an &lt;span class="math"&gt;\(N\)&lt;/span&gt;-hat strategy &lt;span class="math"&gt;\(S\)&lt;/span&gt;, and an &lt;span class="math"&gt;\(M\)&lt;/span&gt;-hat strategy &lt;span class="math"&gt;\(T\)&lt;/span&gt;, then we can combine them into an &lt;span class="math"&gt;\((N+M-1)\)&lt;/span&gt;-hat strategy that has a potentially better score.&lt;/p&gt;
&lt;p&gt;Let &lt;span class="math"&gt;\(p\)&lt;/span&gt; be the win rate of &lt;span class="math"&gt;\(S\)&lt;/span&gt;, and &lt;span class="math"&gt;\(q\)&lt;/span&gt; the win rate of &lt;span class="math"&gt;\(T\)&lt;/span&gt;. Then we can find the win rate of this new strategy.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;If both players have a non-monochromatic first block, then the conditional win rate here is &lt;span class="math"&gt;\(p^\ast\)&lt;/span&gt;, which we know how to compute.&lt;/li&gt;
&lt;li&gt;If both players have a monochromatic first block, then the conditional win rate is just &lt;span class="math"&gt;\(q\)&lt;/span&gt;.&lt;/li&gt;
&lt;li&gt;If only one player has a monochromatic first block, then I claim they can only win half the time.&lt;ul&gt;
&lt;li&gt;Say Alice has the monochromatic first block, and Bob doesn&amp;rsquo;t. Then Alice will only ever answer a number between &lt;span class="math"&gt;\(1\)&lt;/span&gt; and &lt;span class="math"&gt;\(N\)&lt;/span&gt;.&lt;/li&gt;
&lt;li&gt;Imagine flipping all of Bob&amp;rsquo;s hats; since Alice will still pick into her first block, it won&amp;rsquo;t change the color of the hat she picks. But it does flip the color of Bob&amp;rsquo;s choice.&lt;/li&gt;
&lt;li&gt;This pairs every win with a loss, and vice versa, so they must be equal in number.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This means the total win rate of this strategy is:
&lt;/p&gt;
&lt;div class="math"&gt;$$
\begin{align*}
p_{new} &amp;amp;= p^\ast \frac{(2^N - 2)^2}{4^N} + \frac{1}{2} \frac{2 \cdot 2 \cdot (2^N - 2)}{4^N} + q \frac{2^2}{4^N} \\
&amp;amp;= \frac{4^N p - 2^{N+1} + 2}{4^N} + \frac{2^{N+1} - 4}{4^N} + \frac{4q}{4^N} \\
&amp;amp;= \frac{4^N p + 4q - 2}{4^N} \\
&amp;amp;= p + \frac{4q - 2}{4^N}
\end{align*} 
$$&lt;/div&gt;
&lt;p&gt;Interestingly enough, this doesn&amp;rsquo;t depend on the particular strategy chosen, only its win rate. Converting this into a score-based equation, where &lt;span class="math"&gt;\(s\)&lt;/span&gt; is the score of &lt;span class="math"&gt;\(S\)&lt;/span&gt;, and &lt;span class="math"&gt;\(t\)&lt;/span&gt; the score of &lt;span class="math"&gt;\(T\)&lt;/span&gt;, we get:
&lt;/p&gt;
&lt;div class="math"&gt;$$ s_{new}  = 4^{M-1} s + (t - 4^M / 2) $$&lt;/div&gt;
&lt;p&gt;That last term can be interpreted as &amp;ldquo;score above halfway&amp;rdquo;. I don&amp;rsquo;t know if that&amp;rsquo;s meaningful, but it&amp;rsquo;s crisp.&lt;/p&gt;
&lt;p&gt;Let&amp;rsquo;s try to make a good &lt;span class="math"&gt;\(5\)&lt;/span&gt;-hat strategy with this. We know that combining a &lt;span class="math"&gt;\(4\)&lt;/span&gt; and &lt;span class="math"&gt;\(2\)&lt;/span&gt; hat strategy doesn&amp;rsquo;t work (we get a score of &lt;span class="math"&gt;\(4 \cdot 178 + (10 - 8) = 714\)&lt;/span&gt;). How about &lt;span class="math"&gt;\(3\)&lt;/span&gt; and &lt;span class="math"&gt;\(3\)&lt;/span&gt;? We&amp;rsquo;d get &lt;span class="math"&gt;\(16 \cdot 44 + (44 - 32) = 716\)&lt;/span&gt;. That works!&lt;/p&gt;
&lt;p&gt;For completeness&amp;rsquo;s sake, let&amp;rsquo;s check out &lt;span class="math"&gt;\((2, 4)\)&lt;/span&gt;. The score would be &lt;span class="math"&gt;\(64 \cdot 10 + (178 - 128) = 710\)&lt;/span&gt;. Not great, which kind of makes sense. Front-loading the &lt;span class="math"&gt;\(2\)&lt;/span&gt;-hat strategy, which is worse than the &lt;span class="math"&gt;\(4\)&lt;/span&gt;-hat strategy, is a bad idea.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;Using this idea, we can construct strategies with scores of &lt;span class="math"&gt;\(B_N\)&lt;/span&gt; for all &lt;span class="math"&gt;\(N\)&lt;/span&gt;.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;For &lt;span class="math"&gt;\(N = 1, 2, 3\)&lt;/span&gt; we have explicit examples.&lt;/li&gt;
&lt;li&gt;For even &lt;span class="math"&gt;\(N\)&lt;/span&gt;, extend an &lt;span class="math"&gt;\((N-1)\)&lt;/span&gt;-hat strategy by the optimal &lt;span class="math"&gt;\(2\)&lt;/span&gt;-hat strategy. This has a score of &lt;span class="math"&gt;\(4 B_{N-1} + (10 - 8) = B_N\)&lt;/span&gt;.&lt;/li&gt;
&lt;li&gt;For odd &lt;span class="math"&gt;\(N\)&lt;/span&gt;, extend an &lt;span class="math"&gt;\((N-2)\)&lt;/span&gt;-hat strategy by the optimal &lt;span class="math"&gt;\(3\)&lt;/span&gt;-hat strategy. This has a score of &lt;span class="math"&gt;\(16 B_{N-2} + (44 - 32) = 16 B_{N-2} + 12\)&lt;/span&gt;. This is &lt;span class="math"&gt;\(4 B_{N-1} + 4 = B_N\)&lt;/span&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;Final Thoughts&lt;/h1&gt;
&lt;p&gt;Okay, we&amp;rsquo;ve defined a series &lt;span class="math"&gt;\(B_N\)&lt;/span&gt;, and shown we can construct strategies for &lt;span class="math"&gt;\(N\)&lt;/span&gt;-hat games with a score of &lt;span class="math"&gt;\(B_N\)&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;If &lt;span class="math"&gt;\(p_\infty = 7/10\)&lt;/span&gt;, then we know that &lt;span class="math"&gt;\(B_N\)&lt;/span&gt; is an upper bound on our possible scores, which makes the strategies described above optimal. And conversely, if these finite strategies are optimal, then we can prove &lt;span class="math"&gt;\(p_\infty = 7/10\)&lt;/span&gt;.&lt;/p&gt;
&lt;!-- TODO figure this out lol --&gt;
&lt;p&gt;I don&amp;rsquo;t quite have a proof figured out, because there&amp;rsquo;s some measurability criterion I&amp;rsquo;m missing, but the gist of it is: it should be the case that an infinite strategy can be approximated arbitrarily well by an &lt;span class="math"&gt;\(N\)&lt;/span&gt;-hat strategy, as long as we allow &lt;span class="math"&gt;\(N\)&lt;/span&gt; to be large. If &lt;span class="math"&gt;\(p_\infty\)&lt;/span&gt; were larger than &lt;span class="math"&gt;\(7/10\)&lt;/span&gt;, we&amp;rsquo;d be able to find a finite strategy with success rate higher than &lt;span class="math"&gt;\(7/10\)&lt;/span&gt;. But &lt;span class="math"&gt;\(B_N / 4^N\)&lt;/span&gt; is always less than &lt;span class="math"&gt;\(7/10\)&lt;/span&gt;:&lt;/p&gt;
&lt;div class="math"&gt;$$ B_N = \left \lfloor \frac{7}{10} (4^N - 4) + 2 \right \rfloor = \left \lfloor \frac{7}{10} 4^N - \frac{8}{10} \right \rfloor $$&lt;/div&gt;
&lt;p&gt;So proving one of these two claims is sufficient for proving the other. Unfortunately, I can&amp;rsquo;t prove either one of them.&lt;/p&gt;
&lt;p&gt;I&amp;rsquo;ve proven via computer search that the finite strategies described up to &lt;span class="math"&gt;\(N = 8\)&lt;/span&gt; are optimal, which is reassuring, but certainly not a proof.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;Interestingly enough, it doesn&amp;rsquo;t seem to matter if we restrict ourselves to symmetric strategies. We seem to get just as successful strategies even when we&amp;rsquo;re limited like that.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;One possible way to prove an upper bound is to show some kind of relation between a given &lt;span class="math"&gt;\(N\)&lt;/span&gt;-hat strategy, and an &lt;span class="math"&gt;\((N-1)\)&lt;/span&gt;-hat strategy derived from it. The difficult part here is that unless you remove a hat from both players at once, you end up in a situation where players have different numbers of hats, which I really don&amp;rsquo;t want to think about.&lt;/p&gt;
&lt;p&gt;But I do want to throw a computer at it!&lt;/p&gt;
&lt;p&gt;I wrote up a &amp;ldquo;relaxation&amp;rdquo; algorithm, that starts with a random strategy for Alice, computes Bob&amp;rsquo;s best response to it, then Alice&amp;rsquo;s best response to that, and so on, until we hit a fixed point. Repeating this over and over again gave the following table of scores:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math"&gt;\(1\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math"&gt;\(2\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math"&gt;\(3\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math"&gt;\(4\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math"&gt;\(5\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math"&gt;\(6\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math"&gt;\(7\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math"&gt;\(8\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math"&gt;\(9\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math"&gt;\(10\)&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;span class="math"&gt;\(1\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math"&gt;\(2\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math"&gt;\(4\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math"&gt;\(8\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math"&gt;\(16\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math"&gt;\(32\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math"&gt;\(64\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math"&gt;\(128\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math"&gt;\(256\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math"&gt;\(512\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math"&gt;\(1024\)&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;span class="math"&gt;\(2\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math"&gt;\(4\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math"&gt;\(10\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math"&gt;\(20\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math"&gt;\(40\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math"&gt;\(80\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math"&gt;\(160\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math"&gt;\(320\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math"&gt;\(640\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math"&gt;\(1280\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math"&gt;\(2560\)&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;span class="math"&gt;\(3\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math"&gt;\(8\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math"&gt;\(20\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math"&gt;\(44\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math"&gt;\(88\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math"&gt;\(176\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math"&gt;\(352\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math"&gt;\(704\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math"&gt;\(1408\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math"&gt;\(2816\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math"&gt;\(5632\)&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;span class="math"&gt;\(4\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math"&gt;\(16\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math"&gt;\(40\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math"&gt;\(88\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math"&gt;\(178\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math"&gt;\(356\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math"&gt;\(712\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math"&gt;\(1424\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math"&gt;\(2848\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math"&gt;\(5696\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math"&gt;\(11392\)&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;span class="math"&gt;\(5\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math"&gt;\(32\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math"&gt;\(80\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math"&gt;\(176\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math"&gt;\(356\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math"&gt;\(716\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math"&gt;\(1432\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math"&gt;\(2864\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math"&gt;\(5728\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math"&gt;\(11456\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math"&gt;\(22912\)&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;span class="math"&gt;\(6\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math"&gt;\(64\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math"&gt;\(160\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math"&gt;\(352\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math"&gt;\(712\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math"&gt;\(1432\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math"&gt;\(2866\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math"&gt;\(5732\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math"&gt;\(11464\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math"&gt;\(22928\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math"&gt;\(45856\)&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;span class="math"&gt;\(7\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math"&gt;\(128\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math"&gt;\(320\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math"&gt;\(704\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math"&gt;\(1424\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math"&gt;\(2864\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math"&gt;\(5732\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math"&gt;\(11468\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math"&gt;\(22936\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math"&gt;\(45872\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math"&gt;\(91744\)&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;span class="math"&gt;\(8\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math"&gt;\(256\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math"&gt;\(640\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math"&gt;\(1408\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math"&gt;\(2848\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math"&gt;\(5728\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math"&gt;\(11464\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math"&gt;\(22936\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math"&gt;\(45874\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math"&gt;\(91748\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math"&gt;\(183496\)&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;span class="math"&gt;\(9\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math"&gt;\(512\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math"&gt;\(1280\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math"&gt;\(2816\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math"&gt;\(5696\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math"&gt;\(11456\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math"&gt;\(22928\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math"&gt;\(45872\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math"&gt;\(91748\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math"&gt;\(183500\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math"&gt;\(367000\)&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;span class="math"&gt;\(10\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math"&gt;\(1024\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math"&gt;\(2560\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math"&gt;\(5632\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math"&gt;\(11392\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math"&gt;\(22912\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math"&gt;\(45856\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math"&gt;\(91744\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math"&gt;\(183496\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math"&gt;\(367000\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math"&gt;\(734002\)&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;It seems to follow a&amp;hellip; pattern? Not a nice pattern, but a pattern. Say you have &lt;span class="math"&gt;\(a_{m,n}\)&lt;/span&gt;, where &lt;span class="math"&gt;\(m &amp;gt; n\)&lt;/span&gt;. Then:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;To step &amp;ldquo;away from the diagonal&amp;rdquo;, i.e., to &lt;span class="math"&gt;\(a_{m+1,n}\)&lt;/span&gt;, then you just double the score.&lt;/li&gt;
&lt;li&gt;To step &amp;ldquo;toward the diagonal&amp;rdquo;, i.e., to &lt;span class="math"&gt;\(a_{m, n+1}\)&lt;/span&gt;, then you double and add &lt;span class="math"&gt;\(2^k\)&lt;/span&gt;, where &lt;span class="math"&gt;\(k\)&lt;/span&gt; is &lt;span class="math"&gt;\(m - 1 - 2 \lfloor n / 2 \rfloor\)&lt;/span&gt;.&lt;ul&gt;
&lt;li&gt;In other words, &lt;span class="math"&gt;\(k\)&lt;/span&gt; goes &lt;span class="math"&gt;\(m-1, m-1, m-3, m-3, m-5, m-5, \ldots\)&lt;/span&gt;, until it ends in either &lt;span class="math"&gt;\(2, 2\)&lt;/span&gt; or &lt;span class="math"&gt;\(3, 3, 1\)&lt;/span&gt;, at which point we arrive at the diagonal itself.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;No idea if that&amp;rsquo;s helpful, or can be cleaned up into anything nice.&lt;/p&gt;
&lt;!-- Clean up python code and link to it? --&gt;

&lt;script type="text/javascript"&gt;if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) {
    var align = "center",
        indent = "0em",
        linebreak = "false";

    if (false) {
        align = (screen.width &lt; 768) ? "left" : align;
        indent = (screen.width &lt; 768) ? "0em" : indent;
        linebreak = (screen.width &lt; 768) ? 'true' : linebreak;
    }

    var mathjaxscript = document.createElement('script');
    mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#';
    mathjaxscript.type = 'text/javascript';
    mathjaxscript.src = 'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.3/latest.js?config=TeX-AMS-MML_HTMLorMML';

    var configscript = document.createElement('script');
    configscript.type = 'text/x-mathjax-config';
    configscript[(window.opera ? "innerHTML" : "text")] =
        "MathJax.Hub.Config({" +
        "    config: ['MMLorHTML.js']," +
        "    TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'none' } }," +
        "    jax: ['input/TeX','input/MathML','output/HTML-CSS']," +
        "    extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js']," +
        "    displayAlign: '"+ align +"'," +
        "    displayIndent: '"+ indent +"'," +
        "    showMathMenu: true," +
        "    messageStyle: 'normal'," +
        "    tex2jax: { " +
        "        inlineMath: [ ['\\\\(','\\\\)'] ], " +
        "        displayMath: [ ['$$','$$'] ]," +
        "        processEscapes: true," +
        "        preview: 'TeX'," +
        "    }, " +
        "    'HTML-CSS': { " +
        "        availableFonts: ['STIX', 'TeX']," +
        "        preferredFont: 'STIX'," +
        "        styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'inherit ! important'} }," +
        "        linebreaks: { automatic: "+ linebreak +", width: '90% container' }," +
        "    }, " +
        "}); " +
        "if ('default' !== 'default') {" +
            "MathJax.Hub.Register.StartupHook('HTML-CSS Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax['HTML-CSS'].FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
            "MathJax.Hub.Register.StartupHook('SVG Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax.SVG.FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
        "}";

    (document.body || document.getElementsByTagName('head')[0]).appendChild(configscript);
    (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript);
}
&lt;/script&gt;</content><category term="misc"></category><category term="puzzles"></category></entry><entry><title>The Dehn Invariant, or, Tangrams In Space</title><link href="https://mathmondays.com/dehn-invariant" rel="alternate"></link><published>2020-03-30T00:00:00-07:00</published><updated>2020-03-30T00:00:00-07:00</updated><author><name>Henry Swanson</name></author><id>tag:mathmondays.com,2020-03-30:/dehn-invariant</id><summary type="html">&lt;p&gt;&lt;span class="mathdefs"&gt;
&lt;span class="math"&gt;\(\newcommand{\ZZ}{\Bbb Z}
\newcommand{\QQ}{\Bbb Q}
\newcommand{\RR}{\Bbb R}\)&lt;/span&gt;
&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;Fans of wooden children’s toys may remember &lt;a href="https://en.wikipedia.org/wiki/Tangram"&gt;tangrams&lt;/a&gt;, a puzzle composed of 7 flat pieces that can be rearranged into numerous different configurations.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Tangrams in square and cat configurations" src="/images/dehn/tangrams.svg"/&gt;&lt;/p&gt;
&lt;p&gt;As mathematicians, we’re interested in shapes that are slightly simpler than cats or houses.&lt;/p&gt;
&lt;script type='text/javascript'&gt;if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) {
    var align = "center",
        indent = "0em",
        linebreak = "false";

    if (false) {
        align = (screen.width &lt; 768) ? "left" : align;
        indent = (screen.width &lt; 768) ? "0em" : indent;
        linebreak = (screen.width &lt; 768) ? 'true' : linebreak;
    }

    var mathjaxscript = document.createElement('script');
    mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#';
    mathjaxscript.type = 'text/javascript';
    mathjaxscript.src = 'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.3/latest.js?config=TeX-AMS-MML_HTMLorMML';

    var configscript = document.createElement('script');
    configscript.type = 'text/x-mathjax-config';
    configscript[(window.opera ? "innerHTML" : "text")] =
        "MathJax.Hub.Config({" +
        "    config: ['MMLorHTML.js']," +
        "    TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'none' } }," +
        "    jax: ['input/TeX','input/MathML','output/HTML-CSS']," +
        "    extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js']," +
        "    displayAlign: '"+ align +"'," +
        "    displayIndent: '"+ indent +"'," +
        "    showMathMenu: true," +
        "    messageStyle: 'normal'," +
        "    tex2jax: { " +
        "        inlineMath: [ ['\\\\(','\\\\)'] ], " +
        "        displayMath: [ ['$$','$$'] ]," +
        "        processEscapes: true," +
        "        preview: 'TeX'," +
        "    }, " +
        "    'HTML-CSS': { " +
        "        availableFonts: ['STIX', 'TeX']," +
        "        preferredFont: 'STIX'," +
        "        styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'inherit ! important'} }," +
        "        linebreaks: { automatic: "+ linebreak +", width: '90% container' }," +
        "    }, " +
        "}); " +
        "if ('default' !== 'default') {" +
            "MathJax.Hub.Register.StartupHook('HTML-CSS Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax['HTML-CSS'].FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
            "MathJax.Hub.Register.StartupHook('SVG Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax.SVG.FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
        "}";

    (document.body || document.getElementsByTagName('head')[0]).appendChild(configscript);
    (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript);
}
&lt;/script&gt;</summary><content type="html">&lt;p&gt;&lt;span class="mathdefs"&gt;
&lt;span class="math"&gt;\(\newcommand{\ZZ}{\Bbb Z}
\newcommand{\QQ}{\Bbb Q}
\newcommand{\RR}{\Bbb R}\)&lt;/span&gt;
&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;Fans of wooden children’s toys may remember &lt;a href="https://en.wikipedia.org/wiki/Tangram"&gt;tangrams&lt;/a&gt;, a puzzle composed of 7 flat pieces that can be rearranged into numerous different configurations.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Tangrams in square and cat configurations" src="/images/dehn/tangrams.svg"&gt;&lt;/p&gt;
&lt;p&gt;As mathematicians, we’re interested in shapes that are slightly simpler than cats or houses.&lt;/p&gt;

&lt;p&gt;For example, we might try to design a set of tangrams that can be rearranged into an equilateral triangle. One possibility is shown below.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Equidecomposition of square and triangle" src="/images/dehn/square-to-triangle.svg"&gt;&lt;/p&gt;
&lt;p&gt;How about a pentagon?&lt;/p&gt;
&lt;p&gt;&lt;img alt="Equidecomposition of square and pentagon" src="/images/dehn/square-to-pentagon.svg"&gt;&lt;/p&gt;
&lt;p&gt;We don’t have to start with a square, how about a set that can become a star or a triangle?&lt;/p&gt;
&lt;p&gt;&lt;img alt="Equidecomposition of six-pointed star and triangle" src="/images/dehn/star-to-triangle.svg"&gt;&lt;/p&gt;
&lt;p&gt;What pairs of polygons can we design tangram sets for? One way to reframe this problem is in terms of &lt;em&gt;scissors-congruence&lt;/em&gt;, which is pretty much what it sounds like. Two polygons are “scissors-congruent” if we can take the first polygon, make a finite number of straight-line cuts to it, and rearrange the pieces into the second polygon. Clearly, two polygons are scissors-congruent if and only if we can design a set of tangrams that connect the two.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;Given two polygons, how can we tell if they’re scissors-congruent?&lt;/p&gt;
&lt;p&gt;One thing we can do is check their areas, since, if they have different areas, there’s no way they can be scissors-congruent. It turns out that this is the &lt;em&gt;only&lt;/em&gt; obstacle – &lt;strong&gt;if two polygons have the same area, they must be scissors-congruent&lt;/strong&gt;!&lt;/p&gt;
&lt;p&gt;This surprising result is known as the Wallace–Bolyai–Gerwien theorem, and was proven in the 1830s. We’ll walk through a proof.&lt;/p&gt;
&lt;p&gt;It suffices to show that any polygon of area &lt;span class="math"&gt;\(A\)&lt;/span&gt; is scissors-congruent to an &lt;span class="math"&gt;\(A \times 1\)&lt;/span&gt; rectangle. This is because, if &lt;span class="math"&gt;\(P_1\)&lt;/span&gt; and &lt;span class="math"&gt;\(P_2\)&lt;/span&gt; are scissors-congruent to some third shape &lt;span class="math"&gt;\(Q\)&lt;/span&gt;, then we can rearrange &lt;span class="math"&gt;\(P_1\)&lt;/span&gt; into &lt;span class="math"&gt;\(P_2\)&lt;/span&gt; by going through &lt;span class="math"&gt;\(Q\)&lt;/span&gt; as an intermediate step. We start by breaking our polygon into triangles:&lt;/p&gt;
&lt;p&gt;&lt;img alt="Triangulation of a polygon" src="/images/dehn/wbg-1.svg"&gt;&lt;/p&gt;
&lt;p&gt;Next, we’ll transform each triangle into a rectangle, by cutting it halfway up its height, and folding down the apex:&lt;/p&gt;
&lt;p&gt;&lt;img alt="Cutting a triangle into a rectangle" src="/images/dehn/wbg-2.svg"&gt;&lt;/p&gt;
&lt;p&gt;Now we need to change the dimensions of this rectangle, but this step requires some creativity. We need the height of the rectangle to be between &lt;span class="math"&gt;\(1\)&lt;/span&gt; and &lt;span class="math"&gt;\(2\)&lt;/span&gt;. If it isn’t, we can repeatedly cut it in half until it does. (If the height is less than &lt;span class="math"&gt;\(1\)&lt;/span&gt;, then we run this process in reverse to double it instead.)&lt;/p&gt;
&lt;p&gt;&lt;img alt="Repeatedly halving a rectangle" src="/images/dehn/wbg-3.svg"&gt;&lt;/p&gt;
&lt;p&gt;Then, we do a sliding maneuver to convert this rectangle into one with height &lt;span class="math"&gt;\(1\)&lt;/span&gt;. Notice that we need &lt;span class="math"&gt;\(u &amp;lt; 1\)&lt;/span&gt;, or else &lt;span class="math"&gt;\(u \ell\)&lt;/span&gt; would be greater than &lt;span class="math"&gt;\(\ell\)&lt;/span&gt;, and we couldn’t draw this diagram.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Minor width adjustment of a rectangle" src="/images/dehn/wbg-4.svg"&gt;&lt;/p&gt;
&lt;p&gt;After doing this to all the triangles, the final step is to glue all these rectangles together, end-to-end, to get the desired &lt;span class="math"&gt;\(A \times 1\)&lt;/span&gt; rectangle.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;The natural question to ask next is: can we generalize this? What about 3D shapes? Are any two polyhedra of equal volume also scissors-congruent?&lt;/p&gt;
&lt;p&gt;This is the third of &lt;a href="https://en.wikipedia.org/wiki/Hilbert%27s_problems"&gt;Hilbert’s twenty-three problems&lt;/a&gt;, and his student, Max Dehn, proved in 1903 that, unlike in two dimensions, the answer is “no”. He did so by constructing a quantity (now known as the “Dehn invariant”) that stays unchanged under scissors-congruence. Two shapes with different Dehn invariants, therefore, cannot be scissors-congruent. For example, a cube and a tetrahedron of equal volume are not scissors-congruent.&lt;/p&gt;
&lt;p&gt;Unlike area and volume, the Dehn invariant isn’t as simple as a real number, and we’ll need to do a bit of legwork to define it. The key observation to make is that a cut can only do one of three things to an edge:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;miss it completely&lt;/li&gt;
&lt;li&gt;cut it at a point&lt;/li&gt;
&lt;li&gt;split it along its entire length&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;By looking at what these operations do to edges, we can cobble together a quantity that stays invariant.&lt;/p&gt;
&lt;p&gt;In the first situation, the edge stays unchanged. That one’s easy.&lt;/p&gt;
&lt;p&gt;In the second situation, one edge is turned into two edges. The new edges have the same dihedral angle&lt;sup id="sf-dehn-invariant-1-back"&gt;&lt;a href="#sf-dehn-invariant-1" class="simple-footnote" title="The dihedral angle of an edge is the angle between the two faces adjacent to it. You can think of it as a measure of the ‘sharpness’ of an edge; a 90° edge is like the edge of a countertop, but a 15° edge will cut like a knife."&gt;1&lt;/a&gt;&lt;/sup&gt; as the original, and their lengths sum to the original length.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Cutting an edge transversely" src="/images/dehn/edge-cut-transverse.svg"&gt;&lt;/p&gt;
&lt;p&gt;In the third situation, we again get two edges, but this time, the length stays the same, and the dihedral angle changes.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Cutting an edge along its length" src="/images/dehn/edge-cut-lengthwise.svg"&gt;&lt;/p&gt;
&lt;p&gt;Lastly, cuts also create new edges, as they slice through a face. We’d like these to count for nothing, count as zero.&lt;/p&gt;
&lt;p&gt;Now that we know what cuts do to edges, how do we use this to define an invariant? If an edge is represented by the ordered pair &lt;span class="math"&gt;\((\ell_i, \theta_i)\)&lt;/span&gt;, we want to enforce the following equivalence relations: 
&lt;/p&gt;
&lt;div class="math"&gt;$$ (\ell_1 + \ell_2, \theta) \cong (\ell_1, \theta) + (\ell_2, \theta) \qquad (\ell, \theta_1 + \theta_2) \cong (\ell, \theta_1) + (\ell, \theta_2) $$&lt;/div&gt;
&lt;p&gt;These two rules imply some further relations. Consider the sum of &lt;span class="math"&gt;\(n\)&lt;/span&gt; copies of &lt;span class="math"&gt;\((\ell, \theta)\)&lt;/span&gt;. Applying the first rule repeatedly gives &lt;span class="math"&gt;\((n \ell, \theta)\)&lt;/span&gt;, and the second rule gives &lt;span class="math"&gt;\((\ell, n \theta)\)&lt;/span&gt;. This can be extended to negative &lt;span class="math"&gt;\(n\)&lt;/span&gt; as well, so for any integer &lt;span class="math"&gt;\(n\)&lt;/span&gt;,
&lt;/p&gt;
&lt;div class="math"&gt;$$ n (\ell, \theta) = (n \ell, \theta) = (\ell, n \theta) $$&lt;/div&gt;
&lt;p&gt;If you’re familiar with tensors, you might notice that these are exactly the conditions for a tensor product! If not, don’t worry, you can think of these as ordered pairs still, but we’ll use the symbol &lt;span class="math"&gt;\(\otimes\)&lt;/span&gt; instead of a comma. It may make more sense when we go through the examples.&lt;/p&gt;
&lt;p&gt;We still have to deal with the new edges created from cuts in the faces, but these almost resolve themselves. The edges we create come in pairs with supplementary angles. So if the edge pair we create has length &lt;span class="math"&gt;\(\ell\)&lt;/span&gt;, we get &lt;span class="math"&gt;\((\ell, \theta) + (\ell, \pi - \theta) = (\ell, \pi)\)&lt;/span&gt;. Using the third rule above, we can drag a &lt;span class="math"&gt;\(2\)&lt;/span&gt; from the left to the right, giving us &lt;span class="math"&gt;\((\ell/2, 2\pi)\)&lt;/span&gt;. If we declare that &lt;span class="math"&gt;\(2\pi\)&lt;/span&gt; is equivalent to &lt;span class="math"&gt;\(0\)&lt;/span&gt; (a reasonable demand, given that we’re working with angles), then these edge pairs automatically cancel each other out, as desired.&lt;/p&gt;
&lt;p&gt;We can now define the Dehn invariant: it takes values in &lt;span class="math"&gt;\(\RR \otimes_\ZZ \RR/2 \pi\)&lt;/span&gt; (lengths and angles), and it’s equal to the sum of &lt;span class="math"&gt;\(\ell_i \otimes \theta_i\)&lt;/span&gt; over all the edges. Is something that concise truly unchanged by scissors-congruence?&lt;/p&gt;
&lt;p&gt;When we make a cut, either it misses an existing edge, and so the corresponding term in the sum does not change, or it intersects it, in which case that term is replaced by two terms that sum to the original. It also creates new edges, by cutting into the faces. But as we saw earlier, these edges come in pairs that sum to zero, and so the total value of the invariant remains unchanged.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;Armed with this invariant, we can now answer the question: are the cube and the tetrahedron are scissors-congruent? Let’s say both have volume 1. The cube has 12 edges, each with dihedral angle &lt;span class="math"&gt;\(\pi / 2\)&lt;/span&gt;. To get the volume to be &lt;span class="math"&gt;\(1\)&lt;/span&gt;, we need edges of length &lt;span class="math"&gt;\(1\)&lt;/span&gt;, so the Dehn invariant of this cube is:
&lt;/p&gt;
&lt;div class="math"&gt;$$ 12 (1 \otimes \frac{\pi}{2}) = 3 (1 \otimes 2 \pi) = (3 \otimes 2 \pi) = 0 $$&lt;/div&gt;
&lt;p&gt;A tetrahedron has 6 edges, each with dihedral angle &lt;span class="math"&gt;\(\arccos(1/3)\)&lt;/span&gt;. The volume of a tetrahedron with side length &lt;span class="math"&gt;\(a\)&lt;/span&gt; is &lt;span class="math"&gt;\(a^3 / 6 \sqrt 2\)&lt;/span&gt;, so the side length of our tetrahedron needs to be &lt;span class="math"&gt;\(a = (72)^{1/6}\)&lt;/span&gt;, making the Dehn invariant equal to:
&lt;/p&gt;
&lt;div class="math"&gt;$$ 6 (a \otimes \arccos(1/3)) = 6 a \otimes \arccos(1/3) $$&lt;/div&gt;
&lt;p&gt;With some knowledge of modules, one can show that this is non-zero,
&lt;sup id="sf-dehn-invariant-2-back"&gt;&lt;a href="#sf-dehn-invariant-2" class="simple-footnote" title="First, note that for any rational \(p/q\), we have \(\ell \otimes \frac{p}{q} \pi = \frac{\ell}{2q} \otimes 2 p \pi = 0\). This means that \(\RR \otimes_\ZZ \RR/2\pi \cong \RR \otimes_\ZZ \RR/(2\pi\QQ)\). Since both of those modules are divisible, this is equal to \(\RR \otimes_\QQ \RR/(2 \pi \QQ)\), which, being a tensor product of \(\QQ\)-vector spaces, is a \(\QQ\)-vector space itself. In particular, if \(\ell \ne 0\) and \(\theta \notin 2 \pi \QQ\), then \(\ell \otimes \theta\) is a non-zero vector."&gt;2&lt;/a&gt;&lt;/sup&gt;
but the crux of the idea is that &lt;span class="math"&gt;\(\arccos(1/3)\)&lt;/span&gt; is not a rational multiple of &lt;span class="math"&gt;\(\pi\)&lt;/span&gt;, so we can never get the right hand side of this tensor to collapse to zero. This shows that no matter how many pieces you cut it into, a cube can never be reassembled into a tetrahedron.&lt;/p&gt;
&lt;p&gt;One interesting consequence of this: in geometry class, you probably saw some cut-and-paste constructions for proving the area of a parallelogram, or a triangle. This result shows there can never be such a proof for pyramids – calculus is unavoidable!&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;A final note: we’ve shown that there are at least two obstructions for two scissors-congruence in 3D: volume and Dehn invariant. Are they the only ones? The answer is yes! In other words, if two polyhedra do have the same volume and Dehn invariant, then they are indeed scissors-congruent. The proof of that is much harder, and a good presentation can be found &lt;a href="http://www.math.brown.edu/~res/MathNotes/jessen.pdf"&gt;here&lt;/a&gt;. &lt;/p&gt;
&lt;script type="text/javascript"&gt;if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) {
    var align = "center",
        indent = "0em",
        linebreak = "false";

    if (false) {
        align = (screen.width &lt; 768) ? "left" : align;
        indent = (screen.width &lt; 768) ? "0em" : indent;
        linebreak = (screen.width &lt; 768) ? 'true' : linebreak;
    }

    var mathjaxscript = document.createElement('script');
    mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#';
    mathjaxscript.type = 'text/javascript';
    mathjaxscript.src = 'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.3/latest.js?config=TeX-AMS-MML_HTMLorMML';

    var configscript = document.createElement('script');
    configscript.type = 'text/x-mathjax-config';
    configscript[(window.opera ? "innerHTML" : "text")] =
        "MathJax.Hub.Config({" +
        "    config: ['MMLorHTML.js']," +
        "    TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'none' } }," +
        "    jax: ['input/TeX','input/MathML','output/HTML-CSS']," +
        "    extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js']," +
        "    displayAlign: '"+ align +"'," +
        "    displayIndent: '"+ indent +"'," +
        "    showMathMenu: true," +
        "    messageStyle: 'normal'," +
        "    tex2jax: { " +
        "        inlineMath: [ ['\\\\(','\\\\)'] ], " +
        "        displayMath: [ ['$$','$$'] ]," +
        "        processEscapes: true," +
        "        preview: 'TeX'," +
        "    }, " +
        "    'HTML-CSS': { " +
        "        availableFonts: ['STIX', 'TeX']," +
        "        preferredFont: 'STIX'," +
        "        styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'inherit ! important'} }," +
        "        linebreaks: { automatic: "+ linebreak +", width: '90% container' }," +
        "    }, " +
        "}); " +
        "if ('default' !== 'default') {" +
            "MathJax.Hub.Register.StartupHook('HTML-CSS Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax['HTML-CSS'].FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
            "MathJax.Hub.Register.StartupHook('SVG Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax.SVG.FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
        "}";

    (document.body || document.getElementsByTagName('head')[0]).appendChild(configscript);
    (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript);
}
&lt;/script&gt;&lt;ol class="simple-footnotes"&gt;&lt;li id="sf-dehn-invariant-1"&gt;The dihedral angle of an edge is the angle between the two faces adjacent to it. You can think of it as a measure of the ‘sharpness’ of an edge; a 90° edge is like the edge of a countertop, but a 15° edge will cut like a knife. &lt;a href="#sf-dehn-invariant-1-back" class="simple-footnote-back"&gt;↩&lt;/a&gt;&lt;/li&gt;&lt;li id="sf-dehn-invariant-2"&gt;First, note that for any rational &lt;span class="math"&gt;\(p/q\)&lt;/span&gt;, we have &lt;span class="math"&gt;\(\ell \otimes \frac{p}{q} \pi = \frac{\ell}{2q} \otimes 2 p \pi = 0\)&lt;/span&gt;. This means that &lt;span class="math"&gt;\(\RR \otimes_\ZZ \RR/2\pi \cong \RR \otimes_\ZZ \RR/(2\pi\QQ)\)&lt;/span&gt;. Since both of those modules are divisible, this is equal to &lt;span class="math"&gt;\(\RR \otimes_\QQ \RR/(2 \pi \QQ)\)&lt;/span&gt;, which, being a tensor product of &lt;span class="math"&gt;\(\QQ\)&lt;/span&gt;-vector spaces, is a &lt;span class="math"&gt;\(\QQ\)&lt;/span&gt;-vector space itself. In particular, if &lt;span class="math"&gt;\(\ell \ne 0\)&lt;/span&gt; and &lt;span class="math"&gt;\(\theta \notin 2 \pi \QQ\)&lt;/span&gt;, then &lt;span class="math"&gt;\(\ell \otimes \theta\)&lt;/span&gt; is a non-zero vector. &lt;a href="#sf-dehn-invariant-2-back" class="simple-footnote-back"&gt;↩&lt;/a&gt;&lt;/li&gt;&lt;/ol&gt;</content><category term="misc"></category><category term="geometry"></category></entry><entry><title>The Mathematical Hydra</title><link href="https://mathmondays.com/hydra" rel="alternate"></link><published>2019-09-29T00:00:00-07:00</published><updated>2019-09-29T00:00:00-07:00</updated><author><name>Henry Swanson</name></author><id>tag:mathmondays.com,2019-09-29:/hydra</id><summary type="html">&lt;p&gt;Imagine you’re tasked with killing a hydra. As usual, the hydra is defeated when all of its heads are cut off, and whenever a head is cut off, the hydra grows new ones.&lt;/p&gt;
&lt;p&gt;However, this mathematical hydra is much more frightening than a “traditional” one. It’s got a tree-like structure – heads growing out of its heads – and it can regrow entire groups of heads at once! Can you still win?&lt;/p&gt;
&lt;p&gt;Also, this post is the first one with interactivity! Feel free to report bugs on the &lt;a href="https://github.com/HenrySwanson/HenrySwanson.github.io/issues"&gt;GitHub issues page&lt;/a&gt;.&lt;/p&gt;
</summary><content type="html">&lt;p&gt;Imagine you’re tasked with killing a hydra. As usual, the hydra is defeated when all of its heads are cut off, and whenever a head is cut off, the hydra grows new ones.&lt;/p&gt;
&lt;p&gt;However, this mathematical hydra is much more frightening than a “traditional” one. It’s got a tree-like structure – heads growing out of its heads – and it can regrow entire groups of heads at once! Can you still win?&lt;/p&gt;
&lt;p&gt;Also, this post is the first one with interactivity! Feel free to report bugs on the &lt;a href="https://github.com/HenrySwanson/HenrySwanson.github.io/issues"&gt;GitHub issues page&lt;/a&gt;.&lt;/p&gt;


&lt;hr&gt;
&lt;p&gt;For the purposes of our game, a hydra is a rooted tree. The root, on the left, is the body, and the leaves are the heads. Intermediate nodes are part of the necks of the hydra, and cannot (yet) be cut off.&lt;/p&gt;
&lt;p align="center"&gt;
&lt;img src="/images/hydra/anatomy.svg" width="70%" height="auto" alt="Anatomy of a hydra"&gt;
&lt;/p&gt;

&lt;p&gt;You can cut off one head at a time, and when you do, the hydra may grow more heads, according to the following rules:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;If the head is connected directly to the root, then the hydra does nothing.&lt;/li&gt;
&lt;li&gt;Otherwise, look at the parent node (the one directly underneath the one you just cut off). The hydra grows two new copies of that node &lt;em&gt;and all its children&lt;/em&gt;, attaching them to the grandparent as appropriate.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;p&gt;This is hard to convey through text, so let’s walk through an example. Let’s start with a pretty simple hydra, and cut off one of the heads. (Purple indicates newly-grown heads.)&lt;/p&gt;
&lt;p&gt;&lt;img alt="First step of killing the hydra" height="auto" src="/images/hydra/example-1.svg" width="100%"&gt;&lt;/p&gt;
&lt;p&gt;We used to have two heads, and four nodes total, but now we have three, and seven nodes. That’s not good. Let’s try chopping off another one.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Second step of killing the hydra" height="auto" src="/images/hydra/example-2.svg" width="100%"&gt;&lt;/p&gt;
&lt;p&gt;This increases the total number of heads, but now, we can cut off the three smallest heads, one at a time, without incident.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Third step of killing the hydra" height="auto" src="/images/hydra/example-3.svg" width="100%"&gt;&lt;/p&gt;
&lt;p&gt;We’ve made some visible progress now. Cutting off one of the remaining heads will reveal three more, but we can extinguish them easily.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Fourth step of killing the hydra" height="auto" src="/images/hydra/example-4.svg" width="100%"&gt;&lt;/p&gt;
&lt;p&gt;Repeating this process on the last head will kill the hydra.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Fifth step of killing the hydra" height="auto" src="/images/hydra/example-5.svg" width="100%"&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;We managed to defeat this hydra, but it was a pretty small one. What about something a bit larger? Let’s add one more head to that neck.&lt;/p&gt;
&lt;p&gt;This time, you can try to kill it yourself: the illustration below is interactive!&lt;/p&gt;
&lt;p&gt;&lt;button id="reset-button" type="button"&gt;Reset&lt;/button&gt;
&lt;span id="click-counter" style="float:right;"&gt;&lt;/span&gt;&lt;/p&gt;
&lt;div id="hydra-interactive" style="border-style: solid;border-width: 3px;border-radius: 5px;background-color: #fff"&gt;&lt;/div&gt;

&lt;hr&gt;
&lt;p&gt;Depending on how persistent you are, you might not be surprised to learn that you can indeed kill this hydra, though it’ll take tens of thousands of moves to do so (29528 moves by my count). In fact, you can kill any hydra, though I’ll make no guarantees about how long it will take.&lt;/p&gt;
&lt;p&gt;But what may be surprising is that you can’t avoid killing the hydra, even if you try. No matter how large the hydra, or what order you cut off its heads, you will always defeat it in a finite number of moves.&lt;/p&gt;
&lt;p&gt;And even better, this holds true even for faster-regenerating hydras. What if, instead of growing back two copies of the subtree, the hydra grows back three copies? Or a hundred? What if, on the &lt;span class="math"&gt;\(N\)&lt;/span&gt;th turn of the game, it grows back &lt;span class="math"&gt;\(N\)&lt;/span&gt; copies? &lt;span class="math"&gt;\(N^2\)&lt;/span&gt;? &lt;span class="math"&gt;\(N!\)&lt;/span&gt;? What if the hydra just gets to pick how many copies to regrow, as many as it wants?&lt;/p&gt;
&lt;p&gt;It doesn’t matter.&lt;/p&gt;
&lt;p&gt;You always win.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;The proof here relies on &lt;a href="https://en.wikipedia.org/wiki/Ordinal_number"&gt;ordinal numbers&lt;/a&gt;. If you’re not familiar, there’s a good &lt;a href="https://www.youtube.com/watch?v=SrU9YDoXE88"&gt;video from Vsauce&lt;/a&gt; about them. The key property to know is that the ordinals are “well-ordered”; that is, there is no infinitely long descending sequence&lt;sup id="sf-hydra-1-back"&gt;&lt;a href="#sf-hydra-1" class="simple-footnote" title="In fact, the ordinals are the prototype of every well-founded set, and this is what makes them important."&gt;1&lt;/a&gt;&lt;/sup&gt;.&lt;/p&gt;
&lt;p&gt;We assign an ordinal number to each hydra, in such a way that cutting off a head produces a hydra with a strictly smaller ordinal. As we play the hydra game, the sequence of hydras we encounter produces a corresponding sequence of ordinals. Since the ordinal sequence is strictly decreasing, it must eventually terminate, and so the hydra sequence must terminate as well. The only way that the hydra sequence can terminate is if we have no more heads to cut off; i.e., we’ve defeated the hydra.&lt;/p&gt;
&lt;p&gt;The assignment is done by assigning values to the nodes, and accumulating down to the root:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;A head is assigned &lt;span class="math"&gt;\(0\)&lt;/span&gt;. Similarly, a trivial (dead) hydra is assigned &lt;span class="math"&gt;\(0\)&lt;/span&gt;.&lt;/li&gt;
&lt;li&gt;If a node has children with ordinals &lt;span class="math"&gt;\(\alpha_1, \alpha_2, \ldots, \alpha_n\)&lt;/span&gt;, then we assign the ordinal &lt;span class="math"&gt;\(\omega^{\alpha_1} + \omega^{\alpha_2} + \cdots + \omega^{\alpha_n}\)&lt;/span&gt;.&lt;sup id="sf-hydra-2-back"&gt;&lt;a href="#sf-hydra-2" class="simple-footnote" title="Without loss of generality, we can relabel the subhydras so that the ordinals are non-strictly descending. This avoids problems coming from the non-commutativity of ordinal addition."&gt;2&lt;/a&gt;&lt;/sup&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;What happens when we cut off a head?&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;If it’s directly attached to the body, then it contributes a term of &lt;span class="math"&gt;\(\omega^0 = 1\)&lt;/span&gt; to the whole ordinal. Killing this head removes this term, decreasing the ordinal.&lt;/li&gt;
&lt;li&gt;Otherwise, consider the ordinal of that head’s parent and grandparent. Before we cut off the head, the ordinal of the parent must have been of the form &lt;span class="math"&gt;\(\alpha + 1\)&lt;/span&gt;. This means the ordinal of the grandparent has a term &lt;span class="math"&gt;\(\omega^{\alpha + 1}\)&lt;/span&gt;. When we cut off the head, the parent ordinal decreases to &lt;span class="math"&gt;\(\alpha\)&lt;/span&gt;, but there’s now two more copies of it. This replaces the &lt;span class="math"&gt;\(\omega^{\alpha + 1}\)&lt;/span&gt; term in the grandparent with &lt;span class="math"&gt;\(3 \omega^\alpha\)&lt;/span&gt;, which is strictly smaller. And because the rest of the tree remains unchanged, this means the ordinal assigned to the hydra as a whole also decreases.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;To illustrate this process, let’s look the ordinals that correspond to the hydras we saw earlier. It may help to read them in reverse order.&lt;/p&gt;
&lt;p align="center"&gt;
&lt;img src="/images/hydra/ordinals.svg" width="100%" height="auto" alt="Ordinal sequence for previous hydra"&gt;
&lt;/p&gt;

&lt;p&gt;We can also see why the hydra’s regeneration speed doesn’t matter. No matter how large &lt;span class="math"&gt;\(N\)&lt;/span&gt; is, as long as it’s finite, &lt;span class="math"&gt;\(\omega^{\alpha + 1}\)&lt;/span&gt; will be strictly larger than &lt;span class="math"&gt;\(N \omega^{\alpha}\)&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;One way to think about this is that a neck that forks at height &lt;span class="math"&gt;\(k+1\)&lt;/span&gt; is literally &lt;em&gt;infinitely worse&lt;/em&gt; than a neck that forks at height &lt;span class="math"&gt;\(k\)&lt;/span&gt;. By cutting off a head, you simplify it at height &lt;span class="math"&gt;\(k+1\)&lt;/span&gt;, at the expense of introducing some forking at height &lt;span class="math"&gt;\(k\)&lt;/span&gt;, which isn’t as bad.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;A last interesting fact: this proof relied on ordinal numbers, which have a whole lot of infinities (&lt;span class="math"&gt;\(\omega\)&lt;/span&gt;s) tied up in them. But everything in this hydra game is finite; from an initial hydra, there’s only finitely many hydras we can encounter, each of which has only finitely many heads. Is there a proof that avoids any mention of infinity?&lt;/p&gt;
&lt;p&gt;In 1982, Laurence Kirby and Jeff Paris proved that there isn’t, in the following sense: any proof technique strong enough to prove the hydra’s eventual demise is strong enough to prove the consistency of Peano arithmetic. In particular, it’s impossible to prove the hydra theorem from within Peano arithmetic.&lt;/p&gt;
&lt;hr&gt;
&lt;script src="/js/hydra/main.js"&gt;&lt;/script&gt;

&lt;script type="text/javascript"&gt;if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) {
    var align = "center",
        indent = "0em",
        linebreak = "false";

    if (false) {
        align = (screen.width &lt; 768) ? "left" : align;
        indent = (screen.width &lt; 768) ? "0em" : indent;
        linebreak = (screen.width &lt; 768) ? 'true' : linebreak;
    }

    var mathjaxscript = document.createElement('script');
    mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#';
    mathjaxscript.type = 'text/javascript';
    mathjaxscript.src = 'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.3/latest.js?config=TeX-AMS-MML_HTMLorMML';

    var configscript = document.createElement('script');
    configscript.type = 'text/x-mathjax-config';
    configscript[(window.opera ? "innerHTML" : "text")] =
        "MathJax.Hub.Config({" +
        "    config: ['MMLorHTML.js']," +
        "    TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'none' } }," +
        "    jax: ['input/TeX','input/MathML','output/HTML-CSS']," +
        "    extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js']," +
        "    displayAlign: '"+ align +"'," +
        "    displayIndent: '"+ indent +"'," +
        "    showMathMenu: true," +
        "    messageStyle: 'normal'," +
        "    tex2jax: { " +
        "        inlineMath: [ ['\\\\(','\\\\)'] ], " +
        "        displayMath: [ ['$$','$$'] ]," +
        "        processEscapes: true," +
        "        preview: 'TeX'," +
        "    }, " +
        "    'HTML-CSS': { " +
        "        availableFonts: ['STIX', 'TeX']," +
        "        preferredFont: 'STIX'," +
        "        styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'inherit ! important'} }," +
        "        linebreaks: { automatic: "+ linebreak +", width: '90% container' }," +
        "    }, " +
        "}); " +
        "if ('default' !== 'default') {" +
            "MathJax.Hub.Register.StartupHook('HTML-CSS Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax['HTML-CSS'].FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
            "MathJax.Hub.Register.StartupHook('SVG Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax.SVG.FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
        "}";

    (document.body || document.getElementsByTagName('head')[0]).appendChild(configscript);
    (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript);
}
&lt;/script&gt;&lt;ol class="simple-footnotes"&gt;&lt;li id="sf-hydra-1"&gt;In fact, the ordinals are the prototype of every well-founded set, and this is what makes them important. &lt;a href="#sf-hydra-1-back" class="simple-footnote-back"&gt;↩&lt;/a&gt;&lt;/li&gt;&lt;li id="sf-hydra-2"&gt;Without loss of generality, we can relabel the subhydras so that the ordinals are non-strictly descending. This avoids problems coming from the non-commutativity of ordinal addition. &lt;a href="#sf-hydra-2-back" class="simple-footnote-back"&gt;↩&lt;/a&gt;&lt;/li&gt;&lt;/ol&gt;</content><category term="misc"></category><category term="interactive"></category><category term="puzzles"></category><category term="mathematical-logic"></category></entry><entry><title>Safes and Keys</title><link href="https://mathmondays.com/safes-and-keys" rel="alternate"></link><published>2018-11-16T00:00:00-08:00</published><updated>2018-11-16T00:00:00-08:00</updated><author><name>Henry Swanson</name></author><id>tag:mathmondays.com,2018-11-16:/safes-and-keys</id><summary type="html">&lt;p&gt;Here’s a few similar puzzles with a common story:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;I have &lt;em&gt;n&lt;/em&gt; safes, each one with a unique key that opens it. Unfortunately, some prankster snuck into my office last night and stole my key ring. It seems they’ve randomly put the keys inside the safes (one key per safe), and locked them.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;We’ll play around with a few different conditions and see what chances we have of getting all safes unlocked, and at what cost.&lt;/p&gt;
</summary><content type="html">&lt;p&gt;Here&amp;rsquo;s a few similar puzzles with a common story:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;I have &lt;em&gt;n&lt;/em&gt; safes, each one with a unique key that opens it. Unfortunately, some prankster snuck into my office last night and stole my key ring. It seems they&amp;rsquo;ve randomly put the keys inside the safes (one key per safe), and locked them.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;We&amp;rsquo;ll play around with a few different conditions and see what chances we have of getting all safes unlocked, and at what cost.&lt;/p&gt;


&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;1) The prankster was a bit sloppy, and forgot to lock one of the safes. What is the probability I can unlock all of my safes?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;The key observation here, as with the subsequent problems, is to consider the arrangement of keys and safes as a permutation. Label the safes and keys &lt;span class="math"&gt;\(1\)&lt;/span&gt; to &lt;span class="math"&gt;\(n\)&lt;/span&gt;, and define &lt;span class="math"&gt;\(\pi(i)\)&lt;/span&gt; to be the number of the key inside the &lt;span class="math"&gt;\(i\)&lt;/span&gt;th safe. So, if we have key &lt;span class="math"&gt;\(1\)&lt;/span&gt;, we unlock safe &lt;span class="math"&gt;\(1\)&lt;/span&gt; to reveal key &lt;span class="math"&gt;\(\pi(1)\)&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;Under this interpretation, key &lt;span class="math"&gt;\(i\)&lt;/span&gt; lets us unlock all safes in the cycle containing &lt;span class="math"&gt;\(i\)&lt;/span&gt;; we open a safe, find a new key, track down the new safe, and repeat until we end up where we started. So, we want to know the probability that a randomly chosen permutation has exactly one cycle.&lt;/p&gt;
&lt;p&gt;This isn&amp;rsquo;t too hard; we can count the number of one-cycle permutations in a straightforward way. Given a permutation of one cycle, we start with element &lt;span class="math"&gt;\(1\)&lt;/span&gt;, we write out &lt;span class="math"&gt;\(\pi(1)\)&lt;/span&gt;, &lt;span class="math"&gt;\(\pi(\pi(1))\)&lt;/span&gt;, etc, until we loop back to &lt;span class="math"&gt;\(1\)&lt;/span&gt;. This produces an ordered list of &lt;span class="math"&gt;\(n\)&lt;/span&gt; numbers, starting with &lt;span class="math"&gt;\(1\)&lt;/span&gt;, and this uniquely determines the cycle. There are &lt;span class="math"&gt;\((n-1)!\)&lt;/span&gt; such lists, and so the probability of having exactly one cycle is &lt;span class="math"&gt;\((n-1)!/n! = 1/n\)&lt;/span&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;2) Say the prankster is sloppier, and leaves k safes unlocked. Now what is my probability of success?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;This one requires a little more thought. It&amp;rsquo;s tempting to consider permutations with &lt;span class="math"&gt;\(k\)&lt;/span&gt; cycles, but that&amp;rsquo;s not quite right. If there&amp;rsquo;s only one cycle, we&amp;rsquo;re sure to succeed, and furthermore, even if there are &lt;span class="math"&gt;\(k\)&lt;/span&gt; cycles, our success isn&amp;rsquo;t guaranteed: we could pick two safes in the same cycle.&lt;/p&gt;
&lt;p&gt;By symmetry, label our safes so that we&amp;rsquo;ve picked safes &lt;span class="math"&gt;\(1\)&lt;/span&gt;, &lt;span class="math"&gt;\(2\)&lt;/span&gt;, &amp;hellip;, &lt;span class="math"&gt;\(k\)&lt;/span&gt;. We&amp;rsquo;d like to know how many permutations have a cycle that completely avoid &lt;span class="math"&gt;\(1\)&lt;/span&gt; through &lt;span class="math"&gt;\(k\)&lt;/span&gt;. If, and only if, such a cycle is present, we fail to unlock all the safes.&lt;/p&gt;
&lt;p&gt;Let &lt;span class="math"&gt;\(a_i\)&lt;/span&gt; be the number of &amp;ldquo;good&amp;rdquo; permutations when there are &lt;span class="math"&gt;\(i\)&lt;/span&gt; safes. We will express &lt;span class="math"&gt;\(a_n\)&lt;/span&gt; in terms of smaller &lt;span class="math"&gt;\(a_i\)&lt;/span&gt;s, and solve the resulting recurrence relation.&lt;/p&gt;
&lt;p&gt;Given a permutation &lt;span class="math"&gt;\(\pi\)&lt;/span&gt;, we can split the set &lt;span class="math"&gt;\(\{ 1, \ldots n \}\)&lt;/span&gt; into two parts: those that have cycles intersecting &lt;span class="math"&gt;\(\{ 1, \ldots, k \}\)&lt;/span&gt;, and those that do not. (It may help to think of these sets as &amp;ldquo;reachable&amp;rdquo; and &amp;ldquo;unreachable&amp;rdquo; safes, respectively). Since &lt;span class="math"&gt;\(\pi\)&lt;/span&gt; never sends a reachable safe to an unreachable one, or vice versa, it induces permutations on both these sets. Also, knowing both these subpermutations, we can reconstruct &lt;span class="math"&gt;\(\pi\)&lt;/span&gt;. So, let&amp;rsquo;s count how many possible permutations there are on the reachable and unreachable sets.&lt;/p&gt;
&lt;p&gt;If there are &lt;span class="math"&gt;\(r\)&lt;/span&gt; reachable safes, then there are &lt;span class="math"&gt;\(a_r\)&lt;/span&gt; possible permutations induced on the reachable set, and &lt;span class="math"&gt;\((n-r)!\)&lt;/span&gt; induced on the unreachable one. (The reason we don&amp;rsquo;t get the full &lt;span class="math"&gt;\(r!\)&lt;/span&gt; on the reachable set is that some permutations would leave a safe unreachable, when it&amp;rsquo;s supposed to be reachable.) Furthermore, we have a choice of &lt;em&gt;which&lt;/em&gt; safes are reachable. The first &lt;span class="math"&gt;\(k\)&lt;/span&gt; safes must be reachable, so beyond that, we have &lt;span class="math"&gt;\(\binom{n-k}{r-k}\)&lt;/span&gt; more choices to make. Our recurrence relation is then:
&lt;/p&gt;
&lt;div class="math"&gt;$$ n! = \sum_{r = k}^n \binom{n-k}{r-k} a_r (n-r)! = \sum_{r = k}^n a_r \frac{(n-k)!}{(r-k)!} $$&lt;/div&gt;
&lt;p&gt;Since &lt;span class="math"&gt;\((n-k)!\)&lt;/span&gt; doesn&amp;rsquo;t depend on &lt;span class="math"&gt;\(r\)&lt;/span&gt;, we can pull it out to get a neater-looking form:
&lt;/p&gt;
&lt;div class="math"&gt;$$ \frac{n!}{(n-k)!} = \sum_{r=k}^n \frac{a_r}{(r-k)!} $$&lt;/div&gt;
&lt;p&gt;Now &lt;span class="math"&gt;\(n\)&lt;/span&gt; only shows up as an index, not anywhere in the summand. This lets us collapse our sum; take this term, and subtract it from the corresponding one for &lt;span class="math"&gt;\(n-1\)&lt;/span&gt;:
&lt;/p&gt;
&lt;div class="math"&gt;$$
\begin{align*}
\frac{n!}{(n-k)!} - \frac{(n-1)!}{(n-1-k)!} &amp;amp;= \left( \sum_{r=k}^n \frac{a_r}{(r-k)!} \right) - \left( \sum_{r=k}^{n-1} \frac{a_r}{(r-k)!} \right) \\
\frac{n!}{(n-k)!} - \frac{(n-1)!}{(n-1-k)!} &amp;amp;= \frac{a_n}{(n-k)!} \\
n! - (n-1)!(n-k) &amp;amp;= a_n \\
k \cdot (n-1)! &amp;amp;= a_n
\end{align*}
$$&lt;/div&gt;
&lt;p&gt;So there&amp;rsquo;s &lt;span class="math"&gt;\(k \cdot (n-1)!\)&lt;/span&gt; permutations in which we win. Since there&amp;rsquo;s &lt;span class="math"&gt;\(n!\)&lt;/span&gt; total, this gives our probability of success at &lt;span class="math"&gt;\(k/n\)&lt;/span&gt;.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;3) If the prankster is careful, and remembers to lock all the safes, then I have no choice but to break some of them open. What&amp;rsquo;s the expected number of safes I have to crack?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;This one&amp;rsquo;s much easier than 2). The question here is just &amp;ldquo;how many cycles are there in a random permutation&amp;rdquo;, and &lt;a href="/linearity-expectation"&gt;from a previous post&lt;/a&gt;, we know that&amp;rsquo;s &lt;span class="math"&gt;\(H_n\)&lt;/span&gt;, the &lt;span class="math"&gt;\(n\)&lt;/span&gt;th harmonic number.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;4) Putting it all together: if we start with &lt;span class="math"&gt;\(k\)&lt;/span&gt; safes unlocked, what&amp;rsquo;s the expected number of safes I have to crack open?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;I haven&amp;rsquo;t actually put this one on solid ground yet! It&amp;rsquo;s not coming out pretty.&lt;/p&gt;
&lt;script type="text/javascript"&gt;if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) {
    var align = "center",
        indent = "0em",
        linebreak = "false";

    if (false) {
        align = (screen.width &lt; 768) ? "left" : align;
        indent = (screen.width &lt; 768) ? "0em" : indent;
        linebreak = (screen.width &lt; 768) ? 'true' : linebreak;
    }

    var mathjaxscript = document.createElement('script');
    mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#';
    mathjaxscript.type = 'text/javascript';
    mathjaxscript.src = 'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.3/latest.js?config=TeX-AMS-MML_HTMLorMML';

    var configscript = document.createElement('script');
    configscript.type = 'text/x-mathjax-config';
    configscript[(window.opera ? "innerHTML" : "text")] =
        "MathJax.Hub.Config({" +
        "    config: ['MMLorHTML.js']," +
        "    TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'none' } }," +
        "    jax: ['input/TeX','input/MathML','output/HTML-CSS']," +
        "    extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js']," +
        "    displayAlign: '"+ align +"'," +
        "    displayIndent: '"+ indent +"'," +
        "    showMathMenu: true," +
        "    messageStyle: 'normal'," +
        "    tex2jax: { " +
        "        inlineMath: [ ['\\\\(','\\\\)'] ], " +
        "        displayMath: [ ['$$','$$'] ]," +
        "        processEscapes: true," +
        "        preview: 'TeX'," +
        "    }, " +
        "    'HTML-CSS': { " +
        "        availableFonts: ['STIX', 'TeX']," +
        "        preferredFont: 'STIX'," +
        "        styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'inherit ! important'} }," +
        "        linebreaks: { automatic: "+ linebreak +", width: '90% container' }," +
        "    }, " +
        "}); " +
        "if ('default' !== 'default') {" +
            "MathJax.Hub.Register.StartupHook('HTML-CSS Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax['HTML-CSS'].FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
            "MathJax.Hub.Register.StartupHook('SVG Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax.SVG.FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
        "}";

    (document.body || document.getElementsByTagName('head')[0]).appendChild(configscript);
    (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript);
}
&lt;/script&gt;</content><category term="misc"></category><category term="puzzles"></category><category term="combinatorics"></category></entry><entry><title>Ax-Grothendieck Theorem</title><link href="https://mathmondays.com/ax-grothendieck" rel="alternate"></link><published>2018-11-12T00:00:00-08:00</published><updated>2018-11-12T00:00:00-08:00</updated><author><name>Henry Swanson</name></author><id>tag:mathmondays.com,2018-11-12:/ax-grothendieck</id><summary type="html">&lt;p&gt;&lt;span class="mathdefs"&gt;
&lt;span class="math"&gt;\(\newcommand{\CC}{\Bbb C}
\newcommand{\FF}{\Bbb F}
\newcommand{\QQ}{\Bbb Q}
\newcommand{\FFx}[1]{\overline{\FF_{#1}}}
\newcommand{\ACF}{\mathbf{ACF}}
\newcommand{\cL}{\mathcal{L}}
\newcommand{\cT}{\mathcal{T}}\)&lt;/span&gt;
&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;The Ax-Grothendieck theorem is the statement:&lt;/p&gt;
&lt;div class="theorem-box"&gt;
&lt;div class="theorem-title"&gt;Ax-Grothendieck Theorem&lt;/div&gt;
&lt;p&gt;Let &lt;span class="math"&gt;\(f: \CC^n \to \CC^n\)&lt;/span&gt; be a polynomial map; that is, each coordinate &lt;span class="math"&gt;\(f_i: \CC^n \to \CC\)&lt;/span&gt; is a polynomial in the &lt;span class="math"&gt;\(n\)&lt;/span&gt; input variables.
Then, if &lt;span class="math"&gt;\(f\)&lt;/span&gt; is injective, it is surjective.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;This… doesn’t seem like a particularly exciting theorem. But it has a really exciting proof.&lt;/p&gt;
&lt;script type='text/javascript'&gt;if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) {
    var align = "center",
        indent = "0em",
        linebreak = "false";

    if (false) {
        align = (screen.width &lt; 768) ? "left" : align;
        indent = (screen.width &lt; 768) ? "0em" : indent;
        linebreak = (screen.width &lt; 768) ? 'true' : linebreak;
    }

    var mathjaxscript = document.createElement('script');
    mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#';
    mathjaxscript.type = 'text/javascript';
    mathjaxscript.src = 'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.3/latest.js?config=TeX-AMS-MML_HTMLorMML';

    var configscript = document.createElement('script');
    configscript.type = 'text/x-mathjax-config';
    configscript[(window.opera ? "innerHTML" : "text")] =
        "MathJax.Hub.Config({" +
        "    config: ['MMLorHTML.js']," +
        "    TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'none' } }," +
        "    jax: ['input/TeX','input/MathML','output/HTML-CSS']," +
        "    extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js']," +
        "    displayAlign: '"+ align +"'," +
        "    displayIndent: '"+ indent +"'," +
        "    showMathMenu: true," +
        "    messageStyle: 'normal'," +
        "    tex2jax: { " +
        "        inlineMath: [ ['\\\\(','\\\\)'] ], " +
        "        displayMath: [ ['$$','$$'] ]," +
        "        processEscapes: true," +
        "        preview: 'TeX'," +
        "    }, " +
        "    'HTML-CSS': { " +
        "        availableFonts: ['STIX', 'TeX']," +
        "        preferredFont: 'STIX'," +
        "        styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'inherit ! important'} }," +
        "        linebreaks: { automatic: "+ linebreak +", width: '90% container' }," +
        "    }, " +
        "}); " +
        "if ('default' !== 'default') {" +
            "MathJax.Hub.Register.StartupHook('HTML-CSS Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax['HTML-CSS'].FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
            "MathJax.Hub.Register.StartupHook('SVG Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax.SVG.FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
        "}";

    (document.body || document.getElementsByTagName('head')[0]).appendChild(configscript);
    (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript);
}
&lt;/script&gt;</summary><content type="html">&lt;p&gt;&lt;span class="mathdefs"&gt;
&lt;span class="math"&gt;\(\newcommand{\CC}{\Bbb C}
\newcommand{\FF}{\Bbb F}
\newcommand{\QQ}{\Bbb Q}
\newcommand{\FFx}[1]{\overline{\FF_{#1}}}
\newcommand{\ACF}{\mathbf{ACF}}
\newcommand{\cL}{\mathcal{L}}
\newcommand{\cT}{\mathcal{T}}\)&lt;/span&gt;
&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;The Ax-Grothendieck theorem is the statement:&lt;/p&gt;
&lt;div class="theorem-box"&gt;
&lt;div class="theorem-title"&gt;Ax-Grothendieck Theorem&lt;/div&gt;
&lt;p&gt;Let &lt;span class="math"&gt;\(f: \CC^n \to \CC^n\)&lt;/span&gt; be a polynomial map; that is, each coordinate &lt;span class="math"&gt;\(f_i: \CC^n \to \CC\)&lt;/span&gt; is a polynomial in the &lt;span class="math"&gt;\(n\)&lt;/span&gt; input variables.
Then, if &lt;span class="math"&gt;\(f\)&lt;/span&gt; is injective, it is surjective.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;This&amp;hellip; doesn&amp;rsquo;t seem like a particularly exciting theorem. But it has a really exciting proof.&lt;/p&gt;


&lt;hr&gt;
&lt;p&gt;The idea behind the proof isn&amp;rsquo;t algebraic, it isn&amp;rsquo;t topological, it&amp;rsquo;s not even geometric, it&amp;rsquo;s &lt;s&gt;DiGiorno&lt;/s&gt; model-theoretic!&lt;/p&gt;
&lt;p&gt;The spirit of the proof is as follows:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;if the theorem is false, then there is a disproof (a proof of the negation)&lt;/li&gt;
&lt;li&gt;this proof can be written in &amp;ldquo;first-order logic&amp;rdquo;, a particularly limited set of axioms&lt;/li&gt;
&lt;li&gt;because this proof is finitely long, and uses only first-order logic, it &amp;ldquo;can&amp;rsquo;t tell the difference&amp;rdquo; between &lt;span class="math"&gt;\(\CC\)&lt;/span&gt; and &lt;span class="math"&gt;\(\FFx{p}\)&lt;/span&gt; for large enough &lt;span class="math"&gt;\(p\)&lt;/span&gt;&lt;ul&gt;
&lt;li&gt;note: &lt;span class="math"&gt;\(\FFx{p}\)&lt;/span&gt; is the algebraic closure of the finite field &lt;span class="math"&gt;\(\FF_p\)&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;pick a large enough &lt;span class="math"&gt;\(p\)&lt;/span&gt;, and transfer our proof to &lt;span class="math"&gt;\(\FFx{p}\)&lt;/span&gt;; this won&amp;rsquo;t affect its structure or validity&lt;/li&gt;
&lt;li&gt;show that there is, in fact, no counterexample in &lt;span class="math"&gt;\(\FFx{p}\)&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;by contradiction, there is no disproof, and the theorem must be true&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This is an&amp;hellip; unusual proof strategy. I don&amp;rsquo;t usually think about my proofs as mathematical objects unto themselves. But that&amp;rsquo;s probably because I&amp;rsquo;m not a model theorist.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;First, we&amp;rsquo;ll get the last step out of the way.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Proof&lt;/em&gt;: Let &lt;span class="math"&gt;\(f: \FFx{p}^n \to \FFx{p}^n\)&lt;/span&gt; be injective. Pick an arbitrary target &lt;span class="math"&gt;\(y_i \in \FFx{p}^n\)&lt;/span&gt; to hit. Let &lt;span class="math"&gt;\(K \supseteq \FF_p\)&lt;/span&gt; be the field extension generated by the &lt;span class="math"&gt;\(y_i\)&lt;/span&gt; and the coefficients that show up in &lt;span class="math"&gt;\(f\)&lt;/span&gt;. Since all of these generators are algebraic over &lt;span class="math"&gt;\(\FF_p\)&lt;/span&gt;, and there&amp;rsquo;s finitely many of them, &lt;span class="math"&gt;\(K\)&lt;/span&gt; is finite. Also, since fields are closed under polynomial operations, &lt;span class="math"&gt;\(f(K^n) \subseteq K^n\)&lt;/span&gt;. But because &lt;span class="math"&gt;\(f\)&lt;/span&gt; is injective, and &lt;span class="math"&gt;\(K^n\)&lt;/span&gt; is finite, &lt;span class="math"&gt;\(f(K^n)\)&lt;/span&gt; must be all of &lt;span class="math"&gt;\(K^n\)&lt;/span&gt;, i.e., there&amp;rsquo;s some input &lt;span class="math"&gt;\(x_i\)&lt;/span&gt; such that &lt;span class="math"&gt;\(f(x_i) = y_i\)&lt;/span&gt;. Thus &lt;span class="math"&gt;\(f\)&lt;/span&gt; is surjective.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;Now for the exciting stuff.&lt;/p&gt;
&lt;p&gt;We have to figure out a way of taking proofs over &lt;span class="math"&gt;\(\CC\)&lt;/span&gt;, and translating them into proofs over &lt;span class="math"&gt;\(\FFx{p}\)&lt;/span&gt;. This is daunting, but it&amp;rsquo;s made easier by the fact that they are both algebraically closed fields, and so they have a shared pool of axioms. Of course, they are very different in other ways: &lt;span class="math"&gt;\(\CC\)&lt;/span&gt; is uncountable while &lt;span class="math"&gt;\(\FFx{p}\)&lt;/span&gt; is countable, they have different characteristic, etc. We have to show that our proof manipulations aren&amp;rsquo;t affected by these differences.&lt;/p&gt;
&lt;p&gt;Since this isn&amp;rsquo;t an intro to model theory post, I won&amp;rsquo;t be defining the basic terms. If these look unfamiliar, check out &lt;a href="https://www.lesswrong.com/posts/F6BrJFkqEhh22rFsZ/very-basic-model-theory"&gt;this post&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Let &lt;span class="math"&gt;\(\ACF\)&lt;/span&gt; be the theory of algebraically closed fields. We claim that it&amp;rsquo;s first-order, and it&amp;rsquo;s &lt;em&gt;almost&lt;/em&gt; complete.&lt;/p&gt;
&lt;p&gt;This is a theory in the language of rings, which is &lt;span class="math"&gt;\(\cL_{ring} = \{ +, \times, 0, 1 \}\)&lt;/span&gt;. Our axioms are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;the usual field axioms (these are all first-order)&lt;/li&gt;
&lt;li&gt;for each &lt;span class="math"&gt;\(d \ge 1\)&lt;/span&gt;, add the sentence &lt;span class="math"&gt;\(\forall a_0 \forall a_1 \cdots \forall a_d \exists x \ a_0 + a_1 x + \cdots a_d x^d = 0 \land a_d \ne 0\)&lt;/span&gt;&lt;ul&gt;
&lt;li&gt;this are first-order sentences, and together, they tell us that every non-constant polynomial has a root&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;So &lt;span class="math"&gt;\(\ACF\)&lt;/span&gt; is a first-order theory. It isn&amp;rsquo;t complete, of course. For example, the sentence &lt;span class="math"&gt;\(1 + 1 = 0\)&lt;/span&gt; is true in &lt;span class="math"&gt;\(\FFx{2}\)&lt;/span&gt;, but not in &lt;span class="math"&gt;\(\FFx{3}\)&lt;/span&gt; or &lt;span class="math"&gt;\(\CC\)&lt;/span&gt;. Turns out fields of different characteristic are&amp;hellip; different. No surprise there.&lt;/p&gt;
&lt;p&gt;So we define extensions of &lt;span class="math"&gt;\(\ACF\)&lt;/span&gt;, where we &lt;em&gt;do&lt;/em&gt; specify the characteristic. For a prime &lt;span class="math"&gt;\(p\)&lt;/span&gt;, define &lt;span class="math"&gt;\(S_p\)&lt;/span&gt; to be the sentence &lt;span class="math"&gt;\(1 + \cdots + 1 = 0\)&lt;/span&gt;, where there are &lt;span class="math"&gt;\(p\)&lt;/span&gt; copies of &lt;span class="math"&gt;\(1\)&lt;/span&gt;. Then the theory of algebraically closed fields of characteristic &lt;span class="math"&gt;\(p\)&lt;/span&gt; is &lt;span class="math"&gt;\(\ACF_p = \ACF \cup \{ S_p \}\)&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;What about characteristic &lt;span class="math"&gt;\(0\)&lt;/span&gt;? To force our field to have characteristic zero, we can throw in &lt;span class="math"&gt;\(\lnot S_p\)&lt;/span&gt; for all primes &lt;span class="math"&gt;\(p\)&lt;/span&gt;: &lt;span class="math"&gt;\(\ACF_0 = \ACF \cup \{ \lnot S_2, \lnot S_3, \lnot S_5, \ldots \}\)&lt;/span&gt;. This nails down exactly the algebraically closed fields of characteristic &lt;span class="math"&gt;\(0\)&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;We claim that &lt;span class="math"&gt;\(\ACF_0\)&lt;/span&gt; and &lt;span class="math"&gt;\(\ACF_p\)&lt;/span&gt; are complete theories.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;If that is indeed the case, then we can prove a stronger form of the Ax-Grothendieck theorem.&lt;/p&gt;
&lt;div class="theorem-box"&gt;
&lt;div class="theorem-title"&gt;Ax-Grothendieck Theorem (Stronger)&lt;/div&gt;
&lt;p&gt;Let &lt;span class="math"&gt;\(k\)&lt;/span&gt; be an algebraically closed field. If &lt;span class="math"&gt;\(f: k^n \to k^n\)&lt;/span&gt; is a polynomial map, then if &lt;span class="math"&gt;\(f\)&lt;/span&gt; is injective, it is surjective.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;&lt;em&gt;Proof&lt;/em&gt;: We start by breaking our claim into a number of first-order sentences. We can&amp;rsquo;t first-order define an arbitrary polynomial, so we&amp;rsquo;ll work with all polynomials of bounded degree. For a fixed &lt;span class="math"&gt;\(d\)&lt;/span&gt;, the sentence &amp;ldquo;for all polynomial maps &lt;span class="math"&gt;\(f\)&lt;/span&gt; of degree at most &lt;span class="math"&gt;\(d\)&lt;/span&gt;, injectivity of &lt;span class="math"&gt;\(f\)&lt;/span&gt; implies surjectivity of &lt;span class="math"&gt;\(f\)&lt;/span&gt;&amp;rdquo; can be expressed as a first-order sentence.&lt;/p&gt;
&lt;p&gt;First, introduce &lt;span class="math"&gt;\(n \cdot (d+1)\)&lt;/span&gt; variables for the coefficients of &lt;span class="math"&gt;\(f\)&lt;/span&gt;. The sentence &amp;ldquo;&lt;span class="math"&gt;\(f\)&lt;/span&gt; is injective&amp;rdquo; can be made first-order by taking &lt;span class="math"&gt;\(f(x) = f(y) \implies x = y\)&lt;/span&gt; and expanding out the coefficients of &lt;span class="math"&gt;\(f\)&lt;/span&gt;. Likewise, &amp;ldquo;&lt;span class="math"&gt;\(f\)&lt;/span&gt; is surjective&amp;rdquo; can be written as &lt;span class="math"&gt;\(\forall z \exists x \ f(x) = z\)&lt;/span&gt;, and expanding &lt;span class="math"&gt;\(f\)&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;As an example, if &lt;span class="math"&gt;\(n = 1, d = 2\)&lt;/span&gt;, our sentence is:
&lt;/p&gt;
&lt;div class="math"&gt;$$ \forall a_0 \forall a_1 \forall a_2 \ (\forall x \forall y \ a_2 x^2 + a_1 x + a_0 = a_2 y^2 + a_1 y + a_0 \implies x = y) $$&lt;/div&gt;
&lt;div class="math"&gt;$$ \implies \forall z \exists x \ a_2 x^2 + a_1 x + a_0 = z $$&lt;/div&gt;
&lt;p&gt;Since I literally never want to write out that sentence in the general case, let&amp;rsquo;s just call it &lt;span class="math"&gt;\(\phi_d\)&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;We&amp;rsquo;ll separately tackle the case of characteristic &lt;span class="math"&gt;\(p\)&lt;/span&gt; and characteristic &lt;span class="math"&gt;\(0\)&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;Let &lt;span class="math"&gt;\(p\)&lt;/span&gt; be any prime. Because &lt;span class="math"&gt;\(\ACF_p\)&lt;/span&gt; is complete, either there is a proof of &lt;span class="math"&gt;\(\phi_d\)&lt;/span&gt; or a proof of &lt;span class="math"&gt;\(\lnot \phi_d\)&lt;/span&gt;. The latter is impossible; if there were such a proof, then it would show that &lt;span class="math"&gt;\(\phi_d\)&lt;/span&gt; is false in &lt;span class="math"&gt;\(\FFx{p}\)&lt;/span&gt;, and we&amp;rsquo;ve proven before that it is true in this field. Therefore, &lt;span class="math"&gt;\(\ACF_p\)&lt;/span&gt; entails a proof of &lt;span class="math"&gt;\(\phi_d\)&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;Similarly, because &lt;span class="math"&gt;\(\ACF_0\)&lt;/span&gt; is complete, either it can prove &lt;span class="math"&gt;\(\phi_d\)&lt;/span&gt;, or it can prove &lt;span class="math"&gt;\(\lnot \phi_d\)&lt;/span&gt;. Again, for the sake of contradiction, we assume the latter. Let &lt;span class="math"&gt;\(P\)&lt;/span&gt; be a proof of &lt;span class="math"&gt;\(\phi_d\)&lt;/span&gt; from &lt;span class="math"&gt;\(\ACF_0\)&lt;/span&gt;. Since &lt;span class="math"&gt;\(P\)&lt;/span&gt; is finite, it can only use finitely many axioms. In particular, it can only use finitely many of the &lt;span class="math"&gt;\(\lnot S_p\)&lt;/span&gt;. So there&amp;rsquo;s some prime &lt;span class="math"&gt;\(q\)&lt;/span&gt; such that &lt;span class="math"&gt;\(\lnot S_q\)&lt;/span&gt; was not used in &lt;span class="math"&gt;\(P\)&lt;/span&gt;. Therefore, &lt;span class="math"&gt;\(P\)&lt;/span&gt; is also a valid proof in &lt;span class="math"&gt;\(\ACF_q\)&lt;/span&gt;. But we already know there are no proofs of &lt;span class="math"&gt;\(\lnot \phi_d\)&lt;/span&gt; from &lt;span class="math"&gt;\(\ACF_q\)&lt;/span&gt;, and so we&amp;rsquo;ve reached a contradiction. Therefore, there must be a proof of &lt;span class="math"&gt;\(\phi_d\)&lt;/span&gt; from &lt;span class="math"&gt;\(\ACF_0\)&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;Since &lt;span class="math"&gt;\(\ACF_p\)&lt;/span&gt; can prove &lt;span class="math"&gt;\(\phi_d\)&lt;/span&gt;, and &lt;span class="math"&gt;\(\ACF_0\)&lt;/span&gt; can prove &lt;span class="math"&gt;\(\phi_d\)&lt;/span&gt;, we know that &lt;span class="math"&gt;\(\phi_d\)&lt;/span&gt; is true in all algebraically closed fields &lt;span class="math"&gt;\(k\)&lt;/span&gt;, no matter what the characteristic of &lt;span class="math"&gt;\(k\)&lt;/span&gt; is. And since &lt;span class="math"&gt;\(\phi_d\)&lt;/span&gt; is true for all &lt;span class="math"&gt;\(d\)&lt;/span&gt;, we have proved the claim for polynomials of arbitrary degree.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;This proof is magical in two ways.&lt;/p&gt;
&lt;p&gt;One is that, despite there being no homomorphisms between &lt;span class="math"&gt;\(\FFx{p}\)&lt;/span&gt; and &lt;span class="math"&gt;\(\CC\)&lt;/span&gt;, we were able to somehow transport a claim between the two. This was possible not by looking at the structure of &lt;span class="math"&gt;\(\CC\)&lt;/span&gt; and &lt;span class="math"&gt;\(\FFx{p}\)&lt;/span&gt; themselves, but by using the structure of their axiomatizations. The reduction to only finitely many axioms is an example of the &lt;a href="https://en.wikipedia.org/wiki/Compactness_theorem"&gt;compactness theorem&lt;/a&gt;, a very useful logical principle.&lt;/p&gt;
&lt;p&gt;The other is that we never actually made use of &lt;span class="math"&gt;\(\phi_d\)&lt;/span&gt;! All we knew is that it was a first-order sentence, and that it was true in some model of &lt;span class="math"&gt;\(\ACF_p\)&lt;/span&gt; for each &lt;span class="math"&gt;\(p\)&lt;/span&gt;. Generalizing this argument, we get the following principle:&lt;/p&gt;
&lt;div class="theorem-box"&gt;
&lt;div class="theorem-title"&gt;Robinson's Principle&lt;/div&gt;
&lt;p&gt;If &lt;span class="math"&gt;\(\phi\)&lt;/span&gt; is a first-order sentence, then the following are equivalent:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;span class="math"&gt;\(\ACF_p\)&lt;/span&gt; proves &lt;span class="math"&gt;\(\phi\)&lt;/span&gt; for all but finitely many &lt;span class="math"&gt;\(p\)&lt;/span&gt;&lt;/li&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class="math"&gt;\(\ACF_p\)&lt;/span&gt; proves &lt;span class="math"&gt;\(\phi\)&lt;/span&gt; for infinitely many &lt;span class="math"&gt;\(p\)&lt;/span&gt;&lt;/li&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class="math"&gt;\(\ACF_0\)&lt;/span&gt; proves &lt;span class="math"&gt;\(\phi\)&lt;/span&gt;&lt;/li&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Furthermore, the following are equivalent for &lt;span class="math"&gt;\(r\)&lt;/span&gt; a prime or &lt;span class="math"&gt;\(0\)&lt;/span&gt;:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;span class="math"&gt;\(\ACF_r\)&lt;/span&gt; proves &lt;span class="math"&gt;\(\phi\)&lt;/span&gt;&lt;/li&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class="math"&gt;\(\phi\)&lt;/span&gt; is true in some algebraically closed field of characteristic &lt;span class="math"&gt;\(r\)&lt;/span&gt;&lt;/li&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class="math"&gt;\(\phi\)&lt;/span&gt; is true in all algebraically closed fields of characteristic &lt;span class="math"&gt;\(r\)&lt;/span&gt;&lt;/li&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;p&gt;For the first claim, obviously (1) implies (2). The proof that (2) implies (3) is essentially the proof we gave above: if &lt;span class="math"&gt;\(\phi\)&lt;/span&gt; can&amp;rsquo;t be proved from &lt;span class="math"&gt;\(\ACF_0\)&lt;/span&gt;, then &lt;span class="math"&gt;\(\lnot \phi\)&lt;/span&gt; can. This proof can only use finitely many of the &lt;span class="math"&gt;\(\lnot S_p\)&lt;/span&gt;, and there&amp;rsquo;s infinitely many &lt;span class="math"&gt;\(\ACF_p\)&lt;/span&gt; that prove &lt;span class="math"&gt;\(\phi\)&lt;/span&gt;, so there&amp;rsquo;s some &lt;span class="math"&gt;\(p\)&lt;/span&gt; we can transfer the proof to and get our contradiction. The proof that (3) implies (1) is similar: if there&amp;rsquo;s a proof of &lt;span class="math"&gt;\(\phi\)&lt;/span&gt; from &lt;span class="math"&gt;\(\ACF_0\)&lt;/span&gt;, it can be transferred to all but finitely many &lt;span class="math"&gt;\(\ACF_p\)&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;The second claim is a direct consequence of completeness of &lt;span class="math"&gt;\(\ACF_r\)&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;Combining these two claims gives some very powerful techniques. The way we used it is: to show something is true for all algebraically closed fields, it suffices to show it only for a single example at each prime &lt;span class="math"&gt;\(p\)&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;At this point, there is no more spooky magic, and the rest of the article is about justifying the completeness of &lt;span class="math"&gt;\(\ACF_p\)&lt;/span&gt; and &lt;span class="math"&gt;\(\ACF_0\)&lt;/span&gt;. Still cool though, IMO.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;First, we&amp;rsquo;ll state a popular theorem in model theory:&lt;/p&gt;
&lt;div class="theorem-box"&gt;
&lt;div class="theorem-title"&gt;Löwenheim–Skolem Theorem&lt;/div&gt;
&lt;p&gt;Let &lt;span class="math"&gt;\(\cT\)&lt;/span&gt; be a countable theory. If it has an infinite model, then for any infinite cardinal &lt;span class="math"&gt;\(\kappa\)&lt;/span&gt;, it has a model of size &lt;span class="math"&gt;\(\kappa\)&lt;/span&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Essentially, first-order logic is too limited to distinguish between different sizes of infinity; if there&amp;rsquo;s a model of one infinite size, there&amp;rsquo;s a model of all infinite sizes. The proof of this theorem is somewhat involved, and we won&amp;rsquo;t cover it here, but see &lt;a href="http://modeltheory.wikia.com/wiki/L%C3%B6wenheim-Skolem_Theorem"&gt;here&lt;/a&gt; for a proof.&lt;/p&gt;
&lt;p&gt;Using this, we can prove the Łoś–Vaught test:&lt;/p&gt;
&lt;div class="theorem-box"&gt;
&lt;div class="theorem-title"&gt;Łoś–Vaught Test&lt;/div&gt;
&lt;p&gt;Let &lt;span class="math"&gt;\(\cT\)&lt;/span&gt; be a theory and &lt;span class="math"&gt;\(\kappa\)&lt;/span&gt; be some infinite cardinal. We say that &lt;span class="math"&gt;\(\cT\)&lt;/span&gt; is &lt;span class="math"&gt;\(\kappa\)&lt;/span&gt;-categorical if there is exactly one model of &lt;span class="math"&gt;\(\cT\)&lt;/span&gt; of size &lt;span class="math"&gt;\(\kappa\)&lt;/span&gt;, up to isomorphism.
&lt;br&gt;&lt;br&gt;
If &lt;span class="math"&gt;\(\cT\)&lt;/span&gt; is &lt;span class="math"&gt;\(\kappa\)&lt;/span&gt;-categorical for some &lt;span class="math"&gt;\(\kappa\)&lt;/span&gt;, and has no finite models, then it is a complete theory.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;This is unexpected, at least in my opinion. But then again, model theory isn&amp;rsquo;t my forte. Maybe there&amp;rsquo;s some intution one can use here that I don&amp;rsquo;t have.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Proof&lt;/em&gt;: If &lt;span class="math"&gt;\(\cT\)&lt;/span&gt; isn&amp;rsquo;t complete, then there&amp;rsquo;s some &lt;span class="math"&gt;\(\phi\)&lt;/span&gt; such that &lt;span class="math"&gt;\(\cT\)&lt;/span&gt; proves neither &lt;span class="math"&gt;\(\phi\)&lt;/span&gt; nor &lt;span class="math"&gt;\(\lnot \phi\)&lt;/span&gt;. By the &lt;a href="https://en.wikipedia.org/wiki/G%C3%B6del%27s_completeness_theorem"&gt;completeness theorem&lt;/a&gt;, this means there&amp;rsquo;s a model &lt;span class="math"&gt;\(M\)&lt;/span&gt; of &lt;span class="math"&gt;\(\cT\)&lt;/span&gt; in which &lt;span class="math"&gt;\(\phi\)&lt;/span&gt; is true, and a model &lt;span class="math"&gt;\(M'\)&lt;/span&gt; of &lt;span class="math"&gt;\(\cT\)&lt;/span&gt; in which &lt;span class="math"&gt;\(\lnot \phi\)&lt;/span&gt; is true.&lt;/p&gt;
&lt;p&gt;Since all models of &lt;span class="math"&gt;\(\cT\)&lt;/span&gt; are infinite, both &lt;span class="math"&gt;\(M\)&lt;/span&gt; and &lt;span class="math"&gt;\(M'\)&lt;/span&gt; are infinite. This means that &lt;span class="math"&gt;\(M\)&lt;/span&gt; is an infinite model of &lt;span class="math"&gt;\(\cT \cup \{ \phi \}\)&lt;/span&gt;, thus we can apply Löwenheim–Skolem to get a model &lt;span class="math"&gt;\(N\)&lt;/span&gt; of &lt;span class="math"&gt;\(\cT \cup \{ \phi \}\)&lt;/span&gt; which has size &lt;span class="math"&gt;\(\kappa\)&lt;/span&gt;. Likewise, we use &lt;span class="math"&gt;\(M'\)&lt;/span&gt; to get a model &lt;span class="math"&gt;\(N'\)&lt;/span&gt; of &lt;span class="math"&gt;\(\cT \cup \{ \lnot \phi \}\)&lt;/span&gt; which has size &lt;span class="math"&gt;\(\kappa\)&lt;/span&gt;. But because &lt;span class="math"&gt;\(\cT\)&lt;/span&gt; is &lt;span class="math"&gt;\(\kappa\)&lt;/span&gt;-categorical and both &lt;span class="math"&gt;\(N\)&lt;/span&gt; and &lt;span class="math"&gt;\(N'\)&lt;/span&gt; are models of &lt;span class="math"&gt;\(\cT\)&lt;/span&gt;, they must be isomorphic. But because &lt;span class="math"&gt;\(\phi\)&lt;/span&gt; is true in &lt;span class="math"&gt;\(N\)&lt;/span&gt; and false in &lt;span class="math"&gt;\(N'\)&lt;/span&gt;, this is a contradiction.&lt;/p&gt;
&lt;p&gt;We&amp;rsquo;d like to apply the Łoś–Vaught test to &lt;span class="math"&gt;\(\ACF_p\)&lt;/span&gt; and &lt;span class="math"&gt;\(\ACF_0\)&lt;/span&gt;. Since all algebraically closed fields are infinite, it suffices to show that these theories are &lt;span class="math"&gt;\(\kappa\)&lt;/span&gt;-categoral for some &lt;span class="math"&gt;\(\kappa\)&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Proof&lt;/em&gt;: Let &lt;span class="math"&gt;\(\kappa\)&lt;/span&gt; be an uncountable cardinal and &lt;span class="math"&gt;\(K\)&lt;/span&gt; be an algebraically closed field of size &lt;span class="math"&gt;\(\kappa\)&lt;/span&gt;. Let &lt;span class="math"&gt;\(B\)&lt;/span&gt; be a transcendence basis of &lt;span class="math"&gt;\(K\)&lt;/span&gt; over its prime subfield &lt;span class="math"&gt;\(k\)&lt;/span&gt; (&lt;span class="math"&gt;\(\FF_p\)&lt;/span&gt; or &lt;span class="math"&gt;\(\QQ\)&lt;/span&gt;). &lt;a href="https://proofwiki.org/wiki/Field_of_Uncountable_Cardinality_K_has_Transcendence_Degree_K"&gt;A cardinality argument&lt;/a&gt; shows that &lt;span class="math"&gt;\(\|B\| = \kappa\)&lt;/span&gt; (this is where the uncountability of &lt;span class="math"&gt;\(\kappa\)&lt;/span&gt; is used; for example, &lt;span class="math"&gt;\(\overline{\QQ}(t_1, \ldots, t_n)\)&lt;/span&gt; has transcendence degree &lt;span class="math"&gt;\(n\)&lt;/span&gt;, but cardinality &lt;span class="math"&gt;\(\aleph_0\)&lt;/span&gt;). So, if &lt;span class="math"&gt;\(K'\)&lt;/span&gt; is another algebraically closed field, with the same cardinality and characteristic, and we pick a transcendence basis &lt;span class="math"&gt;\(B'\)&lt;/span&gt;, it will also have cardinality &lt;span class="math"&gt;\(\kappa\)&lt;/span&gt;. The bijection between &lt;span class="math"&gt;\(B\)&lt;/span&gt; and &lt;span class="math"&gt;\(B'\)&lt;/span&gt; induces an isomorphism between &lt;span class="math"&gt;\(k(B)\)&lt;/span&gt; and &lt;span class="math"&gt;\(k(B')\)&lt;/span&gt;. But since &lt;span class="math"&gt;\(K\)&lt;/span&gt; and &lt;span class="math"&gt;\(K'\)&lt;/span&gt; are algebraically closed, and algebraic over &lt;span class="math"&gt;\(k(B) \cong k(B')\)&lt;/span&gt;, they are algebraic closures of the same field, and are thus isomorphic!&lt;/p&gt;
&lt;p&gt;This proves that &lt;span class="math"&gt;\(\ACF_p\)&lt;/span&gt; and &lt;span class="math"&gt;\(\ACF_0\)&lt;/span&gt; are &lt;span class="math"&gt;\(\kappa\)&lt;/span&gt;-categorical for uncountable cardinals &lt;span class="math"&gt;\(\kappa\)&lt;/span&gt;. In particular, they&amp;rsquo;re &lt;span class="math"&gt;\(\kappa\)&lt;/span&gt;-categorical for at least one infinite cardinal, and so via the Łoś–Vaught test, we conclude they are complete.&lt;/p&gt;
&lt;script type="text/javascript"&gt;if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) {
    var align = "center",
        indent = "0em",
        linebreak = "false";

    if (false) {
        align = (screen.width &lt; 768) ? "left" : align;
        indent = (screen.width &lt; 768) ? "0em" : indent;
        linebreak = (screen.width &lt; 768) ? 'true' : linebreak;
    }

    var mathjaxscript = document.createElement('script');
    mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#';
    mathjaxscript.type = 'text/javascript';
    mathjaxscript.src = 'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.3/latest.js?config=TeX-AMS-MML_HTMLorMML';

    var configscript = document.createElement('script');
    configscript.type = 'text/x-mathjax-config';
    configscript[(window.opera ? "innerHTML" : "text")] =
        "MathJax.Hub.Config({" +
        "    config: ['MMLorHTML.js']," +
        "    TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'none' } }," +
        "    jax: ['input/TeX','input/MathML','output/HTML-CSS']," +
        "    extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js']," +
        "    displayAlign: '"+ align +"'," +
        "    displayIndent: '"+ indent +"'," +
        "    showMathMenu: true," +
        "    messageStyle: 'normal'," +
        "    tex2jax: { " +
        "        inlineMath: [ ['\\\\(','\\\\)'] ], " +
        "        displayMath: [ ['$$','$$'] ]," +
        "        processEscapes: true," +
        "        preview: 'TeX'," +
        "    }, " +
        "    'HTML-CSS': { " +
        "        availableFonts: ['STIX', 'TeX']," +
        "        preferredFont: 'STIX'," +
        "        styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'inherit ! important'} }," +
        "        linebreaks: { automatic: "+ linebreak +", width: '90% container' }," +
        "    }, " +
        "}); " +
        "if ('default' !== 'default') {" +
            "MathJax.Hub.Register.StartupHook('HTML-CSS Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax['HTML-CSS'].FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
            "MathJax.Hub.Register.StartupHook('SVG Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax.SVG.FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
        "}";

    (document.body || document.getElementsByTagName('head')[0]).appendChild(configscript);
    (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript);
}
&lt;/script&gt;</content><category term="misc"></category><category term="model-theory"></category></entry><entry><title>Wedderburn's Little Theorem</title><link href="https://mathmondays.com/wedderburn" rel="alternate"></link><published>2018-11-05T00:00:00-08:00</published><updated>2018-11-05T00:00:00-08:00</updated><author><name>Henry Swanson</name></author><id>tag:mathmondays.com,2018-11-05:/wedderburn</id><summary type="html">&lt;p&gt;&lt;span class="mathdefs"&gt;
&lt;span class="math"&gt;\(\newcommand{\ZZ}{\Bbb Z}
\newcommand{\QQ}{\Bbb Q}\)&lt;/span&gt;
&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;Some rings are closer to being fields than others. A &lt;strong&gt;domain&lt;/strong&gt; is a ring where we can do cancellation: if &lt;span class="math"&gt;\(ab = ac\)&lt;/span&gt; and &lt;span class="math"&gt;\(a \ne 0\)&lt;/span&gt;, then &lt;span class="math"&gt;\(b = c\)&lt;/span&gt;. Even closer is a &lt;strong&gt;division ring&lt;/strong&gt;, a ring in which every non-zero element has a multiplicative inverse. The only distinction between fields and division rings is that the latter may be non-commutative. For this reason, division rings are also called &lt;strong&gt;skew-fields&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;These form a chain of containments, each of which is strict:
fields &lt;span class="math"&gt;\(\subset\)&lt;/span&gt; division rings &lt;span class="math"&gt;\(\subset\)&lt;/span&gt; domains &lt;span class="math"&gt;\(\subset\)&lt;/span&gt; rings&lt;/p&gt;
&lt;p&gt;Some examples:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class="math"&gt;\(\ZZ\)&lt;/span&gt; is a domain&lt;/li&gt;
&lt;li&gt;&lt;span class="math"&gt;\(\ZZ/6\ZZ\)&lt;/span&gt; is not a domain&lt;/li&gt;
&lt;li&gt;the set of &lt;span class="math"&gt;\(n \times n\)&lt;/span&gt; matrices is not a domain; two non-zero matrices can multiply to zero&lt;/li&gt;
&lt;li&gt;&lt;span class="math"&gt;\(\QQ\)&lt;/span&gt; is a field (duh)&lt;/li&gt;
&lt;li&gt;the quaternions are a division ring&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Wedderburn’s theorem states that this hierarchy collapses for finite rings: every finite domain is a field.&lt;/p&gt;
&lt;script type='text/javascript'&gt;if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) {
    var align = "center",
        indent = "0em",
        linebreak = "false";

    if (false) {
        align = (screen.width &lt; 768) ? "left" : align;
        indent = (screen.width &lt; 768) ? "0em" : indent;
        linebreak = (screen.width &lt; 768) ? 'true' : linebreak;
    }

    var mathjaxscript = document.createElement('script');
    mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#';
    mathjaxscript.type = 'text/javascript';
    mathjaxscript.src = 'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.3/latest.js?config=TeX-AMS-MML_HTMLorMML';

    var configscript = document.createElement('script');
    configscript.type = 'text/x-mathjax-config';
    configscript[(window.opera ? "innerHTML" : "text")] =
        "MathJax.Hub.Config({" +
        "    config: ['MMLorHTML.js']," +
        "    TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'none' } }," +
        "    jax: ['input/TeX','input/MathML','output/HTML-CSS']," +
        "    extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js']," +
        "    displayAlign: '"+ align +"'," +
        "    displayIndent: '"+ indent +"'," +
        "    showMathMenu: true," +
        "    messageStyle: 'normal'," +
        "    tex2jax: { " +
        "        inlineMath: [ ['\\\\(','\\\\)'] ], " +
        "        displayMath: [ ['$$','$$'] ]," +
        "        processEscapes: true," +
        "        preview: 'TeX'," +
        "    }, " +
        "    'HTML-CSS': { " +
        "        availableFonts: ['STIX', 'TeX']," +
        "        preferredFont: 'STIX'," +
        "        styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'inherit ! important'} }," +
        "        linebreaks: { automatic: "+ linebreak +", width: '90% container' }," +
        "    }, " +
        "}); " +
        "if ('default' !== 'default') {" +
            "MathJax.Hub.Register.StartupHook('HTML-CSS Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax['HTML-CSS'].FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
            "MathJax.Hub.Register.StartupHook('SVG Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax.SVG.FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
        "}";

    (document.body || document.getElementsByTagName('head')[0]).appendChild(configscript);
    (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript);
}
&lt;/script&gt;</summary><content type="html">&lt;p&gt;&lt;span class="mathdefs"&gt;
&lt;span class="math"&gt;\(\newcommand{\ZZ}{\Bbb Z}
\newcommand{\QQ}{\Bbb Q}\)&lt;/span&gt;
&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;Some rings are closer to being fields than others. A &lt;strong&gt;domain&lt;/strong&gt; is a ring where we can do cancellation: if &lt;span class="math"&gt;\(ab = ac\)&lt;/span&gt; and &lt;span class="math"&gt;\(a \ne 0\)&lt;/span&gt;, then &lt;span class="math"&gt;\(b = c\)&lt;/span&gt;. Even closer is a &lt;strong&gt;division ring&lt;/strong&gt;, a ring in which every non-zero element has a multiplicative inverse. The only distinction between fields and division rings is that the latter may be non-commutative. For this reason, division rings are also called &lt;strong&gt;skew-fields&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;These form a chain of containments, each of which is strict:
fields &lt;span class="math"&gt;\(\subset\)&lt;/span&gt; division rings &lt;span class="math"&gt;\(\subset\)&lt;/span&gt; domains &lt;span class="math"&gt;\(\subset\)&lt;/span&gt; rings&lt;/p&gt;
&lt;p&gt;Some examples:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class="math"&gt;\(\ZZ\)&lt;/span&gt; is a domain&lt;/li&gt;
&lt;li&gt;&lt;span class="math"&gt;\(\ZZ/6\ZZ\)&lt;/span&gt; is not a domain&lt;/li&gt;
&lt;li&gt;the set of &lt;span class="math"&gt;\(n \times n\)&lt;/span&gt; matrices is not a domain; two non-zero matrices can multiply to zero&lt;/li&gt;
&lt;li&gt;&lt;span class="math"&gt;\(\QQ\)&lt;/span&gt; is a field (duh)&lt;/li&gt;
&lt;li&gt;the quaternions are a division ring&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Wedderburn&amp;rsquo;s theorem states that this hierarchy collapses for finite rings: every finite domain is a field.&lt;/p&gt;


&lt;hr&gt;
&lt;p&gt;First, we show that every finite domain is a division ring.&lt;/p&gt;
&lt;p&gt;Let &lt;span class="math"&gt;\(D\)&lt;/span&gt; be a finite domain, and &lt;span class="math"&gt;\(x \in D\)&lt;/span&gt; be non-zero. The map &lt;span class="math"&gt;\(f : D \to D\)&lt;/span&gt; given by &lt;span class="math"&gt;\(f(d) = xd\)&lt;/span&gt; is injective, which we get immediately from the definition of a domain. Because &lt;span class="math"&gt;\(D\)&lt;/span&gt; is finite, &lt;span class="math"&gt;\(f\)&lt;/span&gt; injective implies that &lt;span class="math"&gt;\(f\)&lt;/span&gt; is surjective as well. This means there&amp;rsquo;s some &lt;span class="math"&gt;\(y\)&lt;/span&gt; such that &lt;span class="math"&gt;\(f(y) = xy = 1\)&lt;/span&gt;. This makes &lt;span class="math"&gt;\(y\)&lt;/span&gt; a right-inverse of &lt;span class="math"&gt;\(x\)&lt;/span&gt;; is it also a left-inverse? Yes! Since &lt;span class="math"&gt;\(x = 1x = xyx\)&lt;/span&gt;, cancellation gives us &lt;span class="math"&gt;\(1 = yx\)&lt;/span&gt;.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;The next step, showing that every finite division ring is a field, is significantly trickier. We&amp;rsquo;ll continue, knowing that &lt;span class="math"&gt;\(D\)&lt;/span&gt; is a division ring.&lt;/p&gt;
&lt;p&gt;Our plan is to re-interpret &lt;span class="math"&gt;\(D\)&lt;/span&gt; as a vector space, to get some information about its size. Then, we&amp;rsquo;ll drop the additive structure, and apply some group theory to the multiplicative structure. Lastly, our result will be vulnerable to some elementary number theory.&lt;/p&gt;
&lt;p&gt;Let &lt;span class="math"&gt;\(Z\)&lt;/span&gt; be the center of &lt;span class="math"&gt;\(D\)&lt;/span&gt;; the set of elements that commute multiplicatively with everything in &lt;span class="math"&gt;\(D\)&lt;/span&gt;. The distributive law tells us that &lt;span class="math"&gt;\(Z\)&lt;/span&gt; is an abelian group under addition, and by definition, &lt;span class="math"&gt;\(Z^*\)&lt;/span&gt; is an abelian group under multiplication. This makes &lt;span class="math"&gt;\(Z\)&lt;/span&gt; a field, which allows us to apply some linear algebra to the problem.&lt;/p&gt;
&lt;p&gt;As with field extensions, a division ring containing a field is a vector space over that field; specifically, &lt;span class="math"&gt;\(D\)&lt;/span&gt; is a vector space over &lt;span class="math"&gt;\(Z\)&lt;/span&gt;, where vector addition is addition in &lt;span class="math"&gt;\(D\)&lt;/span&gt;, and scalar multiplication is multiplication by an element of &lt;span class="math"&gt;\(Z\)&lt;/span&gt;. This gives us some information about the size of &lt;span class="math"&gt;\(D\)&lt;/span&gt;. If &lt;span class="math"&gt;\(Z\)&lt;/span&gt; has size &lt;span class="math"&gt;\(q\)&lt;/span&gt;, and &lt;span class="math"&gt;\(D\)&lt;/span&gt; has dimension &lt;span class="math"&gt;\(n\)&lt;/span&gt; over &lt;span class="math"&gt;\(Z\)&lt;/span&gt;, then &lt;span class="math"&gt;\(D\)&lt;/span&gt; has size &lt;span class="math"&gt;\(q^n\)&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;Let&amp;rsquo;s look at some linear subspaces of &lt;span class="math"&gt;\(D\)&lt;/span&gt; (as a vector space). For an element &lt;span class="math"&gt;\(x \in D\)&lt;/span&gt;, let &lt;span class="math"&gt;\(C(x)\)&lt;/span&gt; be the set of all elements that commute with &lt;span class="math"&gt;\(x\)&lt;/span&gt; (this is the &lt;strong&gt;centralizer&lt;/strong&gt; of &lt;span class="math"&gt;\(x\)&lt;/span&gt;). We claim that this is a subspace of &lt;span class="math"&gt;\(D\)&lt;/span&gt;. It&amp;rsquo;s clearly closed under addition, and we claim it is also closed under scalar multiplication. If &lt;span class="math"&gt;\(y \in C(x)\)&lt;/span&gt; and &lt;span class="math"&gt;\(z \in Z\)&lt;/span&gt;, then it follows quickly that &lt;span class="math"&gt;\((zy)x = x(zy)\)&lt;/span&gt;, i.e., &lt;span class="math"&gt;\(zy \in C(x)\)&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;Because &lt;span class="math"&gt;\(C(x)\)&lt;/span&gt; is a linear subspace, it has dimension &lt;span class="math"&gt;\(q^k\)&lt;/span&gt; for some &lt;span class="math"&gt;\(1 \le k \le n\)&lt;/span&gt;. And if &lt;span class="math"&gt;\(x \notin Z\)&lt;/span&gt;, we know that both these inequalities are strict. If &lt;span class="math"&gt;\(k = n\)&lt;/span&gt;, then &lt;span class="math"&gt;\(C(x) = D\)&lt;/span&gt;, and &lt;span class="math"&gt;\(x\)&lt;/span&gt; is in fact in the center. If &lt;span class="math"&gt;\(k = 1\)&lt;/span&gt;, then &lt;span class="math"&gt;\(C(x) = Z\)&lt;/span&gt;, and since &lt;span class="math"&gt;\(x \in C(x)\)&lt;/span&gt; for sure, &lt;span class="math"&gt;\(x\)&lt;/span&gt; is again in &lt;span class="math"&gt;\(Z\)&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;Now we can apply some group theory. The &lt;a href="https://en.wikipedia.org/wiki/Conjugacy_class#Conjugacy_class_equation"&gt;class equation&lt;/a&gt; is a statement about the conjugacy classes of a group. The details are best saved for another post, but if we have a group &lt;span class="math"&gt;\(G\)&lt;/span&gt; with center &lt;span class="math"&gt;\(Z(G)\)&lt;/span&gt;, and &lt;span class="math"&gt;\(g_1, \ldots, g_r\)&lt;/span&gt; are distinct representatives of the non-trivial conjugacy classes, then
&lt;/p&gt;
&lt;div class="math"&gt;$$ |G| = |Z(G)| + \sum_{i=1}^r [G : C(g_i)] $$&lt;/div&gt;
&lt;p&gt;Essentially, this comes from the fact that &lt;span class="math"&gt;\([G : C(g_i)]\)&lt;/span&gt; is the number of conjugates of &lt;span class="math"&gt;\(g_i\)&lt;/span&gt;, and that the conjugacy classes partition &lt;span class="math"&gt;\(G\)&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;If we apply this to &lt;span class="math"&gt;\(D^*\)&lt;/span&gt;, and remember our observation about the size of &lt;span class="math"&gt;\(C(x)\)&lt;/span&gt;, then we get:
&lt;/p&gt;
&lt;div class="math"&gt;$$ q^n - 1 = (q - 1) + \sum_{i=1}^r \frac{q^n - 1}{q^{k_i} - 1}, \, 1 &amp;lt; k_i &amp;lt; n $$&lt;/div&gt;
&lt;p&gt;We claim that this can only happen when &lt;span class="math"&gt;\(n = 1\)&lt;/span&gt;; i.e., when &lt;span class="math"&gt;\(Z = D\)&lt;/span&gt;. This would prove that &lt;span class="math"&gt;\(D\)&lt;/span&gt; is a field! From here on out, it&amp;rsquo;s all number theory.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;First, we claim that each &lt;span class="math"&gt;\(k_i\)&lt;/span&gt; divides &lt;span class="math"&gt;\(n\)&lt;/span&gt;. Let &lt;span class="math"&gt;\(n = a k_i + b\)&lt;/span&gt; be the result of division with remainder. Since &lt;span class="math"&gt;\((q^n - 1)/(q^{k_i} - 1)\)&lt;/span&gt; is the index of some &lt;span class="math"&gt;\(C(x)\)&lt;/span&gt;, it&amp;rsquo;s an integer, so &lt;span class="math"&gt;\(q^{k_i} - 1\)&lt;/span&gt; divides &lt;span class="math"&gt;\(q^n - 1\)&lt;/span&gt;, or equivalently, &lt;span class="math"&gt;\(q^n \equiv 1 \pmod{q^{k_i} - 1}\)&lt;/span&gt;. Substituting &lt;span class="math"&gt;\(n = a k_i + b\)&lt;/span&gt;, we get that &lt;span class="math"&gt;\(q^b \equiv 1 \pmod{q^{k_i} - 1}\)&lt;/span&gt;. But since &lt;span class="math"&gt;\(b &amp;lt; k_i\)&lt;/span&gt;, &lt;span class="math"&gt;\(q^b - 1 &amp;lt; q^{k_i} - 1\)&lt;/span&gt;, and so we must have that &lt;span class="math"&gt;\(q^b - 1 = 0\)&lt;/span&gt;; i.e., that &lt;span class="math"&gt;\(b = 0\)&lt;/span&gt;. (Here, we quietly used the fact that &lt;span class="math"&gt;\(q &amp;gt; 1\)&lt;/span&gt;.) Therefore, &lt;span class="math"&gt;\(k_i\)&lt;/span&gt; divides &lt;span class="math"&gt;\(n\)&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;For the next step, we&amp;rsquo;ll need to introduce the &lt;a href="https://en.wikipedia.org/wiki/Cyclotomic_polynomial"&gt;cyclotomic polynomials&lt;/a&gt; &lt;span class="math"&gt;\(\Phi_k(x)\)&lt;/span&gt;. They have three properties in particular that are of interest to us:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;they are monic and have integer coefficients&lt;/li&gt;
&lt;li&gt;for any &lt;span class="math"&gt;\(m\)&lt;/span&gt;, the polynomial &lt;span class="math"&gt;\(x^m - 1\)&lt;/span&gt; factors as &lt;span class="math"&gt;\(\prod_{k \mid m} \Phi_k(x)\)&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;the roots of &lt;span class="math"&gt;\(\Phi_k(x)\)&lt;/span&gt; are exactly the primitive &lt;span class="math"&gt;\(k\)&lt;/span&gt;th roots of unity&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The second fact tells us that &lt;span class="math"&gt;\(\Phi_n(x)\)&lt;/span&gt; is a factor of &lt;span class="math"&gt;\(x^n - 1\)&lt;/span&gt;, but also, that it is a factor of &lt;span class="math"&gt;\((x^n - 1)/(x^{k_i} - 1)\)&lt;/span&gt; &amp;ndash; the denominator cancels out out some of the &lt;span class="math"&gt;\(\Phi_k(x)\)&lt;/span&gt;, but &lt;span class="math"&gt;\(\Phi_n(x)\)&lt;/span&gt; is left intact, since &lt;span class="math"&gt;\(k_i &amp;lt; n\)&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;Since the quotients &lt;span class="math"&gt;\(\frac{x^n - 1}{\Phi_n(x)}\)&lt;/span&gt; and &lt;span class="math"&gt;\(\frac{(x^n - 1)/(x^{k_i} - 1)}{\Phi_n(x)}\)&lt;/span&gt; are products of cyclotomic polynomials, each of which is monic with integer coefficients, then they are also monic with integer coefficients. Therefore, if we plug in &lt;span class="math"&gt;\(x = q\)&lt;/span&gt;, we will get an integer. This means that the integer &lt;span class="math"&gt;\(\Phi_n(q)\)&lt;/span&gt; divides the integers &lt;span class="math"&gt;\(q^n - 1\)&lt;/span&gt; and &lt;span class="math"&gt;\((q^n - 1)/(q^{k_i} - 1)\)&lt;/span&gt;. Note that we had to work for this; it&amp;rsquo;s not an immediate consequence of divisibility as polynomials. For example, consider &lt;span class="math"&gt;\(p(x) = x + 3\)&lt;/span&gt; snd &lt;span class="math"&gt;\(q(x) = x^3 + 3x^2 - x/4 - 3/4\)&lt;/span&gt;. While &lt;span class="math"&gt;\(p(x)\)&lt;/span&gt; divides &lt;span class="math"&gt;\(q(x)\)&lt;/span&gt; as polynomials, &lt;span class="math"&gt;\(p(1) = 4\)&lt;/span&gt; does not divide &lt;span class="math"&gt;\(q(1) = 3\)&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;Now, returning to the class equation, we&amp;rsquo;ve shown that most of the terms are divisible by the integer &lt;span class="math"&gt;\(\Phi_n(q)\)&lt;/span&gt;, so the only leftover term, &lt;span class="math"&gt;\(q - 1\)&lt;/span&gt;, is also divisible by &lt;span class="math"&gt;\(\Phi_n(q)\)&lt;/span&gt;. We claim this is only possible if &lt;span class="math"&gt;\(n = 1\)&lt;/span&gt;, which would then give us our desired result.&lt;/p&gt;
&lt;p&gt;Use the third fact about cyclotomic polynomials: &lt;span class="math"&gt;\(\Phi_n(q) = \prod (q - \zeta)\)&lt;/span&gt;, where &lt;span class="math"&gt;\(\zeta\)&lt;/span&gt; ranges over all primitive &lt;span class="math"&gt;\(n\)&lt;/span&gt;th roots of unity. Taking the modulus, we get that &lt;span class="math"&gt;\(|\Phi_n(q)| = \prod |q - \zeta|\)&lt;/span&gt;. From the triangle inequality, &lt;span class="math"&gt;\(|q - \zeta| + |\zeta| \ge |q|\)&lt;/span&gt;, or, rearranged, &lt;span class="math"&gt;\(|q - \zeta| \ge |q| - |\zeta| = q - 1\)&lt;/span&gt;. If &lt;span class="math"&gt;\(n &amp;gt; 1\)&lt;/span&gt;, then this inequality is strict, because equality only happens when &lt;span class="math"&gt;\(\zeta = 1\)&lt;/span&gt;. Furthermore, since &lt;span class="math"&gt;\(q \ge 2\)&lt;/span&gt;, we have &lt;span class="math"&gt;\(|q - \zeta| &amp;gt; q - 1 \ge 1\)&lt;/span&gt;. Therefore, if &lt;span class="math"&gt;\(n &amp;gt; 1\)&lt;/span&gt;, &lt;span class="math"&gt;\(\Phi_n(q)\)&lt;/span&gt; is a product of terms, all of which have absolute value strictly greater than &lt;span class="math"&gt;\(q - 1\)&lt;/span&gt; and &lt;span class="math"&gt;\(1\)&lt;/span&gt;, thus, &lt;span class="math"&gt;\(|\Phi_n(q)| &amp;gt; q - 1\)&lt;/span&gt;. But this means that &lt;span class="math"&gt;\(\Phi_n(q)\)&lt;/span&gt; cannot divide &lt;span class="math"&gt;\(q - 1\)&lt;/span&gt;, and so this is a contradiction!&lt;/p&gt;
&lt;p&gt;Therefore, &lt;span class="math"&gt;\(n = 1\)&lt;/span&gt;, which forces &lt;span class="math"&gt;\(Z = D\)&lt;/span&gt;, and thus &lt;span class="math"&gt;\(D\)&lt;/span&gt; to be commutative; hence, a field. Q.E.D!&lt;/p&gt;
&lt;script type="text/javascript"&gt;if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) {
    var align = "center",
        indent = "0em",
        linebreak = "false";

    if (false) {
        align = (screen.width &lt; 768) ? "left" : align;
        indent = (screen.width &lt; 768) ? "0em" : indent;
        linebreak = (screen.width &lt; 768) ? 'true' : linebreak;
    }

    var mathjaxscript = document.createElement('script');
    mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#';
    mathjaxscript.type = 'text/javascript';
    mathjaxscript.src = 'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.3/latest.js?config=TeX-AMS-MML_HTMLorMML';

    var configscript = document.createElement('script');
    configscript.type = 'text/x-mathjax-config';
    configscript[(window.opera ? "innerHTML" : "text")] =
        "MathJax.Hub.Config({" +
        "    config: ['MMLorHTML.js']," +
        "    TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'none' } }," +
        "    jax: ['input/TeX','input/MathML','output/HTML-CSS']," +
        "    extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js']," +
        "    displayAlign: '"+ align +"'," +
        "    displayIndent: '"+ indent +"'," +
        "    showMathMenu: true," +
        "    messageStyle: 'normal'," +
        "    tex2jax: { " +
        "        inlineMath: [ ['\\\\(','\\\\)'] ], " +
        "        displayMath: [ ['$$','$$'] ]," +
        "        processEscapes: true," +
        "        preview: 'TeX'," +
        "    }, " +
        "    'HTML-CSS': { " +
        "        availableFonts: ['STIX', 'TeX']," +
        "        preferredFont: 'STIX'," +
        "        styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'inherit ! important'} }," +
        "        linebreaks: { automatic: "+ linebreak +", width: '90% container' }," +
        "    }, " +
        "}); " +
        "if ('default' !== 'default') {" +
            "MathJax.Hub.Register.StartupHook('HTML-CSS Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax['HTML-CSS'].FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
            "MathJax.Hub.Register.StartupHook('SVG Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax.SVG.FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
        "}";

    (document.body || document.getElementsByTagName('head')[0]).appendChild(configscript);
    (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript);
}
&lt;/script&gt;</content><category term="misc"></category><category term="ring-theory"></category></entry><entry><title>Sylow Theorems</title><link href="https://mathmondays.com/sylow" rel="alternate"></link><published>2018-10-29T00:00:00-07:00</published><updated>2018-10-29T00:00:00-07:00</updated><author><name>Henry Swanson</name></author><id>tag:mathmondays.com,2018-10-29:/sylow</id><summary type="html">&lt;p&gt;&lt;span class="mathdefs"&gt;
&lt;span class="math"&gt;\(\newcommand{\ZZ}{\Bbb Z}
\DeclareMathOperator{\Stab}{Stab}
\DeclareMathOperator{\Fix}{Fix}
\DeclareMathOperator{\Aut}{Aut}
\DeclareMathOperator{\sgn}{sgn}\)&lt;/span&gt;
&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;In group theory, the Sylow theorems are a triplet of theorems that pin down a suprising amount of information about certain subgroups.&lt;/p&gt;
&lt;p&gt;Lagrange’s theorem tells us that if &lt;span class="math"&gt;\(H\)&lt;/span&gt; is a subgroup of &lt;span class="math"&gt;\(G\)&lt;/span&gt;, then the size of &lt;span class="math"&gt;\(H\)&lt;/span&gt; divides the size of &lt;span class="math"&gt;\(G\)&lt;/span&gt;. The Sylow theorems give us some answers to the converse question: for what divisors of &lt;span class="math"&gt;\(|G|\)&lt;/span&gt; can we find a subgroup of that size?&lt;/p&gt;
&lt;script type='text/javascript'&gt;if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) {
    var align = "center",
        indent = "0em",
        linebreak = "false";

    if (false) {
        align = (screen.width &lt; 768) ? "left" : align;
        indent = (screen.width &lt; 768) ? "0em" : indent;
        linebreak = (screen.width &lt; 768) ? 'true' : linebreak;
    }

    var mathjaxscript = document.createElement('script');
    mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#';
    mathjaxscript.type = 'text/javascript';
    mathjaxscript.src = 'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.3/latest.js?config=TeX-AMS-MML_HTMLorMML';

    var configscript = document.createElement('script');
    configscript.type = 'text/x-mathjax-config';
    configscript[(window.opera ? "innerHTML" : "text")] =
        "MathJax.Hub.Config({" +
        "    config: ['MMLorHTML.js']," +
        "    TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'none' } }," +
        "    jax: ['input/TeX','input/MathML','output/HTML-CSS']," +
        "    extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js']," +
        "    displayAlign: '"+ align +"'," +
        "    displayIndent: '"+ indent +"'," +
        "    showMathMenu: true," +
        "    messageStyle: 'normal'," +
        "    tex2jax: { " +
        "        inlineMath: [ ['\\\\(','\\\\)'] ], " +
        "        displayMath: [ ['$$','$$'] ]," +
        "        processEscapes: true," +
        "        preview: 'TeX'," +
        "    }, " +
        "    'HTML-CSS': { " +
        "        availableFonts: ['STIX', 'TeX']," +
        "        preferredFont: 'STIX'," +
        "        styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'inherit ! important'} }," +
        "        linebreaks: { automatic: "+ linebreak +", width: '90% container' }," +
        "    }, " +
        "}); " +
        "if ('default' !== 'default') {" +
            "MathJax.Hub.Register.StartupHook('HTML-CSS Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax['HTML-CSS'].FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
            "MathJax.Hub.Register.StartupHook('SVG Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax.SVG.FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
        "}";

    (document.body || document.getElementsByTagName('head')[0]).appendChild(configscript);
    (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript);
}
&lt;/script&gt;</summary><content type="html">&lt;p&gt;&lt;span class="mathdefs"&gt;
&lt;span class="math"&gt;\(\newcommand{\ZZ}{\Bbb Z}
\DeclareMathOperator{\Stab}{Stab}
\DeclareMathOperator{\Fix}{Fix}
\DeclareMathOperator{\Aut}{Aut}
\DeclareMathOperator{\sgn}{sgn}\)&lt;/span&gt;
&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;In group theory, the Sylow theorems are a triplet of theorems that pin down a suprising amount of information about certain subgroups.&lt;/p&gt;
&lt;p&gt;Lagrange&amp;rsquo;s theorem tells us that if &lt;span class="math"&gt;\(H\)&lt;/span&gt; is a subgroup of &lt;span class="math"&gt;\(G\)&lt;/span&gt;, then the size of &lt;span class="math"&gt;\(H\)&lt;/span&gt; divides the size of &lt;span class="math"&gt;\(G\)&lt;/span&gt;. The Sylow theorems give us some answers to the converse question: for what divisors of &lt;span class="math"&gt;\(|G|\)&lt;/span&gt; can we find a subgroup of that size?&lt;/p&gt;


&lt;hr&gt;
&lt;p&gt;For a group &lt;span class="math"&gt;\(G\)&lt;/span&gt;, and a prime &lt;span class="math"&gt;\(p\)&lt;/span&gt;, and &lt;span class="math"&gt;\(n\)&lt;/span&gt; be the largest integer such that &lt;span class="math"&gt;\(p^n\)&lt;/span&gt; divides &lt;span class="math"&gt;\(|G|\)&lt;/span&gt;. A &lt;span class="math"&gt;\(p\)&lt;/span&gt;-subgroup of &lt;span class="math"&gt;\(G\)&lt;/span&gt; is a subgroup of order &lt;span class="math"&gt;\(p^k\)&lt;/span&gt;, and if it has order &lt;span class="math"&gt;\(p^n\)&lt;/span&gt;, then it is called a Sylow &lt;span class="math"&gt;\(p\)&lt;/span&gt;-subgroup. Under these definitions, the Sylow theorems are:&lt;/p&gt;
&lt;div class="theorem-box"&gt;
&lt;div class="theorem-title"&gt;Sylow Theorems&lt;/div&gt;
&lt;ol&gt;
&lt;li&gt;Every &lt;span class="math"&gt;\(p\)&lt;/span&gt;-subgroup is contained in a Sylow &lt;span class="math"&gt;\(p\)&lt;/span&gt;-subgroup. As such, Sylow &lt;span class="math"&gt;\(p\)&lt;/span&gt;-subgroups exist.&lt;/li&gt;
&lt;li&gt;All Sylow &lt;span class="math"&gt;\(p\)&lt;/span&gt;-subgroups are conjugate to each other.&lt;/li&gt;
&lt;li&gt;Let &lt;span class="math"&gt;\(n_p\)&lt;/span&gt; be the number of Sylow &lt;span class="math"&gt;\(p\)&lt;/span&gt;-subgroups, and &lt;span class="math"&gt;\(m = |G|/p^n\)&lt;/span&gt;. Then the following hold:&lt;ul&gt;
&lt;li&gt;&lt;span class="math"&gt;\(n_p\)&lt;/span&gt; divides &lt;span class="math"&gt;\(m\)&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class="math"&gt;\(n_p \equiv 1 \bmod p\)&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class="math"&gt;\(n_p = [G : N(P)]\)&lt;/span&gt;, where &lt;span class="math"&gt;\(N(P)\)&lt;/span&gt; is the normalizer of any Sylow &lt;span class="math"&gt;\(p\)&lt;/span&gt;-subgroup.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;p&gt;These are rather technical and deserve some more thorough digestion. Sylow 1 tells us that maximal &lt;span class="math"&gt;\(p\)&lt;/span&gt;-subgroups are as big as possible; there is no obstruction preventing them from being the full &lt;span class="math"&gt;\(p^n\)&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;Sylow 2 tells us that all Sylow &lt;span class="math"&gt;\(p\)&lt;/span&gt;-subgroups are isomorphic in a very strong way; there is a conjugation of the group sending them to each other. To see how this is a strong criterion, consider a non-example. Let &lt;span class="math"&gt;\(G = \ZZ_4 \times \ZZ_2\)&lt;/span&gt;, and pick out the subgroups &lt;span class="math"&gt;\(H_1 = \{ (0, 0), (2, 0) \}\)&lt;/span&gt; and &lt;span class="math"&gt;\(H_2 = \{ (0, 0), (0, 1) \}\)&lt;/span&gt;. It&amp;rsquo;s clear that &lt;span class="math"&gt;\(H_1\)&lt;/span&gt; and &lt;span class="math"&gt;\(H_2\)&lt;/span&gt; are isomorphic, but they are not conjugate. This manifests in &lt;span class="math"&gt;\(G/H_1 = \ZZ_2 \times \ZZ_2\)&lt;/span&gt; and &lt;span class="math"&gt;\(G/H_2 = \ZZ_4\)&lt;/span&gt; not being isomorphic.&lt;/p&gt;
&lt;p&gt;Sylow 3 is the easiest to understand; it just puts some arithmetic criteria on &lt;span class="math"&gt;\(n_p\)&lt;/span&gt;. For small-ish groups, this is often enough to nail down &lt;span class="math"&gt;\(n_p\)&lt;/span&gt; exactly!&lt;/p&gt;
&lt;p&gt;On to the proofs!&lt;/p&gt;
&lt;h2&gt;Lemma&lt;/h2&gt;
&lt;p&gt;First let&amp;rsquo;s establish a lemma we&amp;rsquo;ll use frequently.&lt;/p&gt;
&lt;div class="theorem-box"&gt;
&lt;div class="theorem-title"&gt;Lemma&lt;/div&gt;
&lt;p&gt;If &lt;span class="math"&gt;\(G\)&lt;/span&gt; is a &lt;span class="math"&gt;\(p\)&lt;/span&gt;-group, and it acts on a set &lt;span class="math"&gt;\(X\)&lt;/span&gt;, then &lt;span class="math"&gt;\(|X| \equiv |\Fix(X)| \bmod p\)&lt;/span&gt;, where &lt;span class="math"&gt;\(\Fix(X)\)&lt;/span&gt; is the set of points in &lt;span class="math"&gt;\(X\)&lt;/span&gt; that are fixed by every &lt;span class="math"&gt;\(g \in G\)&lt;/span&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Proof: Let &lt;span class="math"&gt;\(x_1, \ldots, x_k\)&lt;/span&gt; be representatives for the &lt;span class="math"&gt;\(G\)&lt;/span&gt;-orbits of &lt;span class="math"&gt;\(X\)&lt;/span&gt;. We know that the sum of the sizes of the orbits is &lt;span class="math"&gt;\(|X|\)&lt;/span&gt;. If &lt;span class="math"&gt;\(x_i\)&lt;/span&gt; is a fixed point, then the orbit is of size &lt;span class="math"&gt;\(1\)&lt;/span&gt;. If it is not, then by orbit-stabilizer, the size of the orbit is &lt;span class="math"&gt;\([G : \Stab(x_i)]\)&lt;/span&gt;, which is divisible by &lt;span class="math"&gt;\(p\)&lt;/span&gt;. Thus, mod &lt;span class="math"&gt;\(p\)&lt;/span&gt;, every fixed point contributes &lt;span class="math"&gt;\(1\)&lt;/span&gt;, and everything else in &lt;span class="math"&gt;\(X\)&lt;/span&gt; contributes &lt;span class="math"&gt;\(0\)&lt;/span&gt;.&lt;/p&gt;
&lt;h2&gt;Sylow 1&lt;/h2&gt;
&lt;p&gt;Given a &lt;span class="math"&gt;\(p\)&lt;/span&gt;-subgroup &lt;span class="math"&gt;\(H\)&lt;/span&gt;, we show that, if it is not already maximal, we can find a &lt;span class="math"&gt;\(p\)&lt;/span&gt;-subgroup &lt;span class="math"&gt;\(H' \supset H\)&lt;/span&gt; that is &lt;span class="math"&gt;\(p\)&lt;/span&gt; times bigger. Repeating this process gives us a Sylow &lt;span class="math"&gt;\(p\)&lt;/span&gt;-subgroup containing our original &lt;span class="math"&gt;\(H\)&lt;/span&gt;. Since the trivial subgroup is a &lt;span class="math"&gt;\(p\)&lt;/span&gt;-subgroup, this also establishes the existence of Sylow &lt;span class="math"&gt;\(p\)&lt;/span&gt;-subgroups!&lt;/p&gt;
&lt;p&gt;Let &lt;span class="math"&gt;\(H\)&lt;/span&gt; be a &lt;span class="math"&gt;\(p\)&lt;/span&gt;-group that is not maximal, i.e., it has order &lt;span class="math"&gt;\(p^i\)&lt;/span&gt;, where &lt;span class="math"&gt;\(i &amp;lt; n\)&lt;/span&gt;. There is a natural action of &lt;span class="math"&gt;\(H\)&lt;/span&gt; on the left coset space &lt;span class="math"&gt;\(G/H\)&lt;/span&gt;, and since &lt;span class="math"&gt;\(H\)&lt;/span&gt; is a &lt;span class="math"&gt;\(p\)&lt;/span&gt;-group, our lemma tells us that &lt;span class="math"&gt;\(|G/H|\)&lt;/span&gt; is equivalent to the number of fixed points mod &lt;span class="math"&gt;\(p\)&lt;/span&gt;. But since &lt;span class="math"&gt;\(i &amp;lt; n\)&lt;/span&gt;, &lt;span class="math"&gt;\(G/H\)&lt;/span&gt; has order divisible by &lt;span class="math"&gt;\(p\)&lt;/span&gt;. So the number of fixed points of this action is also divisible by &lt;span class="math"&gt;\(p\)&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;What do fixed points of this action look like? If &lt;span class="math"&gt;\(gH\)&lt;/span&gt; is a coset fixed by &lt;span class="math"&gt;\(h \in H\)&lt;/span&gt;, then &lt;span class="math"&gt;\(hgH = gH\)&lt;/span&gt;, i.e., &lt;span class="math"&gt;\(g^{-1} h g \in H\)&lt;/span&gt;. If this is true for all &lt;span class="math"&gt;\(h\)&lt;/span&gt;, then &lt;span class="math"&gt;\(g\)&lt;/span&gt; lies in the normalizer of &lt;span class="math"&gt;\(H\)&lt;/span&gt;. The converse is also true, since these implications were all reversible. This means that &lt;span class="math"&gt;\(N(H)\)&lt;/span&gt; is composed of the cosets of &lt;span class="math"&gt;\(H\)&lt;/span&gt; that are fixed points.&lt;/p&gt;
&lt;p&gt;Combining the two observations above, we conclude that &lt;span class="math"&gt;\([N(H) : H]\)&lt;/span&gt; is divisible by &lt;span class="math"&gt;\(p\)&lt;/span&gt;. Therefore, by Cauchy&amp;rsquo;s theorem, there&amp;rsquo;s some subgroup of order &lt;span class="math"&gt;\(p\)&lt;/span&gt; in &lt;span class="math"&gt;\(N(H)/H\)&lt;/span&gt;. Lifting this subgroup to &lt;span class="math"&gt;\(N(H)\)&lt;/span&gt;, we get a subgroup of size &lt;span class="math"&gt;\(p \cdot |H| = p^{i+1}\)&lt;/span&gt;. This is the &lt;span class="math"&gt;\(H'\)&lt;/span&gt; we were looking for.&lt;/p&gt;
&lt;h2&gt;Sylow 2&lt;/h2&gt;
&lt;p&gt;Let &lt;span class="math"&gt;\(P\)&lt;/span&gt; and &lt;span class="math"&gt;\(Q\)&lt;/span&gt; be two Sylow &lt;span class="math"&gt;\(p\)&lt;/span&gt;-subgroups of &lt;span class="math"&gt;\(G\)&lt;/span&gt;. We want to show they are conjugate.&lt;/p&gt;
&lt;p&gt;There is a natural action of &lt;span class="math"&gt;\(P\)&lt;/span&gt; on &lt;span class="math"&gt;\(G\)&lt;/span&gt; by multiplication, and this descends to an action of &lt;span class="math"&gt;\(P\)&lt;/span&gt; on &lt;span class="math"&gt;\(G/Q\)&lt;/span&gt; (again, left coset space). From our lemma, the number of fixed points of this action is equivalent to &lt;span class="math"&gt;\(|G/Q|\)&lt;/span&gt;, mod &lt;span class="math"&gt;\(p\)&lt;/span&gt;. But since &lt;span class="math"&gt;\(Q\)&lt;/span&gt; is a Sylow &lt;span class="math"&gt;\(p\)&lt;/span&gt;-subgroup, &lt;span class="math"&gt;\(|G/Q|\)&lt;/span&gt; is not divisible by &lt;span class="math"&gt;\(p\)&lt;/span&gt;. This means that the number of fixed points cannot be zero; i.e., there is at least one fixed point for this action. This is some &lt;span class="math"&gt;\(gQ\)&lt;/span&gt; such that &lt;span class="math"&gt;\(pgQ = gQ\)&lt;/span&gt; for all &lt;span class="math"&gt;\(p \in P\)&lt;/span&gt;. Or, rearranging the terms, a &lt;span class="math"&gt;\(g\)&lt;/span&gt; such that &lt;span class="math"&gt;\(g^{-1}pg \in Q\)&lt;/span&gt; for all &lt;span class="math"&gt;\(p \in P\)&lt;/span&gt;. Since &lt;span class="math"&gt;\(P\)&lt;/span&gt; and &lt;span class="math"&gt;\(Q\)&lt;/span&gt; are the same size, being Sylow &lt;span class="math"&gt;\(p\)&lt;/span&gt;-subgroups, this means that &lt;span class="math"&gt;\(g^{-1}Pg = Q\)&lt;/span&gt;, and so they are indeed conjugate.&lt;/p&gt;
&lt;h2&gt;Sylow 3&lt;/h2&gt;
&lt;p&gt;Let &lt;span class="math"&gt;\(P\)&lt;/span&gt; be a particular Sylow &lt;span class="math"&gt;\(p\)&lt;/span&gt;-subgroup, and let it act on the set of &lt;em&gt;all&lt;/em&gt; Sylow &lt;span class="math"&gt;\(p\)&lt;/span&gt;-subgroups by conjugation. We claim that &lt;span class="math"&gt;\(P\)&lt;/span&gt; is the only fixed point of this action. This would, by our lemma (we&amp;rsquo;re getting so much mileage out of this baby), instantly tell us that &lt;span class="math"&gt;\(n_p \equiv 1 \bmod p\)&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;Consider some fixed point &lt;span class="math"&gt;\(Q\)&lt;/span&gt;. Then for any &lt;span class="math"&gt;\(p \in P\)&lt;/span&gt;, &lt;span class="math"&gt;\(p^{-1}Qp = Q\)&lt;/span&gt;, which means that &lt;span class="math"&gt;\(P\)&lt;/span&gt; lies in the normalizer of &lt;span class="math"&gt;\(Q\)&lt;/span&gt;. Since both &lt;span class="math"&gt;\(P\)&lt;/span&gt; and &lt;span class="math"&gt;\(Q\)&lt;/span&gt; are Sylow &lt;span class="math"&gt;\(p\)&lt;/span&gt;-subgroups of &lt;span class="math"&gt;\(G\)&lt;/span&gt;, they are both Sylow &lt;span class="math"&gt;\(p\)&lt;/span&gt;-subgroups of &lt;span class="math"&gt;\(N(Q)\)&lt;/span&gt;. By Sylow 2, they must be conjugate, but since &lt;span class="math"&gt;\(Q\)&lt;/span&gt; is normal in &lt;span class="math"&gt;\(N(Q)\)&lt;/span&gt;, it&amp;rsquo;s not going anywhere under conjugation. Thus &lt;span class="math"&gt;\(Q\)&lt;/span&gt; must equal &lt;span class="math"&gt;\(P\)&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;Next, we show that &lt;span class="math"&gt;\(n_p = [G : N(P)]\)&lt;/span&gt;. Consider the action of &lt;span class="math"&gt;\(G\)&lt;/span&gt; by conjugation on the set of Sylow &lt;span class="math"&gt;\(p\)&lt;/span&gt;-subgroups. There&amp;rsquo;s only one orbit, because of Sylow 2, and by orbit-stabilizer, it has size &lt;span class="math"&gt;\([G : \Stab(P)]\)&lt;/span&gt;. But the stabilizer of &lt;span class="math"&gt;\(P\)&lt;/span&gt; is just the normalizer, so &lt;span class="math"&gt;\(n_p = [G : N(P)]\)&lt;/span&gt;, as desired.&lt;/p&gt;
&lt;p&gt;Lastly, since &lt;span class="math"&gt;\(m = [G : P] = [G : N(P)] [N(P) : P]\)&lt;/span&gt;, we get that &lt;span class="math"&gt;\(n_p\)&lt;/span&gt; divides &lt;span class="math"&gt;\(m\)&lt;/span&gt; for free.&lt;/p&gt;
&lt;h2&gt;Applications&lt;/h2&gt;
&lt;p&gt;Cool! These are nice theorems, how do we put them to use? Let&amp;rsquo;s look at some example applications.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;em&gt;Show that &lt;span class="math"&gt;\(\ZZ_{35}\)&lt;/span&gt; is the only group of size &lt;span class="math"&gt;\(35\)&lt;/span&gt;.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Let &lt;span class="math"&gt;\(G\)&lt;/span&gt; be a group of size &lt;span class="math"&gt;\(35\)&lt;/span&gt;. We&amp;rsquo;ll consider its Sylow &lt;span class="math"&gt;\(5\)&lt;/span&gt; and &lt;span class="math"&gt;\(7\)&lt;/span&gt;-subgroups. By Sylow 3, we know that &lt;span class="math"&gt;\(n_5 \equiv 1 \bmod 5\)&lt;/span&gt;, and divides &lt;span class="math"&gt;\(7\)&lt;/span&gt;. This means it&amp;rsquo;s gotta be &lt;span class="math"&gt;\(1\)&lt;/span&gt;, which means &lt;span class="math"&gt;\(G\)&lt;/span&gt; has a normal subgroup of size &lt;span class="math"&gt;\(5\)&lt;/span&gt;. Likewise, &lt;span class="math"&gt;\(n_7 \equiv 1 \bmod 7\)&lt;/span&gt;, and divides &lt;span class="math"&gt;\(5\)&lt;/span&gt;, so &lt;span class="math"&gt;\(G\)&lt;/span&gt; has a normal subgroup of size &lt;span class="math"&gt;\(7\)&lt;/span&gt; as well. They intersect trivially, since their sizes are relatively prime, so &lt;span class="math"&gt;\(G\)&lt;/span&gt; is a direct product of these groups. Therefore, &lt;span class="math"&gt;\(G \cong \ZZ_5 \times \ZZ_7\)&lt;/span&gt;, which is &lt;span class="math"&gt;\(\ZZ_{35}\)&lt;/span&gt;.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;em&gt;Classify all groups of order &lt;span class="math"&gt;\(105\)&lt;/span&gt;.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Let &lt;span class="math"&gt;\(G\)&lt;/span&gt; be a group of order &lt;span class="math"&gt;\(105\)&lt;/span&gt;. First, we show that it has normal Sylow &lt;span class="math"&gt;\(5\)&lt;/span&gt;- and &lt;span class="math"&gt;\(7\)&lt;/span&gt;-subgroups. Sylow 3 restricts &lt;span class="math"&gt;\(n_5 = 1,21\)&lt;/span&gt; and &lt;span class="math"&gt;\(n_7 = 1,15\)&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;If &lt;span class="math"&gt;\(n_5 = 1\)&lt;/span&gt;, then there&amp;rsquo;s a unique Sylow &lt;span class="math"&gt;\(5\)&lt;/span&gt;-subgroup &lt;span class="math"&gt;\(N_5\)&lt;/span&gt;. Picking out some Sylow &lt;span class="math"&gt;\(7\)&lt;/span&gt;-subgroup &lt;span class="math"&gt;\(P_7\)&lt;/span&gt;, we get a subgroup &lt;span class="math"&gt;\(H = N_5 P_7\)&lt;/span&gt; of size &lt;span class="math"&gt;\(35\)&lt;/span&gt; (the normality of &lt;span class="math"&gt;\(N_5\)&lt;/span&gt; is necessary for this to be a subgroup). But from our previous exercise, we know that this must be isomorphic to &lt;span class="math"&gt;\(\ZZ_{35}\)&lt;/span&gt;. Since it&amp;rsquo;s abelian, &lt;span class="math"&gt;\(P_7\)&lt;/span&gt; must of course be normal in &lt;span class="math"&gt;\(H\)&lt;/span&gt;. This means that the normalizer &lt;span class="math"&gt;\(N(P_7) \supseteq H\)&lt;/span&gt;. Since &lt;span class="math"&gt;\(n_7 = [G : N(P_7)] \le [G : H] = 3\)&lt;/span&gt;, we are forced to conclude that &lt;span class="math"&gt;\(n_7 = 1\)&lt;/span&gt; as well.&lt;/p&gt;
&lt;p&gt;Likewise, if &lt;span class="math"&gt;\(n_7 = 1\)&lt;/span&gt;, we can construct a subgroup &lt;span class="math"&gt;\(H = P_5 N_7\)&lt;/span&gt; isomorphic to &lt;span class="math"&gt;\(\ZZ_{35}\)&lt;/span&gt;, in which &lt;span class="math"&gt;\(P_5\)&lt;/span&gt; is normal. The index of &lt;span class="math"&gt;\(H\)&lt;/span&gt; here is &lt;span class="math"&gt;\(7\)&lt;/span&gt;, and this also pins down &lt;span class="math"&gt;\(n_5 = 1\)&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;If neither of these are &lt;span class="math"&gt;\(1\)&lt;/span&gt;, then we run out of elements. Each of these subgroups intersects trivially (because they have prime order), and so we would have &lt;span class="math"&gt;\(20 \cdot 4\)&lt;/span&gt; non-identity elements from the Sylow &lt;span class="math"&gt;\(5\)&lt;/span&gt;-subgroups, and &lt;span class="math"&gt;\(15 \cdot 6\)&lt;/span&gt; non-identity elements from the Sylow &lt;span class="math"&gt;\(7\)&lt;/span&gt;-subgroups. Adding in the identity, this is a total of &lt;span class="math"&gt;\(171\)&lt;/span&gt; elements, way too many.&lt;/p&gt;
&lt;p&gt;So &lt;span class="math"&gt;\(G\)&lt;/span&gt; has normal Sylow &lt;span class="math"&gt;\(5\)&lt;/span&gt;- and &lt;span class="math"&gt;\(7\)&lt;/span&gt;-subgroups, and their product is a subgroup &lt;span class="math"&gt;\(H\)&lt;/span&gt; or size &lt;span class="math"&gt;\(35\)&lt;/span&gt;. As the product of normal subgroups, it is itself normal. Cauchy&amp;rsquo;s theorem gives us an element &lt;span class="math"&gt;\(x\)&lt;/span&gt; of order &lt;span class="math"&gt;\(3\)&lt;/span&gt;, and it generates a subgroup &lt;span class="math"&gt;\(K\)&lt;/span&gt;. Since &lt;span class="math"&gt;\(H\)&lt;/span&gt; and &lt;span class="math"&gt;\(K\)&lt;/span&gt; intersect trivially, &lt;span class="math"&gt;\(HK\)&lt;/span&gt; is the whole group, and so &lt;span class="math"&gt;\(G\)&lt;/span&gt; is a semidirect product of &lt;span class="math"&gt;\(H\)&lt;/span&gt; and &lt;span class="math"&gt;\(K\)&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;What options do we have for our twisting homomorphism &lt;span class="math"&gt;\(\phi : K \to \Aut(H)\)&lt;/span&gt;? All we have to do is specify &lt;span class="math"&gt;\(\phi(x)\)&lt;/span&gt;, and all we need is that &lt;span class="math"&gt;\(\phi(x)^3\)&lt;/span&gt; is the identity.&lt;/p&gt;
&lt;p&gt;The automorphisms of &lt;span class="math"&gt;\(\ZZ_n\)&lt;/span&gt; are those given by multiplying by some &lt;span class="math"&gt;\(a\)&lt;/span&gt; relatively prime to &lt;span class="math"&gt;\(n\)&lt;/span&gt;. As such, the automorphisms of &lt;span class="math"&gt;\(\ZZ_{35}\)&lt;/span&gt; with degree dividing &lt;span class="math"&gt;\(3\)&lt;/span&gt; are &lt;span class="math"&gt;\((r \mapsto ar)\)&lt;/span&gt;, where &lt;span class="math"&gt;\(a^3 \equiv 1 \bmod 35\)&lt;/span&gt;. The only such solutions are &lt;span class="math"&gt;\(1, 11, 16\)&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;If &lt;span class="math"&gt;\(a = 1\)&lt;/span&gt;, then this is the trivial automorphism, and so &lt;span class="math"&gt;\(G \cong \ZZ_3 \times \ZZ_{35} \cong \ZZ_{105}\)&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;It turns out that the groups for &lt;span class="math"&gt;\(a = 11\)&lt;/span&gt; and &lt;span class="math"&gt;\(a = 16\)&lt;/span&gt; are isomorphic, but I can&amp;rsquo;t figure out a clean way to show it at the moment. Stay tuned. &lt;!--TODO--&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;em&gt;Show &lt;span class="math"&gt;\(A_5\)&lt;/span&gt; is the smallest non-abelian simple group.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;To prove this, we need to eliminate the possibility of a simple non-abelian group of any smaller size. First, we can eliminate primes; any group of size &lt;span class="math"&gt;\(p\)&lt;/span&gt; is cyclic, hence abelian.&lt;/p&gt;
&lt;p&gt;We can also eliminate prime powers. Any group of prime power order has a non-trivial center, so it cannot be simple.&lt;/p&gt;
&lt;p&gt;Next, we eliminate anything that is &lt;span class="math"&gt;\(2\)&lt;/span&gt; mod &lt;span class="math"&gt;\(4\)&lt;/span&gt;. Such a number is equal to &lt;span class="math"&gt;\(2m\)&lt;/span&gt; with &lt;span class="math"&gt;\(m\)&lt;/span&gt; odd. If &lt;span class="math"&gt;\(G\)&lt;/span&gt; is a group of size &lt;span class="math"&gt;\(2m\)&lt;/span&gt;, let &lt;span class="math"&gt;\(G\)&lt;/span&gt; act on itself by multiplication. This gives us a map &lt;span class="math"&gt;\(\phi : G \to S_{2m}\)&lt;/span&gt; sending &lt;span class="math"&gt;\(g\)&lt;/span&gt; to the permutation it induces. By Cauchy&amp;rsquo;s theorem, there&amp;rsquo;s an element of order &lt;span class="math"&gt;\(2\)&lt;/span&gt;. This induces a product of &lt;span class="math"&gt;\(m\)&lt;/span&gt; transpositions, and thus an odd permutation. So the map &lt;span class="math"&gt;\(\sgn \circ \phi : G \to \{ \pm 1 \}\)&lt;/span&gt; is surjective, and so its kernel is a non-trivial proper subgroup of &lt;span class="math"&gt;\(G\)&lt;/span&gt;. (Unless &lt;span class="math"&gt;\(G\)&lt;/span&gt; has order &lt;span class="math"&gt;\(2\)&lt;/span&gt;, but we already handled that case.)&lt;/p&gt;
&lt;p&gt;Our last big sweep will be to eliminate groups of size &lt;span class="math"&gt;\(p^k m\)&lt;/span&gt; with &lt;span class="math"&gt;\(m &amp;lt; p\)&lt;/span&gt;. Since &lt;span class="math"&gt;\(n_p\)&lt;/span&gt; divides &lt;span class="math"&gt;\(m\)&lt;/span&gt;, we have &lt;span class="math"&gt;\(n_p \le m &amp;lt; p\)&lt;/span&gt;. But &lt;span class="math"&gt;\(n_p\)&lt;/span&gt; is &lt;span class="math"&gt;\(1\)&lt;/span&gt; mod &lt;span class="math"&gt;\(p\)&lt;/span&gt;, and so must be &lt;span class="math"&gt;\(1\)&lt;/span&gt;. If there is a single Sylow &lt;span class="math"&gt;\(p\)&lt;/span&gt;-subgroup, it must be normal. This eliminates 15, 20, 21, 28, 33, 35, 39, 44, 51, 52, 55, and 57.&lt;/p&gt;
&lt;p&gt;This leaves us with 12, 24, 36, 40, 45, 48, and 56.&lt;/p&gt;
&lt;p&gt;&lt;span class="math"&gt;\(|G|=40\)&lt;/span&gt;: From the congruence conditions, we know that &lt;span class="math"&gt;\(n_5\)&lt;/span&gt; is &lt;span class="math"&gt;\(1\)&lt;/span&gt; mod &lt;span class="math"&gt;\(5\)&lt;/span&gt; and divides &lt;span class="math"&gt;\(8\)&lt;/span&gt;. But this forces it to be &lt;span class="math"&gt;\(1\)&lt;/span&gt;, so there is a unique Sylow &lt;span class="math"&gt;\(5\)&lt;/span&gt;-subgroup. &lt;/p&gt;
&lt;p&gt;&lt;span class="math"&gt;\(|G|=45\)&lt;/span&gt;: Similar to &lt;span class="math"&gt;\(|G|=40\)&lt;/span&gt;, the arithmetic restrictions force &lt;span class="math"&gt;\(n_5\)&lt;/span&gt; to be &lt;span class="math"&gt;\(1\)&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;&lt;span class="math"&gt;\(|G| = 12\)&lt;/span&gt;: We know that &lt;span class="math"&gt;\(n_3\)&lt;/span&gt; is either &lt;span class="math"&gt;\(1\)&lt;/span&gt; or &lt;span class="math"&gt;\(4\)&lt;/span&gt;. If it&amp;rsquo;s not &lt;span class="math"&gt;\(1\)&lt;/span&gt;, there&amp;rsquo;s &lt;span class="math"&gt;\(4\)&lt;/span&gt; Sylow &lt;span class="math"&gt;\(3\)&lt;/span&gt;-subgroups, and because they have prime order, they intersect trivially. This gives &lt;span class="math"&gt;\(8\)&lt;/span&gt; elements of order &lt;span class="math"&gt;\(3\)&lt;/span&gt;, leaving &lt;span class="math"&gt;\(4\)&lt;/span&gt; other elements to constitute the Sylow &lt;span class="math"&gt;\(2\)&lt;/span&gt;-subgroups. But each Sylow &lt;span class="math"&gt;\(2\)&lt;/span&gt;-subgroup has &lt;span class="math"&gt;\(4\)&lt;/span&gt; elements, and so there is a unique (hence normal) one.&lt;/p&gt;
&lt;p&gt;&lt;span class="math"&gt;\(|G| = 56\)&lt;/span&gt;: Similar to the case for &lt;span class="math"&gt;\(12\)&lt;/span&gt;. If &lt;span class="math"&gt;\(n_7\)&lt;/span&gt; is not &lt;span class="math"&gt;\(1\)&lt;/span&gt;, it is &lt;span class="math"&gt;\(8\)&lt;/span&gt;, yielding &lt;span class="math"&gt;\(48\)&lt;/span&gt; elements of order &lt;span class="math"&gt;\(7\)&lt;/span&gt;. The leftover &lt;span class="math"&gt;\(8\)&lt;/span&gt; elements form the unique Sylow &lt;span class="math"&gt;\(2\)&lt;/span&gt;-subgroup.&lt;/p&gt;
&lt;p&gt;For the other three cases we need some stronger stuff.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Claim&lt;/em&gt;: if &lt;span class="math"&gt;\(G\)&lt;/span&gt; is simple and non-abelian, then for all &lt;span class="math"&gt;\(p\)&lt;/span&gt; dividing &lt;span class="math"&gt;\(|G|\)&lt;/span&gt;, we must have &lt;span class="math"&gt;\(|G|\)&lt;/span&gt; divides &lt;span class="math"&gt;\(n_p!\)&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Proof&lt;/em&gt;: Let &lt;span class="math"&gt;\(G\)&lt;/span&gt; act on the Sylow &lt;span class="math"&gt;\(p\)&lt;/span&gt;-subgroups by conjugation. Because there are &lt;span class="math"&gt;\(n_p\)&lt;/span&gt; of them, this gives us a homomorphism &lt;span class="math"&gt;\(\phi : G \to S_{n_p}\)&lt;/span&gt;. Since &lt;span class="math"&gt;\(G\)&lt;/span&gt; is simple, &lt;span class="math"&gt;\(\ker \phi\)&lt;/span&gt; is either trivial or all of &lt;span class="math"&gt;\(G\)&lt;/span&gt;. Because all Sylow &lt;span class="math"&gt;\(p\)&lt;/span&gt;-subgroups are conjugate, the latter situation only occurs when there is only one of them, something impossible if &lt;span class="math"&gt;\(G\)&lt;/span&gt; is simple and non-abelian. &lt;/p&gt;
&lt;!-- TODO you don't need abelian-ness, having no other conjugates means you're normal! --&gt;

&lt;p&gt;This leaves us with the former case, where the kernel is trivial, and thus &lt;span class="math"&gt;\(\phi\)&lt;/span&gt; is an injection. Identifying &lt;span class="math"&gt;\(G\)&lt;/span&gt; as a subgroup of &lt;span class="math"&gt;\(S_{n_p}\)&lt;/span&gt;, we get that &lt;span class="math"&gt;\(|G|\)&lt;/span&gt; divides &lt;span class="math"&gt;\(n_p!\)&lt;/span&gt; as promised.&lt;/p&gt;
&lt;p&gt;We can now eliminate the last cases.&lt;/p&gt;
&lt;p&gt;&lt;span class="math"&gt;\(|G|=24\)&lt;/span&gt;: We know that &lt;span class="math"&gt;\(n_2\)&lt;/span&gt; is either &lt;span class="math"&gt;\(1\)&lt;/span&gt; or &lt;span class="math"&gt;\(3\)&lt;/span&gt;, by the usual congruence conditions. But now we have a new tool. If &lt;span class="math"&gt;\(G\)&lt;/span&gt; were simple, then &lt;span class="math"&gt;\(24\)&lt;/span&gt; would divide &lt;span class="math"&gt;\(n_2!\)&lt;/span&gt;, which it can&amp;rsquo;t in either case. So &lt;span class="math"&gt;\(G\)&lt;/span&gt; can&amp;rsquo;t be simple.&lt;/p&gt;
&lt;p&gt;&lt;span class="math"&gt;\(|G|=36\)&lt;/span&gt;: We know &lt;span class="math"&gt;\(n_3\)&lt;/span&gt; is &lt;span class="math"&gt;\(1\)&lt;/span&gt; or &lt;span class="math"&gt;\(4\)&lt;/span&gt;. If &lt;span class="math"&gt;\(G\)&lt;/span&gt; is simple, then &lt;span class="math"&gt;\(36\)&lt;/span&gt; would divide &lt;span class="math"&gt;\(n_3!\)&lt;/span&gt;, which it can&amp;rsquo;t.&lt;/p&gt;
&lt;p&gt;&lt;span class="math"&gt;\(|G|=48\)&lt;/span&gt;: Identical to the case for &lt;span class="math"&gt;\(24\)&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;Phew!&lt;/p&gt;
&lt;p&gt;This was a lot of work. Back when I was in high school, we had to prove this without the Sylow theorems, and by god we appreciated them. Get off my lawn!&lt;/p&gt;
&lt;p&gt;(But actually though, that was an&amp;hellip; experience.)&lt;/p&gt;
&lt;script type="text/javascript"&gt;if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) {
    var align = "center",
        indent = "0em",
        linebreak = "false";

    if (false) {
        align = (screen.width &lt; 768) ? "left" : align;
        indent = (screen.width &lt; 768) ? "0em" : indent;
        linebreak = (screen.width &lt; 768) ? 'true' : linebreak;
    }

    var mathjaxscript = document.createElement('script');
    mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#';
    mathjaxscript.type = 'text/javascript';
    mathjaxscript.src = 'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.3/latest.js?config=TeX-AMS-MML_HTMLorMML';

    var configscript = document.createElement('script');
    configscript.type = 'text/x-mathjax-config';
    configscript[(window.opera ? "innerHTML" : "text")] =
        "MathJax.Hub.Config({" +
        "    config: ['MMLorHTML.js']," +
        "    TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'none' } }," +
        "    jax: ['input/TeX','input/MathML','output/HTML-CSS']," +
        "    extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js']," +
        "    displayAlign: '"+ align +"'," +
        "    displayIndent: '"+ indent +"'," +
        "    showMathMenu: true," +
        "    messageStyle: 'normal'," +
        "    tex2jax: { " +
        "        inlineMath: [ ['\\\\(','\\\\)'] ], " +
        "        displayMath: [ ['$$','$$'] ]," +
        "        processEscapes: true," +
        "        preview: 'TeX'," +
        "    }, " +
        "    'HTML-CSS': { " +
        "        availableFonts: ['STIX', 'TeX']," +
        "        preferredFont: 'STIX'," +
        "        styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'inherit ! important'} }," +
        "        linebreaks: { automatic: "+ linebreak +", width: '90% container' }," +
        "    }, " +
        "}); " +
        "if ('default' !== 'default') {" +
            "MathJax.Hub.Register.StartupHook('HTML-CSS Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax['HTML-CSS'].FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
            "MathJax.Hub.Register.StartupHook('SVG Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax.SVG.FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
        "}";

    (document.body || document.getElementsByTagName('head')[0]).appendChild(configscript);
    (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript);
}
&lt;/script&gt;</content><category term="misc"></category><category term="group-theory"></category></entry><entry><title>The Heawood Number</title><link href="https://mathmondays.com/heawood" rel="alternate"></link><published>2018-10-22T00:00:00-07:00</published><updated>2018-10-22T00:00:00-07:00</updated><author><name>Henry Swanson</name></author><id>tag:mathmondays.com,2018-10-22:/heawood</id><summary type="html">&lt;p&gt;The &lt;a href="https://en.wikipedia.org/wiki/Four_color_theorem"&gt;four-color theorem&lt;/a&gt; tells us that we can color any map using only four colors, such that no adjacent regions have the same color.&lt;/p&gt;
&lt;p&gt;This is true for any map of the world, whether it’s on a globe or laid out flat. But what about maps on other surfaces?&lt;/p&gt;
</summary><content type="html">&lt;p&gt;The &lt;a href="https://en.wikipedia.org/wiki/Four_color_theorem"&gt;four-color theorem&lt;/a&gt; tells us that we can color any map using only four colors, such that no adjacent regions have the same color.&lt;/p&gt;
&lt;p&gt;This is true for any map of the world, whether it&amp;rsquo;s on a globe or laid out flat. But what about maps on other surfaces?&lt;/p&gt;


&lt;hr&gt;
&lt;p&gt;The mathematical formalization of the four-color theorem is: &amp;ldquo;any planar graph is 4-colorable&amp;rdquo;. Let&amp;rsquo;s break down what that means.&lt;/p&gt;
&lt;p&gt;Graph here refers to a collection of vertices and edges, not a plot or a chart. For our purposes, we&amp;rsquo;ll only consider &lt;strong&gt;simple&lt;/strong&gt; graphs, that is, graphs where a) there is no edge from a point to itself and b) for any pair of points, there&amp;rsquo;s at most one edge between them. A graph is &lt;strong&gt;planar&lt;/strong&gt; if we can embed it in the plane (i.e., draw it on a sheet of paper) without any of the edges crossing.&lt;/p&gt;
&lt;p&gt;A &lt;em&gt;coloring&lt;/em&gt; of a graph is a way of coloring the vertices of the graph such that no two vertices of the same color are connected. Note that self-loops make a graph impossible to color, and multiple edges between vertices don&amp;rsquo;t matter. This is why we concentrate only on simple graphs.&lt;/p&gt;
&lt;p&gt;We say a map is &lt;span class="math"&gt;\(k\)&lt;/span&gt;-colorable if there exists a coloring with &lt;span class="math"&gt;\(k\)&lt;/span&gt; colors. &lt;/p&gt;
&lt;p&gt;&lt;img alt="TODO tooltip here" height="auto" src="/images/heawood/1.png" width="100%"&gt;&lt;/p&gt;
&lt;p&gt;So what does this have to do with maps? The problem of coloring a map can be rephrased as a problem about coloring graphs. And since the field is called &amp;ldquo;graph theory&amp;rdquo;, and not &amp;ldquo;map theory&amp;rdquo;, that&amp;rsquo;s what we&amp;rsquo;ll do. Put a vertex for each country, and connect two vertices if the corresponding countries are adjacent. If you can color the map, then the corresponding graph can be colored in the same way. Likewise, if you can color the graph, you can use the same color assignment to color the map.&lt;/p&gt;
&lt;p&gt;&lt;img alt="TODO tooltip here" height="auto" src="/images/heawood/2.png" width="100%"&gt;&lt;/p&gt;
&lt;p&gt;We&amp;rsquo;re looking to answer the question: for a surface &lt;span class="math"&gt;\(S\)&lt;/span&gt;, how many colors do we need to guarantee we can color any graph embedded in &lt;span class="math"&gt;\(S\)&lt;/span&gt;? To do this, we&amp;rsquo;ll need to make use of an invariant called the &amp;ldquo;Euler characteristic&amp;rdquo;.&lt;/p&gt;
&lt;h1&gt;Euler Characteristic&lt;/h1&gt;
&lt;p&gt;Euler&amp;rsquo;s formula for planar graphs says that for any planar graph, &lt;span class="math"&gt;\(V - E + F = 2\)&lt;/span&gt;, where &lt;span class="math"&gt;\(V\)&lt;/span&gt; is the number of vertices, &lt;span class="math"&gt;\(E\)&lt;/span&gt; is the number of edges, and &lt;span class="math"&gt;\(F\)&lt;/span&gt; is the number of faces (including the outside face).&lt;/p&gt;
&lt;p&gt;This also applies to graphs embedded on the sphere. Imagine taking a pin and poking a hole in the middle of one of the faces. Stretch this hole out until it is wide enough that you can flatten the entire sphere into a disk. Now you have a graph embedded in the plane. (This explains why we like to consider the outside face a legitimate face.)&lt;/p&gt;
&lt;p&gt;But this does not apply to graphs embedded on other surfaces! Consider the following graph on the torus:&lt;/p&gt;
&lt;p&gt;&lt;img alt="TODO tooltip here" height="auto" src="/images/heawood/3.png" width="100%"&gt;&lt;/p&gt;
&lt;p&gt;This has 16 vertices, 32 edges, and 16 faces (count carefully, not all of them are obvious). This has &lt;span class="math"&gt;\(V - E + F = 0\)&lt;/span&gt;! Euler&amp;rsquo;s formula doesn&amp;rsquo;t work on the torus, but maybe we can salvage it?&lt;/p&gt;
&lt;p&gt;Let&amp;rsquo;s try some examples:&lt;/p&gt;
&lt;p&gt;&lt;img alt="TODO tooltip here" height="auto" src="/images/heawood/4.png" width="100%"&gt;&lt;/p&gt;
&lt;p&gt;It seems we &lt;em&gt;usually&lt;/em&gt; get &lt;span class="math"&gt;\(0\)&lt;/span&gt;, but sometimes we do get a &lt;span class="math"&gt;\(2\)&lt;/span&gt;, like before. To resolve this, note that in all the examples where we don&amp;rsquo;t get &lt;span class="math"&gt;\(0\)&lt;/span&gt;, some of the faces have &amp;ldquo;holes&amp;rdquo;. If you took the face in the &lt;span class="math"&gt;\(3 - 3 + 1\)&lt;/span&gt; example and laid it out flat, it&amp;rsquo;d look like a ring, not a disk.&lt;/p&gt;
&lt;p&gt;So we&amp;rsquo;ll equip ourselves with another definition: if a graph is embedded in a surface, and none of the resulting faces have holes, we call that embedding &lt;em&gt;honest&lt;/em&gt;. (This isn&amp;rsquo;t standard terminology, but you can&amp;rsquo;t stop me from naming things whatever I want. Try me.) It turns out that if you honestly embed a graph into the torus, you&amp;rsquo;ll always get &lt;span class="math"&gt;\(V - E + F = 0\)&lt;/span&gt;, no matter which graph you use, or how it&amp;rsquo;s embedded.&lt;/p&gt;
&lt;p&gt;In fact, for any surface &lt;span class="math"&gt;\(S\)&lt;/span&gt;, we have a similar result: there&amp;rsquo;s a fixed integer &lt;span class="math"&gt;\(\chi(S)\)&lt;/span&gt; such that &lt;span class="math"&gt;\(V - E + F = \chi(S)\)&lt;/span&gt;, for any honest embedding of any graph. We call this number the &lt;em&gt;Euler characteristic&lt;/em&gt; for the surface. For the plane and the sphere, &lt;span class="math"&gt;\(\chi = 2\)&lt;/span&gt;. For the torus, &lt;span class="math"&gt;\(\chi = 0\)&lt;/span&gt;. Here&amp;rsquo;s some other examples of surfaces and their Euler characteristics:&lt;/p&gt;
&lt;p&gt;&lt;img alt="TODO tooltip here" height="auto" src="/images/heawood/5.png" width="100%"&gt;&lt;/p&gt;
&lt;h1&gt;The Heawood Number&lt;/h1&gt;
&lt;p&gt;Now we can approach the generalized four-color theorem. Armed with the Euler characteristic, we define the &lt;strong&gt;Heawood number&lt;/strong&gt; of a surface with Euler characteristic &lt;span class="math"&gt;\(\chi\)&lt;/span&gt; as:&lt;/p&gt;
&lt;div class="theorem-box"&gt;
&lt;div class="theorem-title"&gt;Heawood Number&lt;/div&gt;
&lt;p&gt;
&lt;div class="math"&gt;$$ H(\chi) = \left\lfloor \frac{7 + \sqrt{49 - 24 \chi}}{2} \right\rfloor $$&lt;/div&gt;
&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Yeah. That&amp;rsquo;s&amp;hellip; unmotivated.&lt;/p&gt;
&lt;p&gt;We claim that any graph that can be embedded on a surface with characteristic &lt;span class="math"&gt;\(\chi\)&lt;/span&gt;, honestly or otherwise, can be colored with at most &lt;span class="math"&gt;\(H(\chi)\)&lt;/span&gt; colors. For the sphere, &lt;span class="math"&gt;\(H(2) = 4\)&lt;/span&gt;, so our claim becomes the famous Four-Color Theorem, which is Very Hard To Prove (TM). We&amp;rsquo;ll deliberately exclude that case, like the cowards we are.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;The first step is to prove a lemma about the minimum degree of the graph. That&amp;rsquo;ll get us most of the way there.&lt;/p&gt;
&lt;p&gt;Let &lt;span class="math"&gt;\(S\)&lt;/span&gt; be a surface that isn&amp;rsquo;t the sphere, and embed a graph &lt;span class="math"&gt;\(G\)&lt;/span&gt; on it, honestly or not. Let &lt;span class="math"&gt;\(V\)&lt;/span&gt;, &lt;span class="math"&gt;\(E\)&lt;/span&gt;, and &lt;span class="math"&gt;\(F\)&lt;/span&gt; be the usual, and let &lt;span class="math"&gt;\(\delta\)&lt;/span&gt; be the minimum degree of a vertex in &lt;span class="math"&gt;\(G\)&lt;/span&gt;. We claim that &lt;span class="math"&gt;\(\delta \le H(\chi) - 1\)&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;Proof: First, we can extend this embedding to an honest embedding, by adding extra edges to cut up the faces. This can only make &lt;span class="math"&gt;\(\delta\)&lt;/span&gt; bigger, so if we can prove &lt;span class="math"&gt;\(\delta \le H(\chi) - 1\)&lt;/span&gt; for this new graph, it was also true for the old graph.&lt;/p&gt;
&lt;p&gt;Next, consider the following inequalities, the motivations for which are pulled directly from my ass.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Since each face has at least three edges, we know that &lt;span class="math"&gt;\(2E \ge 3F\)&lt;/span&gt;.&lt;/li&gt;
&lt;li&gt;The sum of the degrees for all vertices is &lt;span class="math"&gt;\(2E\)&lt;/span&gt;. Thus, &lt;span class="math"&gt;\(2E \ge \delta V\)&lt;/span&gt;.&lt;/li&gt;
&lt;li&gt;A vertex cannot be connected to more than &lt;span class="math"&gt;\(V - 1\)&lt;/span&gt; other vertices, so &lt;span class="math"&gt;\(\delta + 1 \le V\)&lt;/span&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Now, from the definition of Euler characteristic, we have:
&lt;/p&gt;
&lt;div class="math"&gt;$$
\begin{align*}
\chi &amp;amp;= V - E + F \\
6\chi &amp;amp;= 6V - 6E + 6F \\
6\chi &amp;amp;\le 6V - 2E \\
6\chi &amp;amp;\le 6V - \delta V = (6 - \delta) V \\
\end{align*}
$$&lt;/div&gt;
&lt;p&gt;Here we must split into cases, depending on the sign of &lt;span class="math"&gt;\(\chi\)&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;If &lt;span class="math"&gt;\(\chi \le 0\)&lt;/span&gt;, then we make both sides positive before making use of our last inequality:
&lt;/p&gt;
&lt;div class="math"&gt;$$ -6\chi \ge (\delta - 6)V \ge (\delta - 6)(\delta + 1) = \delta^2 - 5 \delta - 6 $$&lt;/div&gt;
&lt;p&gt;Now use the handy-dandy quadratic formula; we get that &lt;span class="math"&gt;\(\delta\)&lt;/span&gt; is at most &lt;span class="math"&gt;\(\frac{5 + \sqrt{49 - 24 \chi}}{2} = H(\chi) - 1\)&lt;/span&gt;. Boom.&lt;/p&gt;
&lt;p&gt;Otherwise, &lt;span class="math"&gt;\(\chi &amp;gt; 0\)&lt;/span&gt;, and by the &lt;a href="https://en.wikipedia.org/wiki/Surface_%28topology%29#Classification_of_closed_surfaces"&gt;classification of compact surfaces&lt;/a&gt;, we know &lt;span class="math"&gt;\(S\)&lt;/span&gt; must be the sphere or the projective plane. We&amp;rsquo;re explicitly excluding the sphere, so &lt;span class="math"&gt;\(S\)&lt;/span&gt; must be the projective plane, which has Euler characteristic 1. Plugging that in, we get that &lt;span class="math"&gt;\(6 \le (6 - \delta) V\)&lt;/span&gt;. Since the right side is positive, we must have &lt;span class="math"&gt;\(\delta &amp;lt; 6\)&lt;/span&gt;. Because &lt;span class="math"&gt;\(H(1) = 6\)&lt;/span&gt;, we can still guarantee that &lt;span class="math"&gt;\(\delta \le H(\chi) - 1\)&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;So for any graph &lt;span class="math"&gt;\(G\)&lt;/span&gt; embedded in &lt;span class="math"&gt;\(S\)&lt;/span&gt;, honestly or otherwise, there is a vertex with degree at most &lt;span class="math"&gt;\(H(\chi) - 1\)&lt;/span&gt;.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;We&amp;rsquo;re basically done! We&amp;rsquo;ll describe an explicit procedure to color graphs on &lt;span class="math"&gt;\(S\)&lt;/span&gt; with &lt;span class="math"&gt;\(H(\chi)\)&lt;/span&gt; colors.&lt;/p&gt;
&lt;p&gt;Let &lt;span class="math"&gt;\(G\)&lt;/span&gt; be a graph embedded on &lt;span class="math"&gt;\(S\)&lt;/span&gt;. Our base case is the graph with one vertex; it can trivially be colored. Otherwise, consider &lt;span class="math"&gt;\(G\)&lt;/span&gt; with &lt;span class="math"&gt;\(n \ge 2\)&lt;/span&gt; vertices. By our lemma, it has some vertex &lt;span class="math"&gt;\(v\)&lt;/span&gt; with degree at most &lt;span class="math"&gt;\(H(\chi) - 1\)&lt;/span&gt;. Apply our procedure to the subgraph &lt;span class="math"&gt;\(G - v\)&lt;/span&gt;, coloring it with &lt;span class="math"&gt;\(H(\chi)\)&lt;/span&gt; colors. Since &lt;span class="math"&gt;\(v\)&lt;/span&gt; has strictly less than &lt;span class="math"&gt;\(H(\chi)\)&lt;/span&gt; neighbors, there will be at least one color available for us to color &lt;span class="math"&gt;\(v\)&lt;/span&gt; with, and so we can color all of &lt;span class="math"&gt;\(G\)&lt;/span&gt;.&lt;/p&gt;
&lt;h1&gt;Conclusions&lt;/h1&gt;
&lt;p&gt;We showed that any graph &lt;span class="math"&gt;\(G\)&lt;/span&gt; embedded in &lt;span class="math"&gt;\(S\)&lt;/span&gt;, honestly or otherwise, can be colored with &lt;span class="math"&gt;\(H(\chi) = \left\lfloor \frac{7 + \sqrt{49 - 24 \chi}}{2} \right\rfloor\)&lt;/span&gt; colors. The only case we decided not to handle was when &lt;span class="math"&gt;\(S\)&lt;/span&gt; is the sphere. Unfortunately, that case is much harder. The proof above was discovered in 1890 by Percy John Heawood, after whom the number is named. The Four-Color Theorem wasn&amp;rsquo;t proven until much later, in 1976, by Kenneth Appel and Wolfgang Haken. And what a controversial proof it was! They managed to reduce the problem to checking a particular property of 1,936 graphs. This wasn&amp;rsquo;t feasible to do by hand, so they used a computer to check those cases. This was the first computer-aided proof, and it ruffled quite a few feathers.&lt;/p&gt;
&lt;p&gt;Secondly, we only established an upper bound on the number of colors we need in our palette. Is there a graph that requires all &lt;span class="math"&gt;\(H(\chi)\)&lt;/span&gt; colors? Or can we lower the bound a bit? The Heawood conjecture is the claim that we can&amp;rsquo;t; i.e., that this bound is sharp. And it&amp;rsquo;s mostly true. In 1968, Gerhard Ringel and Ted Youngs showed that, on almost any surface, you can embed the complete graph on &lt;span class="math"&gt;\(H(\chi)\)&lt;/span&gt; vertices. Since that graph requires all &lt;span class="math"&gt;\(H(\chi)\)&lt;/span&gt; colors, that shows the bound is sharp. The only exception is the Klein bottle, where the conjecture predicts &lt;span class="math"&gt;\(H(0)=7\)&lt;/span&gt; colors are needed, but in fact, &lt;span class="math"&gt;\(6\)&lt;/span&gt; colors suffice to color any graph.&lt;/p&gt;
&lt;p&gt;A maximal coloring of the Klein bottle is shown below:&lt;/p&gt;
&lt;div class="image-container"&gt;
&lt;p&gt;&lt;img alt="A maximal coloring of the Klein bottle" height="250px" src="/images/heawood/6.png"&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;script type="text/javascript"&gt;if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) {
    var align = "center",
        indent = "0em",
        linebreak = "false";

    if (false) {
        align = (screen.width &lt; 768) ? "left" : align;
        indent = (screen.width &lt; 768) ? "0em" : indent;
        linebreak = (screen.width &lt; 768) ? 'true' : linebreak;
    }

    var mathjaxscript = document.createElement('script');
    mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#';
    mathjaxscript.type = 'text/javascript';
    mathjaxscript.src = 'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.3/latest.js?config=TeX-AMS-MML_HTMLorMML';

    var configscript = document.createElement('script');
    configscript.type = 'text/x-mathjax-config';
    configscript[(window.opera ? "innerHTML" : "text")] =
        "MathJax.Hub.Config({" +
        "    config: ['MMLorHTML.js']," +
        "    TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'none' } }," +
        "    jax: ['input/TeX','input/MathML','output/HTML-CSS']," +
        "    extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js']," +
        "    displayAlign: '"+ align +"'," +
        "    displayIndent: '"+ indent +"'," +
        "    showMathMenu: true," +
        "    messageStyle: 'normal'," +
        "    tex2jax: { " +
        "        inlineMath: [ ['\\\\(','\\\\)'] ], " +
        "        displayMath: [ ['$$','$$'] ]," +
        "        processEscapes: true," +
        "        preview: 'TeX'," +
        "    }, " +
        "    'HTML-CSS': { " +
        "        availableFonts: ['STIX', 'TeX']," +
        "        preferredFont: 'STIX'," +
        "        styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'inherit ! important'} }," +
        "        linebreaks: { automatic: "+ linebreak +", width: '90% container' }," +
        "    }, " +
        "}); " +
        "if ('default' !== 'default') {" +
            "MathJax.Hub.Register.StartupHook('HTML-CSS Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax['HTML-CSS'].FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
            "MathJax.Hub.Register.StartupHook('SVG Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax.SVG.FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
        "}";

    (document.body || document.getElementsByTagName('head')[0]).appendChild(configscript);
    (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript);
}
&lt;/script&gt;</content><category term="misc"></category><category term="graph-theory"></category><category term="topology"></category></entry><entry><title>Linearity of Expectation</title><link href="https://mathmondays.com/linearity-expectation" rel="alternate"></link><published>2018-10-15T00:00:00-07:00</published><updated>2018-10-15T00:00:00-07:00</updated><author><name>Henry Swanson</name></author><id>tag:mathmondays.com,2018-10-15:/linearity-expectation</id><summary type="html">&lt;p&gt;To introduce this topic, let’s start with an innocuous problem:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;You have &lt;span class="math"&gt;\(10\)&lt;/span&gt; six-sided dice. If you roll all of them, what is the expected sum of the faces?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Your intuition should tell you that it’s &lt;span class="math"&gt;\(35\)&lt;/span&gt;. But what’s really going on here is an example of a slick principle called &lt;strong&gt;linearity of expectation&lt;/strong&gt;.&lt;/p&gt;
&lt;script type='text/javascript'&gt;if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) {
    var align = "center",
        indent = "0em",
        linebreak = "false";

    if (false) {
        align = (screen.width &lt; 768) ? "left" : align;
        indent = (screen.width &lt; 768) ? "0em" : indent;
        linebreak = (screen.width &lt; 768) ? 'true' : linebreak;
    }

    var mathjaxscript = document.createElement('script');
    mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#';
    mathjaxscript.type = 'text/javascript';
    mathjaxscript.src = 'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.3/latest.js?config=TeX-AMS-MML_HTMLorMML';

    var configscript = document.createElement('script');
    configscript.type = 'text/x-mathjax-config';
    configscript[(window.opera ? "innerHTML" : "text")] =
        "MathJax.Hub.Config({" +
        "    config: ['MMLorHTML.js']," +
        "    TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'none' } }," +
        "    jax: ['input/TeX','input/MathML','output/HTML-CSS']," +
        "    extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js']," +
        "    displayAlign: '"+ align +"'," +
        "    displayIndent: '"+ indent +"'," +
        "    showMathMenu: true," +
        "    messageStyle: 'normal'," +
        "    tex2jax: { " +
        "        inlineMath: [ ['\\\\(','\\\\)'] ], " +
        "        displayMath: [ ['$$','$$'] ]," +
        "        processEscapes: true," +
        "        preview: 'TeX'," +
        "    }, " +
        "    'HTML-CSS': { " +
        "        availableFonts: ['STIX', 'TeX']," +
        "        preferredFont: 'STIX'," +
        "        styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'inherit ! important'} }," +
        "        linebreaks: { automatic: "+ linebreak +", width: '90% container' }," +
        "    }, " +
        "}); " +
        "if ('default' !== 'default') {" +
            "MathJax.Hub.Register.StartupHook('HTML-CSS Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax['HTML-CSS'].FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
            "MathJax.Hub.Register.StartupHook('SVG Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax.SVG.FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
        "}";

    (document.body || document.getElementsByTagName('head')[0]).appendChild(configscript);
    (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript);
}
&lt;/script&gt;</summary><content type="html">&lt;p&gt;To introduce this topic, let&amp;rsquo;s start with an innocuous problem:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;You have &lt;span class="math"&gt;\(10\)&lt;/span&gt; six-sided dice. If you roll all of them, what is the expected sum of the faces?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Your intuition should tell you that it&amp;rsquo;s &lt;span class="math"&gt;\(35\)&lt;/span&gt;. But what&amp;rsquo;s really going on here is an example of a slick principle called &lt;strong&gt;linearity of expectation&lt;/strong&gt;.&lt;/p&gt;


&lt;hr&gt;
&lt;p&gt;We&amp;rsquo;re not actually computing the probability of getting &lt;span class="math"&gt;\(10, 11, \ldots, 60\)&lt;/span&gt;, and summing it all up. Implicitly, we are making the following line of argument: the expected value of the first die is &lt;span class="math"&gt;\(3.5\)&lt;/span&gt;, and so the expected value for &lt;span class="math"&gt;\(k\)&lt;/span&gt; dice is &lt;span class="math"&gt;\(3.5k\)&lt;/span&gt;. This relies on the following claim: given two random variables &lt;span class="math"&gt;\(X\)&lt;/span&gt; and &lt;span class="math"&gt;\(Y\)&lt;/span&gt;, the expected value of their sum, &lt;span class="math"&gt;\(E[X + Y]\)&lt;/span&gt;, is just &lt;span class="math"&gt;\(E[X] + E[Y]\)&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;This feels intuitively true, and proving it is straightforward. Let &lt;span class="math"&gt;\(\Omega\)&lt;/span&gt; be the space of possible outcomes. Then
&lt;/p&gt;
&lt;div class="math"&gt;$$
\begin{align*}
E[X + Y] &amp;amp;= \sum_{\omega \in \Omega} p(\omega) (X + Y)(\omega) \\
&amp;amp;= \sum_{\omega \in \Omega} p(\omega) (X(\omega) + Y(\omega)) \\
&amp;amp;= \sum_{\omega \in \Omega} p(\omega) X(\omega) + \sum_{\omega \in \Omega} p(\omega) Y(\omega) \\
&amp;amp;= E[X] + E[Y]
\end{align*}
$$&lt;/div&gt;
&lt;p&gt;But interestingly enough, at no point did we require &lt;span class="math"&gt;\(X\)&lt;/span&gt; and &lt;span class="math"&gt;\(Y\)&lt;/span&gt; be independent. This still works even when &lt;span class="math"&gt;\(X\)&lt;/span&gt; and &lt;span class="math"&gt;\(Y\)&lt;/span&gt; are correlated! For some sanity-checking examples, consider &lt;span class="math"&gt;\(X = Y\)&lt;/span&gt; and &lt;span class="math"&gt;\(X = -Y\)&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;This principle, which is rather obvious when &lt;span class="math"&gt;\(X\)&lt;/span&gt; and &lt;span class="math"&gt;\(Y\)&lt;/span&gt; are independent (so much so that we often use it unconsciously), is unexpectedly powerful when applied to dependent variables. We&amp;rsquo;ll explore the concept through several example problems.&lt;/p&gt;
&lt;h1&gt;Gumballs&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;Imagine a very large gumball machine, with &lt;span class="math"&gt;\(4\)&lt;/span&gt; colors of gumballs in it, evenly distributed. We only have enough money for &lt;span class="math"&gt;\(6\)&lt;/span&gt; gumballs; what&amp;rsquo;s the expected number of colors we will receive? Assume that the machine has so many gumballs that the ones we take out don&amp;rsquo;t matter; effectively, we are drawing with replacement.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Let&amp;rsquo;s compute this the naive way first. Let&amp;rsquo;s count the number of ways we can get each number of colors, and do the appropriate weighted sum.&lt;/p&gt;
&lt;p&gt;There are &lt;span class="math"&gt;\(4\)&lt;/span&gt; ways we can get only one color.&lt;/p&gt;
&lt;p&gt;For any two colors, there&amp;rsquo;s &lt;span class="math"&gt;\(2^6 = 32\)&lt;/span&gt; ways we can get gumballs using just those colors. There&amp;rsquo;s &lt;span class="math"&gt;\(6\)&lt;/span&gt; pairs of colors, so there&amp;rsquo;s &lt;span class="math"&gt;\(32 \cdot 6 = 192\)&lt;/span&gt; ways to get at most two colors. Subtracting off the single-color cases, we get &lt;span class="math"&gt;\(188\)&lt;/span&gt; ways to get exactly two colors.&lt;/p&gt;
&lt;p&gt;Similarly, for any three colors, there&amp;rsquo;s &lt;span class="math"&gt;\(3^6 = 729\)&lt;/span&gt; ways to get gumballs with just those colors. There&amp;rsquo;s &lt;span class="math"&gt;\(4\)&lt;/span&gt; possible triplets, giving &lt;span class="math"&gt;\(2916\)&lt;/span&gt; ways to get at most three colors. Subtracting off the two-color cases, we get &lt;span class="math"&gt;\(2728\)&lt;/span&gt; ways to get exactly three colors.&lt;/p&gt;
&lt;p&gt;All other cases have four colors: &lt;span class="math"&gt;\(4^6 - 2728 - 188 - 4 = 1176\)&lt;/span&gt; possible ways.&lt;/p&gt;
&lt;p&gt;Now we do the weighted sum. Each possible sequence of gumballs has probability &lt;span class="math"&gt;\(1/4^6\)&lt;/span&gt; of occuring, so the expected value of the number of colors is:
&lt;/p&gt;
&lt;div class="math"&gt;$$ 1 \frac{4}{4^6} + 2 \frac{188}{4^6} + 3 \frac{2728}{4^6} + 4 \frac{1176}{4^6} = \frac{3317}{1024} \approx 3.239 $$&lt;/div&gt;
&lt;p&gt;It&amp;rsquo;s doable, but one can imagine this is much harder for larger numbers.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;Let&amp;rsquo;s take another go at it. For the &lt;span class="math"&gt;\(i\)&lt;/span&gt;th color, define &lt;span class="math"&gt;\(X_i\)&lt;/span&gt; to be &lt;span class="math"&gt;\(1\)&lt;/span&gt; if we get at least one gumball of that color, and &lt;span class="math"&gt;\(0\)&lt;/span&gt; otherwise. The number of colors we get, &lt;span class="math"&gt;\(X\)&lt;/span&gt;, is then the sum of the &lt;span class="math"&gt;\(X_i\)&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;The probability of &lt;em&gt;not&lt;/em&gt; getting a gumball of a particular color on a particular draw is &lt;span class="math"&gt;\(3/4\)&lt;/span&gt;, so the probability of not getting it in &lt;span class="math"&gt;\(6\)&lt;/span&gt; draws is &lt;span class="math"&gt;\((3/4)^6\)&lt;/span&gt;. This means that &lt;span class="math"&gt;\(E[X_i] = 1 - (3/4)^6 = 3367/4096\)&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;The &lt;span class="math"&gt;\(X_i\)&lt;/span&gt; are not independent; for example, if we know three of them are &lt;span class="math"&gt;\(0\)&lt;/span&gt;, the last one must be &lt;span class="math"&gt;\(1\)&lt;/span&gt; (we must draw a gumball of &lt;strong&gt;some&lt;/strong&gt; color). But we can still apply linearity of expectation, even to dependent variables.&lt;/p&gt;
&lt;p&gt;Thus, the expected number of colors we get is &lt;span class="math"&gt;\(E[X] = \sum_{i = 1}^4 E[X_i] = 4 \cdot \frac{3367}{4096} = \frac{3367}{1024}\)&lt;/span&gt;, just as we got earlier.&lt;/p&gt;
&lt;p&gt;Notably, this approach extends gracefully to when we take &lt;span class="math"&gt;\(k\)&lt;/span&gt; gumballs with &lt;span class="math"&gt;\(n\)&lt;/span&gt; available colors. The expected value of each &lt;span class="math"&gt;\(X_i\)&lt;/span&gt; is then &lt;span class="math"&gt;\((1 - 1/n)^k\)&lt;/span&gt;, so the expected value of &lt;span class="math"&gt;\(X\)&lt;/span&gt; is then &lt;span class="math"&gt;\(n (1 - 1/n)^k\)&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;(This reveals an interesting approximation: if &lt;span class="math"&gt;\(n\)&lt;/span&gt; and &lt;span class="math"&gt;\(k\)&lt;/span&gt; are equal and large, then &lt;span class="math"&gt;\((1 - 1/n)^n \approx 1/e\)&lt;/span&gt;, so the expected number of colors is &lt;span class="math"&gt;\(n(1 - 1/e) \approx 0.63n\)&lt;/span&gt;).&lt;/p&gt;
&lt;h1&gt;Number of Fixed Points&lt;/h1&gt;
&lt;p&gt;These variables we saw earlier, that are &lt;span class="math"&gt;\(1\)&lt;/span&gt; if a condition is true, and &lt;span class="math"&gt;\(0\)&lt;/span&gt; otherwise, are called &lt;strong&gt;indicator variables&lt;/strong&gt;, and they are particularly good candidates for linearity of expectation problems.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;After we shuffle a deck of &lt;span class="math"&gt;\(n\)&lt;/span&gt; cards, what are the expected number of cards that have stayed in the same position? Equivalently, given an arbitrary permutation on &lt;span class="math"&gt;\(n\)&lt;/span&gt; objects, how many fixed points does it have on average.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;We have no interest in examining all &lt;span class="math"&gt;\(n!\)&lt;/span&gt; possible outcomes, and summing over the number of fixed points in each. That would be terrible. Instead, we&amp;rsquo;re going to split our desired variable into several indicator variables, each of which is easier to analyze.&lt;/p&gt;
&lt;p&gt;Let &lt;span class="math"&gt;\(X_k\)&lt;/span&gt; be &lt;span class="math"&gt;\(1\)&lt;/span&gt; if the &lt;span class="math"&gt;\(k\)&lt;/span&gt;th card is in the &lt;span class="math"&gt;\(k\)&lt;/span&gt;th position, and &lt;span class="math"&gt;\(0\)&lt;/span&gt; otherwise. Then the number of fixed points is &lt;span class="math"&gt;\(\sum_k X_k\)&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;After shuffling, the &lt;span class="math"&gt;\(k\)&lt;/span&gt;th card is equally likely to be in any position in the deck. So the chance of ending up in the same place is &lt;span class="math"&gt;\(1/n\)&lt;/span&gt;, which makes &lt;span class="math"&gt;\(E[X_k] = 1/n\)&lt;/span&gt;. So by linearity of expectation, &lt;span class="math"&gt;\(E[X_1 + \cdots + X_n] = n \cdot \frac{1}{n} = 1\)&lt;/span&gt;. So on average, one card will stay in the same place.&lt;/p&gt;
&lt;h1&gt;Number of Cycles&lt;/h1&gt;
&lt;p&gt;We don&amp;rsquo;t have to limit ourselves to indicator variables: sometimes we can use a constant factor to help us avoid overcounting.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Given a random permutation on &lt;span class="math"&gt;\(n\)&lt;/span&gt; objects, how many cycles does it have?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;As a reminder, the cycles of a permutation are the &amp;ldquo;connected components&amp;rdquo;. For example, if &lt;span class="math"&gt;\(\sigma\)&lt;/span&gt; sends &lt;span class="math"&gt;\(1 \to 2\)&lt;/span&gt;, &lt;span class="math"&gt;\(2 \to 4\)&lt;/span&gt;, &lt;span class="math"&gt;\(3 \to 6\)&lt;/span&gt;, &lt;span class="math"&gt;\(4 \to 1\)&lt;/span&gt;, &lt;span class="math"&gt;\(5 \to 5\)&lt;/span&gt;, and &lt;span class="math"&gt;\(6 \to 3\)&lt;/span&gt;, then the cycles of &lt;span class="math"&gt;\(\sigma\)&lt;/span&gt; are &lt;span class="math"&gt;\((1, 2, 4)\)&lt;/span&gt;, &lt;span class="math"&gt;\((3, 6)\)&lt;/span&gt;, and &lt;span class="math"&gt;\((5)\)&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;For each &lt;span class="math"&gt;\(k\)&lt;/span&gt;, let &lt;span class="math"&gt;\(X_k = \frac{1}{L}\)&lt;/span&gt;, where &lt;span class="math"&gt;\(L\)&lt;/span&gt; is the length of the cycle of &lt;span class="math"&gt;\(\sigma\)&lt;/span&gt; containing the number &lt;span class="math"&gt;\(k\)&lt;/span&gt;. So for the permutation we described, &lt;span class="math"&gt;\(X_1 = X_2 = X_4 = 1/3\)&lt;/span&gt;, &lt;span class="math"&gt;\(X_3 = X_6 = 1/2\)&lt;/span&gt;, and &lt;span class="math"&gt;\(X_5 = 1\)&lt;/span&gt;. Then the number of cycles is &lt;span class="math"&gt;\(X_1 + \cdots + X_n\)&lt;/span&gt;, since each cycle contributes &lt;span class="math"&gt;\(L\)&lt;/span&gt; copies of &lt;span class="math"&gt;\(1/L\)&lt;/span&gt;. As usual, these variables are highly dependent (if &lt;span class="math"&gt;\(X_i = 1/5\)&lt;/span&gt;, there&amp;rsquo;d better be four other &lt;span class="math"&gt;\(X_j\)&lt;/span&gt; that equal &lt;span class="math"&gt;\(1/5\)&lt;/span&gt; as well), but we can still apply linearity of expectation.&lt;/p&gt;
&lt;p&gt;The probability that &lt;span class="math"&gt;\(k\)&lt;/span&gt; is in a cycle of length &lt;span class="math"&gt;\(1\)&lt;/span&gt; is &lt;span class="math"&gt;\(1/n\)&lt;/span&gt;, since &lt;span class="math"&gt;\(\sigma\)&lt;/span&gt; would have to send &lt;span class="math"&gt;\(k\)&lt;/span&gt; to itself.&lt;/p&gt;
&lt;p&gt;The probability it is in a cycle of length &lt;span class="math"&gt;\(2\)&lt;/span&gt; is the probability &lt;span class="math"&gt;\(k\)&lt;/span&gt; is sent to some other number, times the probability that the other number is sent back to &lt;span class="math"&gt;\(k\)&lt;/span&gt;, i.e. &lt;span class="math"&gt;\(\frac{n-1}{n} \cdot \frac{1}{n - 1}\)&lt;/span&gt;, which is &lt;span class="math"&gt;\(\frac{1}{n}\)&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;In general, the probability of being in a cycle of length &lt;span class="math"&gt;\(L\)&lt;/span&gt; is &lt;span class="math"&gt;\(\frac{n-1}{n} \frac{n-2}{n-1} \cdots \frac{n-(L-1)}{n-(L-2)} \cdot \frac{1}{n-(L-1)} = \frac{1}{n}\)&lt;/span&gt;. Curiously, this is independent of &lt;span class="math"&gt;\(L\)&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;So the expected value of &lt;span class="math"&gt;\(X_k\)&lt;/span&gt; is &lt;span class="math"&gt;\(\frac{1}{n} \sum_{L=1}^n \frac{1}{L} = \frac{H_n}{n}\)&lt;/span&gt;, where &lt;span class="math"&gt;\(H_n\)&lt;/span&gt; is the &lt;span class="math"&gt;\(n\)&lt;/span&gt;th &lt;a href="https://en.wikipedia.org/wiki/Harmonic_number"&gt;harmonic number&lt;/a&gt;. Then the expected number of cycles is &lt;span class="math"&gt;\(E[X_1] + \cdots + E[X_n] = H_n\)&lt;/span&gt;.&lt;/p&gt;
&lt;h1&gt;Buffon&amp;rsquo;s Needle&lt;/h1&gt;
&lt;p&gt;We&amp;rsquo;ll finish up with a rather surprising application to the Buffon&amp;rsquo;s needle problem:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Consider a gigantic piece of lined paper, with the lines spaced one unit apart. If we throw a needle of length &lt;span class="math"&gt;\(1\)&lt;/span&gt; onto the paper, what is the probability it crosses a line?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Technically, we&amp;rsquo;re only interested in the probability that the needle crosses the line. But because it can cross at most once, this is equal to the expected number of crossings. So if we let &lt;span class="math"&gt;\(X_a\)&lt;/span&gt; be the expected number of crossings for a needle of length &lt;span class="math"&gt;\(a\)&lt;/span&gt;, we&amp;rsquo;re interested in &lt;span class="math"&gt;\(E[X_1]\)&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;Take a needle of length &lt;span class="math"&gt;\(a + b\)&lt;/span&gt;, and paint it, covering the first &lt;span class="math"&gt;\(a\)&lt;/span&gt; units of it red, and the other &lt;span class="math"&gt;\(b\)&lt;/span&gt; units blue. Then throw it on the paper. The expected number of crossings is the expected number of red crossings, plus the expected number of blue crossings. But each segment of the needle is just a smaller needle, so the expected number of red crossings is &lt;span class="math"&gt;\(E[X_a]\)&lt;/span&gt;, and the expected number of blue crossings is &lt;span class="math"&gt;\(E[X_b]\)&lt;/span&gt;. This lets us conclude, unsurprisingly, that &lt;span class="math"&gt;\(E[X_{a+b}] = E[X_a] + E[X_b]\)&lt;/span&gt;. This tells us that &lt;span class="math"&gt;\(E[X_a]\)&lt;/span&gt; is linear in &lt;span class="math"&gt;\(a\)&lt;/span&gt;, and so &lt;span class="math"&gt;\(E[X_a] = Ca\)&lt;/span&gt; for some unknown constant &lt;span class="math"&gt;\(C\)&lt;/span&gt;. (Well, we&amp;rsquo;ve gotta assume &lt;span class="math"&gt;\(X_a\)&lt;/span&gt; is continuous in &lt;span class="math"&gt;\(a\)&lt;/span&gt;, which it is, but shh&amp;hellip;)&lt;/p&gt;
&lt;p&gt;Furthermore, put a sharp bend in the needle right at the color boundary. Each segment is still a linear needle, so the number of red crossings is still &lt;span class="math"&gt;\(E[X_a]\)&lt;/span&gt;, and likewise with blue crossings. So the expected number of crossings for this bent needle is &lt;em&gt;still&lt;/em&gt; &lt;span class="math"&gt;\(E[X_{a+b}]\)&lt;/span&gt;, despite the kink!&lt;/p&gt;
&lt;p&gt;By induction, if you put a finite number of sharp bends in a needle, it doesn&amp;rsquo;t change the expected number of crossings. All that matters is the total length. And by &lt;s&gt;handwaving&lt;/s&gt; a continuity argument, this is true for continuous bends as well. So &lt;span class="math"&gt;\(X_a\)&lt;/span&gt; doesn&amp;rsquo;t just measure the expected number of crossings for a needle of length &lt;span class="math"&gt;\(a\)&lt;/span&gt;, but any reasonable curve of length &lt;span class="math"&gt;\(a\)&lt;/span&gt;. (Much to my delight, this phenomenon is called &amp;ldquo;Buffon&amp;rsquo;s noodle&amp;rdquo;.) This means that if we throw a rigid noodle of length &lt;span class="math"&gt;\(a\)&lt;/span&gt; on the paper, the expected number of crossings is &lt;span class="math"&gt;\(E[X_a] = Ca\)&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;So let&amp;rsquo;s consider a particular kind of noodle: a circle with diameter &lt;span class="math"&gt;\(1\)&lt;/span&gt;. No matter how it&amp;rsquo;s thrown onto the paper, it will cross the lines exactly twice. It has circumference &lt;span class="math"&gt;\(\pi\)&lt;/span&gt;, and so we can determine that &lt;span class="math"&gt;\(C = \frac{2}{\pi}\)&lt;/span&gt;. Thus, for the original needle problem, &lt;span class="math"&gt;\(p = X_1 = \frac{2}{\pi}\)&lt;/span&gt;.&lt;/p&gt;
&lt;script type="text/javascript"&gt;if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) {
    var align = "center",
        indent = "0em",
        linebreak = "false";

    if (false) {
        align = (screen.width &lt; 768) ? "left" : align;
        indent = (screen.width &lt; 768) ? "0em" : indent;
        linebreak = (screen.width &lt; 768) ? 'true' : linebreak;
    }

    var mathjaxscript = document.createElement('script');
    mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#';
    mathjaxscript.type = 'text/javascript';
    mathjaxscript.src = 'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.3/latest.js?config=TeX-AMS-MML_HTMLorMML';

    var configscript = document.createElement('script');
    configscript.type = 'text/x-mathjax-config';
    configscript[(window.opera ? "innerHTML" : "text")] =
        "MathJax.Hub.Config({" +
        "    config: ['MMLorHTML.js']," +
        "    TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'none' } }," +
        "    jax: ['input/TeX','input/MathML','output/HTML-CSS']," +
        "    extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js']," +
        "    displayAlign: '"+ align +"'," +
        "    displayIndent: '"+ indent +"'," +
        "    showMathMenu: true," +
        "    messageStyle: 'normal'," +
        "    tex2jax: { " +
        "        inlineMath: [ ['\\\\(','\\\\)'] ], " +
        "        displayMath: [ ['$$','$$'] ]," +
        "        processEscapes: true," +
        "        preview: 'TeX'," +
        "    }, " +
        "    'HTML-CSS': { " +
        "        availableFonts: ['STIX', 'TeX']," +
        "        preferredFont: 'STIX'," +
        "        styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'inherit ! important'} }," +
        "        linebreaks: { automatic: "+ linebreak +", width: '90% container' }," +
        "    }, " +
        "}); " +
        "if ('default' !== 'default') {" +
            "MathJax.Hub.Register.StartupHook('HTML-CSS Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax['HTML-CSS'].FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
            "MathJax.Hub.Register.StartupHook('SVG Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax.SVG.FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
        "}";

    (document.body || document.getElementsByTagName('head')[0]).appendChild(configscript);
    (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript);
}
&lt;/script&gt;</content><category term="misc"></category><category term="probability"></category></entry><entry><title>Expected Density of Pigeons</title><link href="https://mathmondays.com/pigeons" rel="alternate"></link><published>2018-10-08T00:00:00-07:00</published><updated>2018-10-08T00:00:00-07:00</updated><author><name>Henry Swanson</name></author><id>tag:mathmondays.com,2018-10-08:/pigeons</id><summary type="html">&lt;p&gt;&lt;span class="mathdefs"&gt;
&lt;span class="math"&gt;\(\DeclareMathOperator{\res}{Res}\)&lt;/span&gt;
&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;This one’s another puzzle from work:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Consider a pigeon coop with &lt;span class="math"&gt;\(n\)&lt;/span&gt; pigeonholes, arranged in a straight line. When a pigeon arrives at the coop, it will roost in a pigeonhole only if it is empty, and both neighboring pigeonholes are also empty. It selects such a pigeonhole uniformly at random, enters the pigeonhole, and does not leave. At some point, the coop will fill up, but not every pigeonhole will be occupied. What is the expected density of pigeons in the coop, as &lt;span class="math"&gt;\(n\)&lt;/span&gt; grows large?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;If you run a few simulations, you get that it’s about &lt;span class="math"&gt;\(0.432332\ldots\)&lt;/span&gt;. But this isn’t any easily recognizable number. What is it in closed form?&lt;/p&gt;
&lt;script type='text/javascript'&gt;if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) {
    var align = "center",
        indent = "0em",
        linebreak = "false";

    if (false) {
        align = (screen.width &lt; 768) ? "left" : align;
        indent = (screen.width &lt; 768) ? "0em" : indent;
        linebreak = (screen.width &lt; 768) ? 'true' : linebreak;
    }

    var mathjaxscript = document.createElement('script');
    mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#';
    mathjaxscript.type = 'text/javascript';
    mathjaxscript.src = 'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.3/latest.js?config=TeX-AMS-MML_HTMLorMML';

    var configscript = document.createElement('script');
    configscript.type = 'text/x-mathjax-config';
    configscript[(window.opera ? "innerHTML" : "text")] =
        "MathJax.Hub.Config({" +
        "    config: ['MMLorHTML.js']," +
        "    TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'none' } }," +
        "    jax: ['input/TeX','input/MathML','output/HTML-CSS']," +
        "    extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js']," +
        "    displayAlign: '"+ align +"'," +
        "    displayIndent: '"+ indent +"'," +
        "    showMathMenu: true," +
        "    messageStyle: 'normal'," +
        "    tex2jax: { " +
        "        inlineMath: [ ['\\\\(','\\\\)'] ], " +
        "        displayMath: [ ['$$','$$'] ]," +
        "        processEscapes: true," +
        "        preview: 'TeX'," +
        "    }, " +
        "    'HTML-CSS': { " +
        "        availableFonts: ['STIX', 'TeX']," +
        "        preferredFont: 'STIX'," +
        "        styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'inherit ! important'} }," +
        "        linebreaks: { automatic: "+ linebreak +", width: '90% container' }," +
        "    }, " +
        "}); " +
        "if ('default' !== 'default') {" +
            "MathJax.Hub.Register.StartupHook('HTML-CSS Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax['HTML-CSS'].FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
            "MathJax.Hub.Register.StartupHook('SVG Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax.SVG.FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
        "}";

    (document.body || document.getElementsByTagName('head')[0]).appendChild(configscript);
    (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript);
}
&lt;/script&gt;</summary><content type="html">&lt;p&gt;&lt;span class="mathdefs"&gt;
&lt;span class="math"&gt;\(\DeclareMathOperator{\res}{Res}\)&lt;/span&gt;
&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;This one&amp;rsquo;s another puzzle from work:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Consider a pigeon coop with &lt;span class="math"&gt;\(n\)&lt;/span&gt; pigeonholes, arranged in a straight line. When a pigeon arrives at the coop, it will roost in a pigeonhole only if it is empty, and both neighboring pigeonholes are also empty. It selects such a pigeonhole uniformly at random, enters the pigeonhole, and does not leave. At some point, the coop will fill up, but not every pigeonhole will be occupied. What is the expected density of pigeons in the coop, as &lt;span class="math"&gt;\(n\)&lt;/span&gt; grows large?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;If you run a few simulations, you get that it&amp;rsquo;s about &lt;span class="math"&gt;\(0.432332\ldots\)&lt;/span&gt;. But this isn&amp;rsquo;t any easily recognizable number. What is it in closed form?&lt;/p&gt;


&lt;hr&gt;
&lt;p&gt;This problem illustrates one of the things I find really cool about math: the boundaries between different disciplines are essentially fictitious. This is a combinatorics problem, and so we might expect to be using arguments involving counting, bijections, and other finite tools. But instead we&amp;rsquo;ll sprint as fast as we can into the realm of analysis and solve the problem there.&lt;/p&gt;
&lt;p&gt;Let &lt;span class="math"&gt;\(a_n\)&lt;/span&gt; be the expected number of pigeons for a coop with &lt;span class="math"&gt;\(n\)&lt;/span&gt; holes. Then we can come up with a recurrence relation for &lt;span class="math"&gt;\(a_n\)&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;Consider what happens when the first pigeon arrives in an unoccupied coop. If it arrives in the first hole, then we can imagine deleting the first hole and its neighbor from the coop, leaving us with an unoccupied coop of size &lt;span class="math"&gt;\(n - 2\)&lt;/span&gt;. If it lands in the last hole, we have the same situation. Otherwise, it lands somewhere in the middle; when a pigeon comes to rest in the &lt;span class="math"&gt;\(k\)&lt;/span&gt;th hole (I&amp;rsquo;m going to &lt;span class="math"&gt;\(1\)&lt;/span&gt;-index, by the way), it splits the coop into two smaller coops, one with &lt;span class="math"&gt;\(k - 2\)&lt;/span&gt; holes, and the other with &lt;span class="math"&gt;\(n - k - 1\)&lt;/span&gt; holes. Since each hole is equally likely, we can average over all values of &lt;span class="math"&gt;\(k\)&lt;/span&gt; to get a first draft of our recurrence relation:
&lt;/p&gt;
&lt;div class="math"&gt;$$ a_n = 1 + \frac{1}{n} \left( a_{n-2} + a_{n-2} + \sum_{k=2}^{n-1} (a_{k-2} + a_{n-k-1}) \right) $$&lt;/div&gt;
&lt;p&gt;This can be prettied up with some mild re-indexing:
&lt;/p&gt;
&lt;div class="math"&gt;$$ a_n = 1 + \frac{2}{n} \sum_{k=0}^{n-2} a_k $$&lt;/div&gt;
&lt;p&gt;We can do even better though! If we consider &lt;span class="math"&gt;\(n a_n - (n-1) a_{n-1}\)&lt;/span&gt;, we can collapse most of our terms:
&lt;/p&gt;
&lt;div class="math"&gt;$$
\begin{align*}
n a_n - (n-1) a_{n-1} &amp;amp;= \left( n + 2 \sum_{k=0}^{n-2} a_k \right) - \left( n-1 + 2 \sum_{k=0}^{n-1} a_k \right) \\
n a_n - (n-1) a_{n-1} &amp;amp;= 1 + 2 a_{n-2} \\
a_n &amp;amp;= \frac{1}{n} ( 1 + (n-1) a_{n-1} + 2 a_{n-2} )
\end{align*}
$$&lt;/div&gt;
&lt;hr&gt;
&lt;p&gt;This isn&amp;rsquo;t a linear recurrence relation, so we can&amp;rsquo;t apply linear algebra tricks to it. So we fall back on the Swiss Army knife of recurrence relations: the generating function.&lt;/p&gt;
&lt;p&gt;Let &lt;span class="math"&gt;\(G(z) = a_0 + a_1 z + a_2 z^2 + a_3 z^3 + \cdots\)&lt;/span&gt;. We don&amp;rsquo;t know what this function is yet, but we can use the recurrence relation to pin down what it is.
&lt;/p&gt;
&lt;div class="math"&gt;\begin{align*}
G(z) &amp;amp;= \sum_{n=0}^\infty a_n z^n \\
G'(z) &amp;amp;= \sum_{n=1}^\infty n a_n z^{n-1} \\
&amp;amp;= a_1 + \sum_{n=2}^\infty n a_n z^{n-1} \\
&amp;amp;= a_1 + \sum_{n=2}^\infty \left( 1 + (n-1) a_{n-1} + 2 a_{n-2} \right) z^{n-1}
\end{align*}&lt;/div&gt;
&lt;p&gt;Dealing with the three pieces separately makes this much easier to read (and also to write *wink*):
&lt;/p&gt;
&lt;div class="math"&gt;$$ \sum_{n=2}^\infty z^{n-1} = \frac{z}{1 - z} $$&lt;/div&gt;
&lt;div class="math"&gt;$$ \sum_{n=2}^\infty (n-1) a_{n-1} z^{n-1} = \sum_{n=1}^\infty n a_n z^n = z G'(z) $$&lt;/div&gt;
&lt;div class="math"&gt;$$ \sum_{n=2}^\infty 2 a_{n-2} z^{n-1} = 2 \sum_{n=0}^\infty a_n z^{n+1} = 2z G(z) $$&lt;/div&gt;
&lt;p&gt;Putting it all together, we get a differential equation for &lt;span class="math"&gt;\(G(z)\)&lt;/span&gt;:
&lt;/p&gt;
&lt;div class="math"&gt;$$ G'(z) = 1 + \frac{z}{1 - z} + z G'(z) + 2z G(z) $$&lt;/div&gt;
&lt;p&gt;Cleaning it up a little, we see that it&amp;rsquo;s first order and linear, so we can put those diff eq skills to use:
&lt;/p&gt;
&lt;div class="math"&gt;$$ G'(z) = \frac{2z}{1 - z} G(z) + \frac{1}{(1 - z)^2} $$&lt;/div&gt;
&lt;p&gt;The details aren&amp;rsquo;t super important, but basically you use an &lt;a href="https://en.wikipedia.org/wiki/Integrating_factor"&gt;integrating factor&lt;/a&gt; and get:
&lt;/p&gt;
&lt;div class="math"&gt;$$ G(z) = \frac{1 + C e^{-2z}}{2(z-1)^2} $$&lt;/div&gt;
&lt;p&gt;What should &lt;span class="math"&gt;\(C\)&lt;/span&gt; be? We&amp;rsquo;ll have to use our initial conditions, and one of them is particularly straightforward: &lt;span class="math"&gt;\(G(0) = a_0\)&lt;/span&gt;, which we know is &lt;span class="math"&gt;\(0\)&lt;/span&gt;, and so &lt;span class="math"&gt;\(C = -1\)&lt;/span&gt;.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;At this point, let&amp;rsquo;s stop and recollect our thoughts. We&amp;rsquo;ve defined a function &lt;span class="math"&gt;\(G(z)\)&lt;/span&gt; whose power series coefficients are &lt;span class="math"&gt;\(a_n\)&lt;/span&gt;, the average number of pigeons in a coop of size &lt;span class="math"&gt;\(n\)&lt;/span&gt;. Our solution is now encoded in quite a peculiar way: how fast do the coefficients of &lt;span class="math"&gt;\(G(z)\)&lt;/span&gt; grow?&lt;/p&gt;
&lt;!-- TODO smart quotes --&gt;
&lt;p&gt;To figure this out, let&amp;rsquo;s put the &amp;ldquo;analytic&amp;rdquo; in &amp;ldquo;analytic combinatorics&amp;rdquo;, and consider some contour integrals. Fix some &lt;span class="math"&gt;\(R &amp;gt; 1\)&lt;/span&gt;, and define &lt;span class="math"&gt;\(I_n\)&lt;/span&gt; to be the integral of &lt;span class="math"&gt;\(G(z)/z^{n+1}\)&lt;/span&gt; around the circle of radius &lt;span class="math"&gt;\(R\)&lt;/span&gt; at the origin (taken counter-clockwise).&lt;/p&gt;
&lt;p&gt;What is &lt;span class="math"&gt;\(I_n\)&lt;/span&gt;? We can evaluate it using the &lt;a href="https://mathmondays.com/residues"&gt;residue theorem&lt;/a&gt;. There are two poles, one at &lt;span class="math"&gt;\(z = 0\)&lt;/span&gt;, and the other at &lt;span class="math"&gt;\(z = 1\)&lt;/span&gt;. The former is easy to compute; the residue is the coefficient on the &lt;span class="math"&gt;\(z^{-1}\)&lt;/span&gt; term, which is exactly &lt;span class="math"&gt;\(a_n\)&lt;/span&gt;. The second does not admit such a nice description, and so we compute it the usual way:
&lt;/p&gt;
&lt;div class="math"&gt;\begin{align*}
\res\left( \frac{G(z)}{z^{n+1}}, 1\right) &amp;amp;= \lim_{z \to 1} \frac{d}{dz} (z-1)^2 \frac{G(z)}{z^{n+1}} \\
&amp;amp;= \lim_{z \to 1} \frac{d}{dz} \frac{1 - e^{-2z}}{2 z^{n+1}} \\
&amp;amp;= \lim_{z \to 1} \frac{2 z e^{-2z} - (n+1)(1 - e^{-2z})}{2 z^{n+2}} \\
&amp;amp;= \frac{(n+3)e^{-2} - (n+1)}{2}
\end{align*}&lt;/div&gt;
&lt;p&gt;So &lt;span class="math"&gt;\(\frac{1}{2 \pi i} I_n = a_n + \frac{(n+3)e^{-2} - (n+1)}{2}\)&lt;/span&gt;. What good does this do us?&lt;/p&gt;
&lt;p&gt;If you&amp;rsquo;ve seen this trick before, you know that &lt;span class="math"&gt;\(I_n\)&lt;/span&gt; drops exponentially to &lt;span class="math"&gt;\(0\)&lt;/span&gt; as &lt;span class="math"&gt;\(n\)&lt;/span&gt; increases, but if not, here&amp;rsquo;s the justification. Let &lt;span class="math"&gt;\(M\)&lt;/span&gt; be the largest value (in terms of absolute value) that &lt;span class="math"&gt;\(G\)&lt;/span&gt; attains on the circle &lt;span class="math"&gt;\(|z| = R\)&lt;/span&gt;. Then the triangle inequality tells us:
&lt;/p&gt;
&lt;div class="math"&gt;$$ | I_n | = \left| \int_{C_R} \frac{G(z)}{z^{n+1}}~dz \right| \le \int_{C_R} \left| \frac{G(z)}{z^{n+1}} \right|~dz \le \int_{C_R} \frac{M}{R^{n+1}}~dz = \frac{2 \pi M}{R^n} $$&lt;/div&gt;
&lt;p&gt;So as &lt;span class="math"&gt;\(n \to \infty\)&lt;/span&gt;, &lt;span class="math"&gt;\(I_n\)&lt;/span&gt; drops to &lt;span class="math"&gt;\(0\)&lt;/span&gt;, and so &lt;span class="math"&gt;\(a_n\)&lt;/span&gt; approaches &lt;span class="math"&gt;\(\frac{(n+1)-(n+3)e^{-2}}{2}\)&lt;/span&gt;. Therefore, the expected density of pigeons, &lt;span class="math"&gt;\(a_n/n\)&lt;/span&gt;, approaches &lt;span class="math"&gt;\((1 - e^{-2})/2\)&lt;/span&gt;, or about &lt;span class="math"&gt;\(0.432332\)&lt;/span&gt;.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;There were other solutions that people came up with for this problem, but what I really like about this one is that it demonstrates a way to approach these problems in general, and (at least IMO) it&amp;rsquo;s a pretty unexpected one. If someone asked me to figure out how fast the coefficients of a power series grow, the residue theorem would not be the first thing on my mind. And yet, not only does it get the job done, it works for many other similar problems, in essentially the same way. I&amp;rsquo;m not much of an analysis person, but my understanding is that this kind of trick is common in analytic combinatorics, and I think that&amp;rsquo;s pretty cool!&lt;/p&gt;
&lt;script type="text/javascript"&gt;if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) {
    var align = "center",
        indent = "0em",
        linebreak = "false";

    if (false) {
        align = (screen.width &lt; 768) ? "left" : align;
        indent = (screen.width &lt; 768) ? "0em" : indent;
        linebreak = (screen.width &lt; 768) ? 'true' : linebreak;
    }

    var mathjaxscript = document.createElement('script');
    mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#';
    mathjaxscript.type = 'text/javascript';
    mathjaxscript.src = 'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.3/latest.js?config=TeX-AMS-MML_HTMLorMML';

    var configscript = document.createElement('script');
    configscript.type = 'text/x-mathjax-config';
    configscript[(window.opera ? "innerHTML" : "text")] =
        "MathJax.Hub.Config({" +
        "    config: ['MMLorHTML.js']," +
        "    TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'none' } }," +
        "    jax: ['input/TeX','input/MathML','output/HTML-CSS']," +
        "    extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js']," +
        "    displayAlign: '"+ align +"'," +
        "    displayIndent: '"+ indent +"'," +
        "    showMathMenu: true," +
        "    messageStyle: 'normal'," +
        "    tex2jax: { " +
        "        inlineMath: [ ['\\\\(','\\\\)'] ], " +
        "        displayMath: [ ['$$','$$'] ]," +
        "        processEscapes: true," +
        "        preview: 'TeX'," +
        "    }, " +
        "    'HTML-CSS': { " +
        "        availableFonts: ['STIX', 'TeX']," +
        "        preferredFont: 'STIX'," +
        "        styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'inherit ! important'} }," +
        "        linebreaks: { automatic: "+ linebreak +", width: '90% container' }," +
        "    }, " +
        "}); " +
        "if ('default' !== 'default') {" +
            "MathJax.Hub.Register.StartupHook('HTML-CSS Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax['HTML-CSS'].FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
            "MathJax.Hub.Register.StartupHook('SVG Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax.SVG.FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
        "}";

    (document.body || document.getElementsByTagName('head')[0]).appendChild(configscript);
    (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript);
}
&lt;/script&gt;</content><category term="misc"></category><category term="puzzles"></category><category term="generating-functions"></category></entry><entry><title>Cauchy Residue Theorem</title><link href="https://mathmondays.com/residues" rel="alternate"></link><published>2018-10-01T00:00:00-07:00</published><updated>2018-10-01T00:00:00-07:00</updated><author><name>Henry Swanson</name></author><id>tag:mathmondays.com,2018-10-01:/residues</id><summary type="html">&lt;p&gt;&lt;span class="mathdefs"&gt;
&lt;span class="math"&gt;\(\DeclareMathOperator{\res}{Res}\)&lt;/span&gt;
&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;The Cauchy Residue Theorem is a remarkable tool for evaluating contour integrals. Essentially, it says that, instead of computing an integral along a curve &lt;span class="math"&gt;\(\gamma\)&lt;/span&gt;, you can replace it with a sum of “residues” at some special points &lt;span class="math"&gt;\(a_k\)&lt;/span&gt;:
&lt;/p&gt;
&lt;div class="math"&gt;$$ \oint_\gamma f(z)~dz = 2 \pi i \sum_k \res(f, a_k) $$&lt;/div&gt;
&lt;p&gt;But what is a residue? What are the &lt;span class="math"&gt;\(a_k\)&lt;/span&gt;? What’s really going on here?&lt;/p&gt;
&lt;script type='text/javascript'&gt;if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) {
    var align = "center",
        indent = "0em",
        linebreak = "false";

    if (false) {
        align = (screen.width &lt; 768) ? "left" : align;
        indent = (screen.width &lt; 768) ? "0em" : indent;
        linebreak = (screen.width &lt; 768) ? 'true' : linebreak;
    }

    var mathjaxscript = document.createElement('script');
    mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#';
    mathjaxscript.type = 'text/javascript';
    mathjaxscript.src = 'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.3/latest.js?config=TeX-AMS-MML_HTMLorMML';

    var configscript = document.createElement('script');
    configscript.type = 'text/x-mathjax-config';
    configscript[(window.opera ? "innerHTML" : "text")] =
        "MathJax.Hub.Config({" +
        "    config: ['MMLorHTML.js']," +
        "    TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'none' } }," +
        "    jax: ['input/TeX','input/MathML','output/HTML-CSS']," +
        "    extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js']," +
        "    displayAlign: '"+ align +"'," +
        "    displayIndent: '"+ indent +"'," +
        "    showMathMenu: true," +
        "    messageStyle: 'normal'," +
        "    tex2jax: { " +
        "        inlineMath: [ ['\\\\(','\\\\)'] ], " +
        "        displayMath: [ ['$$','$$'] ]," +
        "        processEscapes: true," +
        "        preview: 'TeX'," +
        "    }, " +
        "    'HTML-CSS': { " +
        "        availableFonts: ['STIX', 'TeX']," +
        "        preferredFont: 'STIX'," +
        "        styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'inherit ! important'} }," +
        "        linebreaks: { automatic: "+ linebreak +", width: '90% container' }," +
        "    }, " +
        "}); " +
        "if ('default' !== 'default') {" +
            "MathJax.Hub.Register.StartupHook('HTML-CSS Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax['HTML-CSS'].FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
            "MathJax.Hub.Register.StartupHook('SVG Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax.SVG.FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
        "}";

    (document.body || document.getElementsByTagName('head')[0]).appendChild(configscript);
    (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript);
}
&lt;/script&gt;</summary><content type="html">&lt;p&gt;&lt;span class="mathdefs"&gt;
&lt;span class="math"&gt;\(\DeclareMathOperator{\res}{Res}\)&lt;/span&gt;
&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;The Cauchy Residue Theorem is a remarkable tool for evaluating contour integrals. Essentially, it says that, instead of computing an integral along a curve &lt;span class="math"&gt;\(\gamma\)&lt;/span&gt;, you can replace it with a sum of &amp;ldquo;residues&amp;rdquo; at some special points &lt;span class="math"&gt;\(a_k\)&lt;/span&gt;:
&lt;/p&gt;
&lt;div class="math"&gt;$$ \oint_\gamma f(z)~dz = 2 \pi i \sum_k \res(f, a_k) $$&lt;/div&gt;
&lt;p&gt;But what is a residue? What are the &lt;span class="math"&gt;\(a_k\)&lt;/span&gt;? What&amp;rsquo;s really going on here?&lt;/p&gt;


&lt;h1&gt;Residues&lt;/h1&gt;
&lt;p&gt;Since this isn&amp;rsquo;t a rigorous complex analysis text, it&amp;rsquo;s a post on some blog, we&amp;rsquo;ll gloss over some of the technicalities, such as verifying convergence, or checking that holomorphic functions are analytic. All we need is some imagination, and the following fact:&lt;/p&gt;
&lt;div class="theorem-box"&gt;
&lt;div class="theorem-title"&gt;Path Independence&lt;/div&gt;
&lt;p&gt;Let &lt;span class="math"&gt;\(D\)&lt;/span&gt; be a region of the complex plane and &lt;span class="math"&gt;\(f\)&lt;/span&gt; be a function holomorphic (complex-differentiable) on &lt;span class="math"&gt;\(D\)&lt;/span&gt;. If you take a curve &lt;span class="math"&gt;\(\gamma\)&lt;/span&gt;, and continuously deform it into a curve &lt;span class="math"&gt;\(\gamma'\)&lt;/span&gt;, staying inside &lt;span class="math"&gt;\(D\)&lt;/span&gt;, then
&lt;div class="math"&gt;$$ \int_\gamma f(z)~dz = \int_{\gamma'} f(z)~dz $$&lt;/div&gt;
&lt;/p&gt;
&lt;p&gt;Also, we say two such curves are &amp;ldquo;homotopic&amp;rdquo;.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;For example, if the blue dashed area is &lt;span class="math"&gt;\(D\)&lt;/span&gt;, the curves in the first picture are homotopic, but not the curves in the second picture. There is no way to deform one of the curves into the other, without leaving the domain.&lt;/p&gt;
&lt;div class="image-container"&gt;
&lt;p&gt;&lt;img alt="Homotopic curves" height="250px" src="/images/residues/contours-1.svg"&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Non-homotopic curves" height="250px" src="/images/residues/contours-2.svg"&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;If you&amp;rsquo;re comfortable with multivariable calculus, compare this to the Fundamental Theorem of Calculus for line integrals. How does complex-differentiability encode the &amp;ldquo;curl-free&amp;rdquo; condition?&lt;/p&gt;
&lt;p&gt;This means that if &lt;span class="math"&gt;\(\gamma\)&lt;/span&gt; is a closed loop and &lt;span class="math"&gt;\(f\)&lt;/span&gt; is holomorphic on the region enclosed by &lt;span class="math"&gt;\(\gamma\)&lt;/span&gt;, then &lt;span class="math"&gt;\(\gamma\)&lt;/span&gt; is homotopic to a point, which tells us that &lt;span class="math"&gt;\(\int_\gamma f~dz\)&lt;/span&gt; must be zero. Where things get interesting is when there are points in &lt;span class="math"&gt;\(D\)&lt;/span&gt; at which &lt;span class="math"&gt;\(f\)&lt;/span&gt; is not holomorphic.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;So let&amp;rsquo;s approach the theorem.&lt;/p&gt;
&lt;p&gt;Let &lt;span class="math"&gt;\(f\)&lt;/span&gt; be a function holomorphic on &lt;span class="math"&gt;\(D\)&lt;/span&gt;, except at a set of points &lt;span class="math"&gt;\(a_k\)&lt;/span&gt;, and &lt;span class="math"&gt;\(\gamma\)&lt;/span&gt; a closed curve in &lt;span class="math"&gt;\(D\)&lt;/span&gt;, avoiding the points &lt;span class="math"&gt;\(a_k\)&lt;/span&gt;. Without loss of generality, we can assume all of the &lt;span class="math"&gt;\(a_k\)&lt;/span&gt; lie within the region enclosed by &lt;span class="math"&gt;\(\gamma\)&lt;/span&gt; (if not, we just make &lt;span class="math"&gt;\(D\)&lt;/span&gt; smaller). We can use the path-independence of contour integrals to deform &lt;span class="math"&gt;\(\gamma\)&lt;/span&gt;, without changing the value of the integral:&lt;/p&gt;
&lt;div class="image-container"&gt;
&lt;p&gt;&lt;img alt="A contour around several a_k" height="250px" src="/images/residues/deform-1.svg"&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Deformed into several circles with sections between them" height="250px" src="/images/residues/deform-2.svg"&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;These corridors between the circles can be moved so they lie on top of each other, and cancel out. This leaves us with circles &lt;span class="math"&gt;\(C_k\)&lt;/span&gt;, one for each point &lt;span class="math"&gt;\(a_k\)&lt;/span&gt;.
&lt;/p&gt;
&lt;div class="math"&gt;$$ \oint_\gamma f(z)~dz = \sum_k \oint_{C_k} f(z)~dz $$&lt;/div&gt;
&lt;div class="image-container"&gt;
&lt;p&gt;&lt;img alt="A few circular contours" height="250px" src="/images/residues/deform-3.svg"&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;So all we need to do to now is determine what the integral of &lt;span class="math"&gt;\(f\)&lt;/span&gt; on each circle is.&lt;/p&gt;
&lt;div class="theorem-box"&gt;
&lt;div class="theorem-title"&gt;Residue Definition #1&lt;/div&gt;
&lt;p&gt;The residue of &lt;span class="math"&gt;\(f\)&lt;/span&gt; at &lt;span class="math"&gt;\(a\)&lt;/span&gt; is &lt;span class="math"&gt;\(\displaystyle \frac{1}{2 \pi i} \oint_{C} f(z)~dz\)&lt;/span&gt;, where &lt;span class="math"&gt;\(C\)&lt;/span&gt; is a small circle around &lt;span class="math"&gt;\(a\)&lt;/span&gt;.
&lt;br&gt;&lt;br&gt;
From path-independence, we know we can shrink the circles as much as we like without changing the value of the integral, which tells us this definition is well-defined (just make sure &lt;span class="math"&gt;\(f\)&lt;/span&gt; is holomorphic everywhere else in your circle!).&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;&amp;ldquo;But wait,&amp;rdquo; you complain, &amp;ldquo;This definition is ridiculous; you set it up in such a way that the residue theorem is trivial! What gives?&amp;rdquo;&lt;/p&gt;
&lt;p&gt;Well, there are other, equivalent definitions of residue that are much easier to compute, and those are what give the residue theorem its power. Sometimes people will use these computational definitions of residue as the primary definition, but this obscures what&amp;rsquo;s going on. When you think of what the residue &lt;em&gt;means&lt;/em&gt;, in a spiritual sense, you should think of it as &amp;ldquo;the integral of a small loop around a point&amp;rdquo;.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;A point at which &lt;span class="math"&gt;\(f\)&lt;/span&gt; is not holomorphic is called a &amp;ldquo;singularity&amp;rdquo;, and there are a few types. The most manageable of these is the pole, where &lt;span class="math"&gt;\(f(z)\)&lt;/span&gt; &amp;ldquo;behaves like&amp;rdquo; &lt;span class="math"&gt;\(\frac{1}{(z-a)^n}\)&lt;/span&gt;. To be more concrete, &lt;span class="math"&gt;\(f\)&lt;/span&gt; has a pole (of order &lt;span class="math"&gt;\(n\)&lt;/span&gt;) at &lt;span class="math"&gt;\(a\)&lt;/span&gt; if &lt;span class="math"&gt;\((z - a)^n f(z)\)&lt;/span&gt; is holomorphic and non-zero at &lt;span class="math"&gt;\(a\)&lt;/span&gt;. In other words, a zero of order &lt;span class="math"&gt;\(n\)&lt;/span&gt; cancels out a pole of order &lt;span class="math"&gt;\(n\)&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;For example, &lt;span class="math"&gt;\(\frac{1}{\sin z}\)&lt;/span&gt; has a pole of order &lt;span class="math"&gt;\(1\)&lt;/span&gt; at &lt;span class="math"&gt;\(z = 0\)&lt;/span&gt;, as evidenced by the fact that &lt;span class="math"&gt;\(\frac{z}{\sin z}\)&lt;/span&gt; approaches &lt;span class="math"&gt;\(1\)&lt;/span&gt; as &lt;span class="math"&gt;\(z \to 0\)&lt;/span&gt;. The rational function &lt;span class="math"&gt;\(\frac{x-2}{x^2 + 1}\)&lt;/span&gt; has poles at &lt;span class="math"&gt;\(\pm i\)&lt;/span&gt;, also of order &lt;span class="math"&gt;\(1\)&lt;/span&gt;. And the function &lt;span class="math"&gt;\(\frac{1}{\cos z - 1}\)&lt;/span&gt; has a pole of order &lt;span class="math"&gt;\(2\)&lt;/span&gt; at zero.&lt;/p&gt;
&lt;p&gt;There are other kinds of singularities, but nothing good comes from them, so we will henceforth only consider singularities that are poles.&lt;/p&gt;
&lt;p&gt;If &lt;span class="math"&gt;\(f\)&lt;/span&gt; has a pole of order &lt;span class="math"&gt;\(n\)&lt;/span&gt; at &lt;span class="math"&gt;\(a\)&lt;/span&gt;, then &lt;span class="math"&gt;\((z-a)^n f(z)\)&lt;/span&gt; has a Taylor series centered at &lt;span class="math"&gt;\(z = a\)&lt;/span&gt;, with non-zero constant term:
&lt;/p&gt;
&lt;div class="math"&gt;$$ (z-a)^n f(z) = b_0 + b_1 (z - a) + b_2 (z - a)^2 + b_3 (z - a)^3 + \cdots $$&lt;/div&gt;
&lt;p&gt;Letting &lt;span class="math"&gt;\(c_k = b_{k+n}\)&lt;/span&gt;, we can define a series for &lt;span class="math"&gt;\(f(z)\)&lt;/span&gt; itself, called the &lt;strong&gt;Laurent series&lt;/strong&gt;:
&lt;/p&gt;
&lt;div class="math"&gt;$$ f(z) = \frac{c_{-n}}{(z-a)^n} + \frac{c_{-n+1}}{(z - a)^{n-1}} + \cdots + \frac{c_{-1}}{z - a} + c_0 + c_1 (z - a) + \cdots $$&lt;/div&gt;
&lt;p&gt;It&amp;rsquo;s almost a Taylor series, but we allow (finitely many) negative terms as well. This expansion will allow us to compute the residue at &lt;span class="math"&gt;\(a\)&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;Let&amp;rsquo;s just take a single term, &lt;span class="math"&gt;\((z - a)^n\)&lt;/span&gt;, and we&amp;rsquo;ll recombine our results at the end, because integrals are linear. What happens when we integrate around a circle centered at &lt;span class="math"&gt;\(a\)&lt;/span&gt; with radius &lt;span class="math"&gt;\(R\)&lt;/span&gt;? Subsitute &lt;span class="math"&gt;\(z = a + R e^{it}\)&lt;/span&gt; for the contour:
&lt;/p&gt;
&lt;div class="math"&gt;$$ \oint (z - a)^n~dz = \int_0^{2\pi} (R e^{it})^n~d(R e^{it}) = i R^{n+1} \int_0^{2\pi} e^{(n+1) it}~dt = i R^{n+1} \left[ \frac{e^{(n+1)it}}{(n+1)i} \right]^{2\pi}_0 $$&lt;/div&gt;
&lt;p&gt;Since &lt;span class="math"&gt;\(n\)&lt;/span&gt; is an integer, &lt;span class="math"&gt;\(e^{(n+1)2 \pi i} = 1\)&lt;/span&gt;, and &lt;span class="math"&gt;\(e^{0} = 1\)&lt;/span&gt;, so this integral should be zero. But that doesn&amp;rsquo;t make any sense; that would suggest that the integral of &lt;em&gt;any&lt;/em&gt; function around a circle is zero. But that&amp;rsquo;s not true.&lt;/p&gt;
&lt;p&gt;We actually made a mistake in the last step; the antiderivative of &lt;span class="math"&gt;\(e^{kt}\)&lt;/span&gt; is &lt;span class="math"&gt;\(e^{kt} / k\)&lt;/span&gt; &lt;em&gt;unless&lt;/em&gt; &lt;span class="math"&gt;\(k = 0\)&lt;/span&gt;. For that to happen, we need &lt;span class="math"&gt;\(n = -1\)&lt;/span&gt;, and in that case:
&lt;/p&gt;
&lt;div class="math"&gt;$$ \oint \frac{1}{z - a}~dz = \int_0^{2\pi} \frac{d(R e^{it})}{R e^{it}} = \int_0^{2\pi} i~dt = 2 \pi i $$&lt;/div&gt;
&lt;p&gt;Therefore, when we integrate &lt;span class="math"&gt;\(f(z) = \sum_{k = -n}^\infty c_k (z - a)^k\)&lt;/span&gt;, all the terms vanish, except for the &lt;span class="math"&gt;\(k = -1\)&lt;/span&gt; term, which pops out a &lt;span class="math"&gt;\(2 \pi i \cdot c_{-1}\)&lt;/span&gt;. This gives us another definition for the residue!&lt;/p&gt;
&lt;div class="theorem-box"&gt;
&lt;div class="theorem-title"&gt;Residue Definition #2&lt;/div&gt;
&lt;p&gt;If &lt;span class="math"&gt;\(f\)&lt;/span&gt; has a pole at &lt;span class="math"&gt;\(a\)&lt;/span&gt;, and a Laurent series &lt;span class="math"&gt;\(f(z) = \sum c_k (z - a)^k\)&lt;/span&gt;, then the residue of &lt;span class="math"&gt;\(f\)&lt;/span&gt; at &lt;span class="math"&gt;\(a\)&lt;/span&gt; is &lt;span class="math"&gt;\(c_{-1}\)&lt;/span&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;hr&gt;
&lt;p&gt;If this were all we knew, it would still be a pretty good theorem. Finding power series instead of taking integrals? Not too shabby. But we can take it one step more.&lt;/p&gt;
&lt;p&gt;Finding power series can be frustrating; how many people know the power series for &lt;span class="math"&gt;\(\tan z\)&lt;/span&gt; off the top of their head? Besides, we don&amp;rsquo;t need the whole thing, just a specific coefficient.&lt;/p&gt;
&lt;p&gt;Instead, we&amp;rsquo;ll assume the existence of a power series, and use some tricks to extract &lt;span class="math"&gt;\(c_{-1}\)&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;Say we&amp;rsquo;ve got a simple pole (a pole of order &lt;span class="math"&gt;\(1\)&lt;/span&gt;). By multiplying by &lt;span class="math"&gt;\((z - a)\)&lt;/span&gt;, we can get a Taylor series:
&lt;/p&gt;
&lt;div class="math"&gt;$$ (z - a) f(z) = c_{-1} + c_0 (z - a) + c_1 (z - a)^2 + \cdots $$&lt;/div&gt;
&lt;p&gt;If we plug in &lt;span class="math"&gt;\(z = a\)&lt;/span&gt;, then we&amp;rsquo;ll get &lt;span class="math"&gt;\(c_{-1}\)&lt;/span&gt;. Well, technically, we can&amp;rsquo;t plug in &lt;span class="math"&gt;\(z = a\)&lt;/span&gt; directly, because &lt;span class="math"&gt;\(f(z)\)&lt;/span&gt; isn&amp;rsquo;t defined at &lt;span class="math"&gt;\(a\)&lt;/span&gt;. But if we take a limit, that&amp;rsquo;s okay.&lt;/p&gt;
&lt;p&gt;How about a pole of order &lt;span class="math"&gt;\(2\)&lt;/span&gt;? Our trick won&amp;rsquo;t work the same way; if we apply it naively, we&amp;rsquo;ll just get &lt;span class="math"&gt;\(c_{-2}\)&lt;/span&gt;, which we don&amp;rsquo;t care about at all.
&lt;/p&gt;
&lt;div class="math"&gt;$$ (z - a)^2 f(z) = c_{-2} + c_{-1} (z - a) + c_0 (z - a)^2 + c_1 (z - a)^3 \cdots $$&lt;/div&gt;
&lt;p&gt;But if we take the derivative, we can knock off a term from the end, and &lt;em&gt;then&lt;/em&gt; we can take the limit as &lt;span class="math"&gt;\(z \to a\)&lt;/span&gt;.
&lt;/p&gt;
&lt;div class="math"&gt;$$ \frac{d}{dz} (z - a)^2 f(z) = c_{-1} + 2 c_0 (z - a) + 3 c_1 (z - a)^2 \cdots $$&lt;/div&gt;
&lt;p&gt;For &lt;span class="math"&gt;\(n = 3\)&lt;/span&gt;, there&amp;rsquo;s a slight wrinkle; we end up with an extra factor of &lt;span class="math"&gt;\(2\)&lt;/span&gt; that we have to divide out:
&lt;/p&gt;
&lt;div class="math"&gt;$$ \frac{d^2}{dz^2} (z - a)^3 f(z) = 2 c_{-1} + 6 c_0 (z - a) + 12 c_1 (z - a)^2 \cdots $$&lt;/div&gt;
&lt;p&gt;The pattern for higher-order poles is similar:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;multiply by &lt;span class="math"&gt;\((z - a)^n\)&lt;/span&gt;; this changes our term of interest to &lt;span class="math"&gt;\(c_{-1} (z - a)^{n-1}\)&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;take &lt;span class="math"&gt;\(n-1\)&lt;/span&gt; derivatives; the important term is now &lt;span class="math"&gt;\((n-1)! c_{-1}\)&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;divide by &lt;span class="math"&gt;\((n-1)!\)&lt;/span&gt;; the important term is now &lt;span class="math"&gt;\(c_{-1}\)&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;take the limit as &lt;span class="math"&gt;\(z \to a\)&lt;/span&gt;; all higher order terms vanish, and we are left with &lt;span class="math"&gt;\(c_{-1}\)&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;We now have our last, and most computationally accessible, definition of residue:&lt;/p&gt;
&lt;div class="theorem-box"&gt;
&lt;div class="theorem-title"&gt;Residue Definition #3&lt;/div&gt;
&lt;p&gt;If &lt;span class="math"&gt;\(f\)&lt;/span&gt; has a pole at &lt;span class="math"&gt;\(a\)&lt;/span&gt; of order &lt;span class="math"&gt;\(n\)&lt;/span&gt;, then the residue of &lt;span class="math"&gt;\(f\)&lt;/span&gt; at &lt;span class="math"&gt;\(a\)&lt;/span&gt; is:
&lt;div class="math"&gt;$$ \res(f, a) = \lim_{z \to a} \frac{1}{(n-1)!} \frac{d^{n-1}}{dz^{n-1}} (z - a)^n f(z) $$&lt;/div&gt;
&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;This is the definition often presented as &amp;ldquo;the&amp;rdquo; definition of residue, but this hides where the residue theorem comes from, and why residues are defined the way they are.&lt;/p&gt;
&lt;h1&gt;Winding Number&lt;/h1&gt;
&lt;p&gt;As a final note, we can add a tiny bit more generality to the theorem.&lt;/p&gt;
&lt;p&gt;Technically, we&amp;rsquo;ve been a little sloppy with our curve &lt;span class="math"&gt;\(\gamma\)&lt;/span&gt;. What if it goes the other way? Or loops around some points multiple times?&lt;/p&gt;
&lt;p&gt;To fix this, we introduce &lt;span class="math"&gt;\(W(\gamma, a)\)&lt;/span&gt;, the &lt;strong&gt;winding number&lt;/strong&gt; of &lt;span class="math"&gt;\(\gamma\)&lt;/span&gt; around &lt;span class="math"&gt;\(a\)&lt;/span&gt;. It means exactly what the name suggests, it indicates how many times (and in what direction) &lt;span class="math"&gt;\(\gamma\)&lt;/span&gt; loops around &lt;span class="math"&gt;\(a\)&lt;/span&gt;. Counter-clockwise is positive, and clockwise is negative. Two examples are pictured below:&lt;/p&gt;
&lt;div class="image-container"&gt;
&lt;p&gt;&lt;img alt="A limacon" height="250px" src="/images/residues/winding-1.svg"&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="A lemniscate" height="250px" src="/images/residues/winding-3.svg"&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;In the first picture, the specified points have winding number +1 and +2, and in the second, they have -1 and +1. The only thing this changes about our proof is that when we deform our &lt;span class="math"&gt;\(\gamma\)&lt;/span&gt; into circles, we may get multiple loops around the same point:&lt;/p&gt;
&lt;div class="image-container"&gt;
&lt;p&gt;&lt;img alt="A limacon" height="250px" src="/images/residues/winding-2.svg"&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="A lemniscate" height="250px" src="/images/residues/winding-4.svg"&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;But by definition, the number of loops is exactly the winding number, and if the loop runs clockwise, we pick up a negative sign. So after accounting for multiplicity and direction, we get:
&lt;/p&gt;
&lt;div class="math"&gt;$$ \oint_\gamma f(z)~dz = \sum_k W(\gamma, a_k) \res(f, a_k) $$&lt;/div&gt;
&lt;script type="text/javascript"&gt;if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) {
    var align = "center",
        indent = "0em",
        linebreak = "false";

    if (false) {
        align = (screen.width &lt; 768) ? "left" : align;
        indent = (screen.width &lt; 768) ? "0em" : indent;
        linebreak = (screen.width &lt; 768) ? 'true' : linebreak;
    }

    var mathjaxscript = document.createElement('script');
    mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#';
    mathjaxscript.type = 'text/javascript';
    mathjaxscript.src = 'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.3/latest.js?config=TeX-AMS-MML_HTMLorMML';

    var configscript = document.createElement('script');
    configscript.type = 'text/x-mathjax-config';
    configscript[(window.opera ? "innerHTML" : "text")] =
        "MathJax.Hub.Config({" +
        "    config: ['MMLorHTML.js']," +
        "    TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'none' } }," +
        "    jax: ['input/TeX','input/MathML','output/HTML-CSS']," +
        "    extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js']," +
        "    displayAlign: '"+ align +"'," +
        "    displayIndent: '"+ indent +"'," +
        "    showMathMenu: true," +
        "    messageStyle: 'normal'," +
        "    tex2jax: { " +
        "        inlineMath: [ ['\\\\(','\\\\)'] ], " +
        "        displayMath: [ ['$$','$$'] ]," +
        "        processEscapes: true," +
        "        preview: 'TeX'," +
        "    }, " +
        "    'HTML-CSS': { " +
        "        availableFonts: ['STIX', 'TeX']," +
        "        preferredFont: 'STIX'," +
        "        styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'inherit ! important'} }," +
        "        linebreaks: { automatic: "+ linebreak +", width: '90% container' }," +
        "    }, " +
        "}); " +
        "if ('default' !== 'default') {" +
            "MathJax.Hub.Register.StartupHook('HTML-CSS Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax['HTML-CSS'].FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
            "MathJax.Hub.Register.StartupHook('SVG Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax.SVG.FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
        "}";

    (document.body || document.getElementsByTagName('head')[0]).appendChild(configscript);
    (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript);
}
&lt;/script&gt;</content><category term="misc"></category><category term="analysis"></category></entry><entry><title>Monsky's Theorem</title><link href="https://mathmondays.com/monskys-theorem" rel="alternate"></link><published>2018-09-24T00:00:00-07:00</published><updated>2018-09-24T00:00:00-07:00</updated><author><name>Henry Swanson</name></author><id>tag:mathmondays.com,2018-09-24:/monskys-theorem</id><summary type="html">&lt;p&gt;&lt;span class="mathdefs"&gt;
&lt;span class="math"&gt;\(\newcommand{\RR}{\Bbb R}
\newcommand{\QQ}{\Bbb Q}
\newcommand{\ZZ}{\Bbb Z}\)&lt;/span&gt;
&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;For which &lt;span class="math"&gt;\(n\)&lt;/span&gt; can you cut a square into &lt;span class="math"&gt;\(n\)&lt;/span&gt; triangles of equal area?&lt;/p&gt;
&lt;p&gt;This question appears quite simple; it could have been posed to the Ancient Greeks. But like many good puzzles, it is a remarkably stubborn one.&lt;/p&gt;
&lt;p&gt;It was first solved in 1970, by Paul Monsky. Despite the completely geometric nature of the question, his proof relies primarily on number theory and combinatorics! There is a small amount of algebraic machinery involved, but his proof is quite accessible, and we will describe it below.&lt;/p&gt;
&lt;script type='text/javascript'&gt;if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) {
    var align = "center",
        indent = "0em",
        linebreak = "false";

    if (false) {
        align = (screen.width &lt; 768) ? "left" : align;
        indent = (screen.width &lt; 768) ? "0em" : indent;
        linebreak = (screen.width &lt; 768) ? 'true' : linebreak;
    }

    var mathjaxscript = document.createElement('script');
    mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#';
    mathjaxscript.type = 'text/javascript';
    mathjaxscript.src = 'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.3/latest.js?config=TeX-AMS-MML_HTMLorMML';

    var configscript = document.createElement('script');
    configscript.type = 'text/x-mathjax-config';
    configscript[(window.opera ? "innerHTML" : "text")] =
        "MathJax.Hub.Config({" +
        "    config: ['MMLorHTML.js']," +
        "    TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'none' } }," +
        "    jax: ['input/TeX','input/MathML','output/HTML-CSS']," +
        "    extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js']," +
        "    displayAlign: '"+ align +"'," +
        "    displayIndent: '"+ indent +"'," +
        "    showMathMenu: true," +
        "    messageStyle: 'normal'," +
        "    tex2jax: { " +
        "        inlineMath: [ ['\\\\(','\\\\)'] ], " +
        "        displayMath: [ ['$$','$$'] ]," +
        "        processEscapes: true," +
        "        preview: 'TeX'," +
        "    }, " +
        "    'HTML-CSS': { " +
        "        availableFonts: ['STIX', 'TeX']," +
        "        preferredFont: 'STIX'," +
        "        styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'inherit ! important'} }," +
        "        linebreaks: { automatic: "+ linebreak +", width: '90% container' }," +
        "    }, " +
        "}); " +
        "if ('default' !== 'default') {" +
            "MathJax.Hub.Register.StartupHook('HTML-CSS Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax['HTML-CSS'].FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
            "MathJax.Hub.Register.StartupHook('SVG Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax.SVG.FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
        "}";

    (document.body || document.getElementsByTagName('head')[0]).appendChild(configscript);
    (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript);
}
&lt;/script&gt;</summary><content type="html">&lt;p&gt;&lt;span class="mathdefs"&gt;
&lt;span class="math"&gt;\(\newcommand{\RR}{\Bbb R}
\newcommand{\QQ}{\Bbb Q}
\newcommand{\ZZ}{\Bbb Z}\)&lt;/span&gt;
&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;For which &lt;span class="math"&gt;\(n\)&lt;/span&gt; can you cut a square into &lt;span class="math"&gt;\(n\)&lt;/span&gt; triangles of equal area?&lt;/p&gt;
&lt;p&gt;This question appears quite simple; it could have been posed to the Ancient Greeks. But like many good puzzles, it is a remarkably stubborn one.&lt;/p&gt;
&lt;p&gt;It was first solved in 1970, by Paul Monsky. Despite the completely geometric nature of the question, his proof relies primarily on number theory and combinatorics! There is a small amount of algebraic machinery involved, but his proof is quite accessible, and we will describe it below.&lt;/p&gt;


&lt;hr&gt;
&lt;p&gt;If you have a napkin on hand, it should be straightforward to come up with a solution for &lt;span class="math"&gt;\(n = 2\)&lt;/span&gt; and &lt;span class="math"&gt;\(4\)&lt;/span&gt;. A little more thought should yield solutions for any even &lt;span class="math"&gt;\(n\)&lt;/span&gt;. One such scheme is depicted below:&lt;/p&gt;
&lt;p&gt;&lt;img alt="Equidissection when n is even" height="auto" src="/images/monsky/even-equidissections.svg" width="100%"&gt;&lt;/p&gt;
&lt;p&gt;But when &lt;span class="math"&gt;\(n\)&lt;/span&gt; is odd, you will have considerably more trouble. Monsky&amp;rsquo;s theorem states that such a task is, in fact, impossible.&lt;/p&gt;
&lt;div class="theorem-box"&gt;
&lt;div class="theorem-title"&gt;Monsky's Theorem&lt;/div&gt;
&lt;p&gt;The unit square cannot be dissected into an odd number of triangles of equal area.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;The result clearly extends to squares of any size, and in fact, arbitrary parallelograms.&lt;/p&gt;
&lt;p&gt;There are two key ingredients here:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Sperner&amp;rsquo;s Lemma&lt;/li&gt;
&lt;li&gt;2-adic valuations&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Proof sketch:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Color the vertices of the dissection using three colors&lt;/li&gt;
&lt;li&gt;Find a triangle with exactly one vertex of each color&lt;/li&gt;
&lt;li&gt;Show that such a triangle cannot have area &lt;span class="math"&gt;\(1/n\)&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If the last step seems ridiculous to you, don&amp;rsquo;t worry. It&amp;rsquo;s completely non-obvious that the coloring of a triangle&amp;rsquo;s vertices could at all be related to its area. But once you see the trick, it will (hopefully) seem less mysterious. Just hang in there.&lt;/p&gt;
&lt;h1&gt;Sperner&amp;rsquo;s Lemma&lt;/h1&gt;
&lt;p&gt;Consider a polygon &lt;span class="math"&gt;\(P\)&lt;/span&gt; in the plane, and some dissection of it into triangles &lt;span class="math"&gt;\(T_i\)&lt;/span&gt;. As promised in the previous section, color the vertices with three colors; we&amp;rsquo;ll use red, green, and blue. We will call a segment &lt;strong&gt;purple&lt;/strong&gt; if it has one red and one blue endpoint. A triangle with exactly one corner of each color will be called &lt;strong&gt;trichromatic&lt;/strong&gt;. (Great terminology, eh?)&lt;/p&gt;
&lt;p&gt;A &lt;strong&gt;Sperner coloring&lt;/strong&gt; is a coloring of the vertices of &lt;span class="math"&gt;\(T_i\)&lt;/span&gt;, using three colors, with the following properties:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;no face of &lt;span class="math"&gt;\(P\)&lt;/span&gt;, nor any face of one of the &lt;span class="math"&gt;\(T_i\)&lt;/span&gt;, contains vertices of all three colors&lt;/li&gt;
&lt;li&gt;there are an odd number of purple segments on the boundary of &lt;span class="math"&gt;\(P\)&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;For example, the following are Sperner colorings:&lt;/p&gt;
&lt;div class="image-container"&gt;
&lt;p&gt;&lt;img alt="Sperner Coloring 1" height="200px" src="/images/monsky/sperner-1.svg"&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Sperner Coloring 2" height="200px" src="/images/monsky/sperner-2.svg"&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;But these are not &amp;ndash; the first has lines of more than two colors, and the second has an even number of purple boundary segments:&lt;/p&gt;
&lt;div class="image-container"&gt;
&lt;p&gt;&lt;img alt="Non-Sperner Coloring 1" height="200px" src="/images/monsky/sperner-3.svg"&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Non-Sperner Coloring 2" height="200px" src="/images/monsky/sperner-4.svg"&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;In this format, Sperner&amp;rsquo;s lemma can be stated as:&lt;/p&gt;
&lt;div class="theorem-box"&gt;
&lt;div class="theorem-title"&gt;Sperner's Lemma&lt;/div&gt;
&lt;p&gt;Given a Sperner coloring of &lt;span class="math"&gt;\((P, T_i)\)&lt;/span&gt;, there is at least one trichromatic triangle.
&lt;br&gt;
&lt;br&gt;
Check the examples above, both Sperner colorings have trichromatic triangles. The first non-Sperner coloring has one, but the other does not.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;&lt;em&gt;Proof&lt;/em&gt;: First, we establish a lemma: a triangle &lt;span class="math"&gt;\(T\)&lt;/span&gt; is trichromatic iff its faces have an odd number of purple segments.&lt;/p&gt;
&lt;p&gt;This is easy to see if there are no vertices lying on the faces of &lt;span class="math"&gt;\(T\)&lt;/span&gt;: a trichromatic triangle has exactly one purple segment, and otherwise, it has zero or two.&lt;/p&gt;
&lt;p&gt;We can reduce to this case by deleting vertices that lie on the faces of &lt;span class="math"&gt;\(T\)&lt;/span&gt;. We claim that this won&amp;rsquo;t change whether the number of purple segments is even or odd. And of course, since we aren&amp;rsquo;t touching the corners, it can&amp;rsquo;t change whether or not the triangle is trichromatic. Consider some vertex on a face of &lt;span class="math"&gt;\(T\)&lt;/span&gt;. If that face contains green at all, then by the first property of Sperner colorings, it can&amp;rsquo;t ever have purple segments, as it must omit either red or blue vertices. Monochromatic faces also present no concern, because they also cannot have purple segments. The remaining cases are shown below:&lt;/p&gt;
&lt;p&gt;&lt;img alt="Illustration of the cases" height="auto" src="/images/monsky/delete-purple.svg" width="100%"&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;Cool. How does this help us?&lt;/p&gt;
&lt;p&gt;Let&amp;rsquo;s do some counting mod &lt;span class="math"&gt;\(2\)&lt;/span&gt;. Let &lt;span class="math"&gt;\(f(T)\)&lt;/span&gt; be the number of purple segments in a triangle &lt;span class="math"&gt;\(T\)&lt;/span&gt;. What is the sum of all &lt;span class="math"&gt;\(f(T)\)&lt;/span&gt;, mod &lt;span class="math"&gt;\(2\)&lt;/span&gt;?&lt;/p&gt;
&lt;p&gt;On one hand, it&amp;rsquo;s simply the number of trichromatic triangles; &lt;span class="math"&gt;\(f(T) \not\equiv 0 \pmod 2\)&lt;/span&gt; exactly when &lt;span class="math"&gt;\(T\)&lt;/span&gt; is trichromatic. But also, it&amp;rsquo;s the number of purple segments on the boundary. Each purple segment in the interior of &lt;span class="math"&gt;\(P\)&lt;/span&gt; gets counted twice, and so contributes nothing, but boundary segments contribute exactly once.&lt;/p&gt;
&lt;p&gt;Since there are an odd number of purple segments on the boundary of &lt;span class="math"&gt;\(P\)&lt;/span&gt;, there are an odd number of trichromatic triangles. In particular, there&amp;rsquo;s at least one of them.&lt;/p&gt;
&lt;p&gt;(This illustrates a common trick among combinatorialists: if you want to show that an object &lt;span class="math"&gt;\(X\)&lt;/span&gt; exists, show that the number of &lt;span class="math"&gt;\(X\)&lt;/span&gt;s is odd. Cheeky!)&lt;/p&gt;
&lt;h1&gt;&lt;span class="math"&gt;\(2\)&lt;/span&gt;-adic valuations&lt;/h1&gt;
&lt;p&gt;Before we describe our coloring, we&amp;rsquo;ll take an unexpected detour into the land of valuations.&lt;/p&gt;
&lt;p&gt;A &lt;strong&gt;valuation&lt;/strong&gt; is a function that assigns a notion of &amp;ldquo;value&amp;rdquo; or &amp;ldquo;size&amp;rdquo; to numbers. There&amp;rsquo;s multiple conventions, but we one we&amp;rsquo;ll use is that a valuation on a ring &lt;span class="math"&gt;\(R\)&lt;/span&gt; is a function &lt;span class="math"&gt;\(\nu\)&lt;/span&gt; from &lt;span class="math"&gt;\(R\)&lt;/span&gt; to &lt;span class="math"&gt;\(\RR^+ \cup \{ \infty \}\)&lt;/span&gt; such that:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class="math"&gt;\(\nu(x) = \infty\)&lt;/span&gt; if and only if &lt;span class="math"&gt;\(x = 0\)&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class="math"&gt;\(\nu(xy) = \nu(x) + \nu(y)\)&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class="math"&gt;\(\nu(x + y) \ge \min(\nu(x), \nu(y))\)&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;We&amp;rsquo;ll assign the obvious rules to &lt;span class="math"&gt;\(\infty\)&lt;/span&gt;, such as, &lt;span class="math"&gt;\(a + \infty = \infty\)&lt;/span&gt;, and &lt;span class="math"&gt;\(\min(a, \infty) = a\)&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;One example of a valuation, that might help guide your intuition, is the &amp;ldquo;multiplicity of a root&amp;rdquo;. For some polynomial &lt;span class="math"&gt;\(p(x) = a_0 + a_1 x + \cdots + a_n x^n\)&lt;/span&gt;, let &lt;span class="math"&gt;\(\nu(p)\)&lt;/span&gt; be the index of the first non-zero coefficient. For example, &lt;span class="math"&gt;\(\nu(3x^4 - x^5 + 7x^8) = 4\)&lt;/span&gt;, and &lt;span class="math"&gt;\(\nu(1 + x - x^2) = 0\)&lt;/span&gt;. If all coefficients are zero, define &lt;span class="math"&gt;\(\nu(p) = \infty\)&lt;/span&gt;. In essence, &lt;span class="math"&gt;\(\nu(p)\)&lt;/span&gt; is &amp;ldquo;how many&amp;rdquo; roots &lt;span class="math"&gt;\(p\)&lt;/span&gt; has at &lt;span class="math"&gt;\(0\)&lt;/span&gt;; e.g., is &lt;span class="math"&gt;\(0\)&lt;/span&gt; a single root? A double root? Not a root at all?&lt;/p&gt;
&lt;p&gt;Is this a valuation?&lt;/p&gt;
&lt;p&gt;Well we satisfied the first property by fiat. The second one is pretty easy to see; when you multiply two polynomials, the lowest term has the sum of the degrees. And the third one ain&amp;rsquo;t too bad either. If both &lt;span class="math"&gt;\(p\)&lt;/span&gt; and &lt;span class="math"&gt;\(q\)&lt;/span&gt; have zero coefficients on &lt;span class="math"&gt;\(x^k\)&lt;/span&gt;, &lt;span class="math"&gt;\(p+q\)&lt;/span&gt; certainly will too. The converse isn&amp;rsquo;t true though, it&amp;rsquo;s possible that the low-degree terms in &lt;span class="math"&gt;\(p\)&lt;/span&gt; and &lt;span class="math"&gt;\(q\)&lt;/span&gt; could cancel, and so &lt;span class="math"&gt;\(\nu(p+q)\)&lt;/span&gt; could be larger than either &lt;span class="math"&gt;\(\nu(p)\)&lt;/span&gt; or &lt;span class="math"&gt;\(\nu(q)\)&lt;/span&gt;. This is why we have an inequality, instead of an equality.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;The particular valuation we&amp;rsquo;re interested in the &lt;span class="math"&gt;\(2\)&lt;/span&gt;-adic valuation, which measures how divisible by two a number is. The more factors of &lt;span class="math"&gt;\(2\)&lt;/span&gt; a number has, the bigger its valuation is.&lt;/p&gt;
&lt;p&gt;For example, &lt;span class="math"&gt;\(\nu_2(2) = \nu_2(6) = \nu_2(-22) = 1\)&lt;/span&gt;, since they all have a single factor of &lt;span class="math"&gt;\(2\)&lt;/span&gt;. Odd integers have &lt;span class="math"&gt;\(\nu_2\)&lt;/span&gt; of &lt;span class="math"&gt;\(0\)&lt;/span&gt;, since they have no factors of &lt;span class="math"&gt;\(2\)&lt;/span&gt; at all. And because &lt;span class="math"&gt;\(0\)&lt;/span&gt; can be factored as &lt;span class="math"&gt;\(2^k \cdot 0\)&lt;/span&gt; for any &lt;span class="math"&gt;\(k\)&lt;/span&gt;, no matter how big, it makes sense to say &lt;span class="math"&gt;\(\nu_2(0) = \infty\)&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;To extend this to rational numbers, we consider &lt;span class="math"&gt;\(2\)&lt;/span&gt;s in the denominator to count as negative. Consider the following examples until they make sense:
&lt;/p&gt;
&lt;div class="math"&gt;$$ \nu_2(1/4) = -2 \qquad \nu_2(1/3) = 0 \qquad \nu_2(2/3) = 1 \qquad \nu(3/8) = -3 \qquad \nu_2(12/5) = 2 $$&lt;/div&gt;
&lt;p&gt;We claim this is also a valuation.&lt;/p&gt;
&lt;p&gt;Again, we get the first property simply because we defined it to be so. The second one is also easy to verify, but the third one needs some work.&lt;/p&gt;
&lt;p&gt;Let &lt;span class="math"&gt;\(x\)&lt;/span&gt; and &lt;span class="math"&gt;\(y\)&lt;/span&gt; be rational numbers. By pulling out all the factors of &lt;span class="math"&gt;\(2\)&lt;/span&gt; from numerator and denominator, they can be written as &lt;span class="math"&gt;\(x = 2^n \frac{a}{b}\)&lt;/span&gt; and &lt;span class="math"&gt;\(y = 2^m \frac{c}{d}\)&lt;/span&gt;, where &lt;span class="math"&gt;\(a\)&lt;/span&gt;, &lt;span class="math"&gt;\(b\)&lt;/span&gt;, &lt;span class="math"&gt;\(c\)&lt;/span&gt;, and &lt;span class="math"&gt;\(d\)&lt;/span&gt; are odd. (Note that any of these, including &lt;span class="math"&gt;\(n\)&lt;/span&gt; and &lt;span class="math"&gt;\(m\)&lt;/span&gt;, may be negative.) Without loss of generality, let &lt;span class="math"&gt;\(n \ge m\)&lt;/span&gt;. We&amp;rsquo;d like to show that &lt;span class="math"&gt;\(\nu_2(x + y)\)&lt;/span&gt; is at least &lt;span class="math"&gt;\(\min(\nu_2(x), \nu_2(y)) = m\)&lt;/span&gt;.
&lt;/p&gt;
&lt;div class="math"&gt;$$ x + y = 2^n \frac{a}{b} + 2^m \frac{c}{d} = 2^m \left( \frac{2^{n-m} a}{b} + \frac{c}{d} \right) = 2^m \frac{2^{n-m} ad + bc}{bd} $$&lt;/div&gt;
&lt;p&gt;Since &lt;span class="math"&gt;\(2^{n-m} ad + bc\)&lt;/span&gt; is an integer, and &lt;span class="math"&gt;\(bd\)&lt;/span&gt; is odd, &lt;span class="math"&gt;\(x + y\)&lt;/span&gt; has at least &lt;span class="math"&gt;\(m\)&lt;/span&gt; factors of &lt;span class="math"&gt;\(2\)&lt;/span&gt;, and so &lt;span class="math"&gt;\(\nu_2(x + y) \ge m\)&lt;/span&gt;, as desired. Notably, if &lt;span class="math"&gt;\(n\)&lt;/span&gt; is strictly larger than &lt;span class="math"&gt;\(m\)&lt;/span&gt;, i.e., &lt;span class="math"&gt;\(\nu(x) &amp;gt; \nu(y)\)&lt;/span&gt;, then &lt;span class="math"&gt;\(2^{n-m} ad + bc\)&lt;/span&gt; is odd, and we can guarantee that &lt;span class="math"&gt;\(\nu_2(x+y)\)&lt;/span&gt; is exactly &lt;span class="math"&gt;\(\nu(y)\)&lt;/span&gt;. This is actually a property true of all valuations, so we&amp;rsquo;ll state it again:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class="math"&gt;\(\nu(x + y) \ge \min(\nu(x), \nu(y))\)&lt;/span&gt;, &lt;strong&gt;and if &lt;span class="math"&gt;\(\nu(x) \ne \nu(y)\)&lt;/span&gt; this is an equality&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;So &lt;span class="math"&gt;\(\nu_2\)&lt;/span&gt; is an honest-to-god valuation on &lt;span class="math"&gt;\(\QQ\)&lt;/span&gt;. By a theorem of Chevalley, we can extend this to a valuation on &lt;span class="math"&gt;\(\RR\)&lt;/span&gt;. The details are not particularly important, and the curious reader can find them at the end of this post.&lt;/p&gt;
&lt;h1&gt;Coloring The Plane&lt;/h1&gt;
&lt;p&gt;Our coloring of the dissection will use the (extended) &lt;span class="math"&gt;\(2\)&lt;/span&gt;-adic valuation. Our choice of coloring is peculiar enough that it deserves its own section though.&lt;/p&gt;
&lt;p&gt;Given a point &lt;span class="math"&gt;\((x,y)\)&lt;/span&gt; in the plane, we&amp;rsquo;ll color it:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;red if &lt;span class="math"&gt;\(\nu_2(x) &amp;gt; 0\)&lt;/span&gt; and &lt;span class="math"&gt;\(\nu_2(y) &amp;gt; 0\)&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;green if &lt;span class="math"&gt;\(\nu_2(x) \le 0\)&lt;/span&gt; and &lt;span class="math"&gt;\(\nu_2(x) \le \nu_2(y)\)&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;blue if &lt;span class="math"&gt;\(\nu_2(y) \le 0\)&lt;/span&gt; and &lt;span class="math"&gt;\(\nu_2(y) &amp;lt; \nu_2(x)\)&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This coloring has some interesting properties, which we&amp;rsquo;ll establish quickly.&lt;/p&gt;
&lt;div class="theorem-box"&gt;
&lt;div class="theorem-title"&gt;Claim&lt;/div&gt;
&lt;p&gt;If &lt;span class="math"&gt;\(P\)&lt;/span&gt; is a red point, then &lt;span class="math"&gt;\(Q\)&lt;/span&gt; and &lt;span class="math"&gt;\(Q-P\)&lt;/span&gt; have the same color.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;&lt;em&gt;Proof&lt;/em&gt;: This is a good exercise for the reader. Make use of the fact that, if &lt;span class="math"&gt;\(\nu_2(a) &amp;gt; 0\)&lt;/span&gt; and &lt;span class="math"&gt;\(\nu_2(x) \le 0\)&lt;/span&gt;, then &lt;span class="math"&gt;\(\nu_2(x - a) \ge \min(\nu_2(x), \nu_2(a)) = \nu_2(x)\)&lt;/span&gt;. On the other hand, if &lt;span class="math"&gt;\(\nu_2(x) &amp;gt; 0\)&lt;/span&gt;, then &lt;span class="math"&gt;\(\nu_2(x - a) &amp;gt; 0\)&lt;/span&gt; as well.&lt;/p&gt;
&lt;div class="theorem-box"&gt;
&lt;div class="theorem-title"&gt;Claim&lt;/div&gt;
&lt;p&gt;If we forget the dissection for a second, and pick &lt;em&gt;any&lt;/em&gt; three collinear points in the plane, they cannot all be different colors.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;&lt;em&gt;Proof&lt;/em&gt;: Let &lt;span class="math"&gt;\(P_r\)&lt;/span&gt;, &lt;span class="math"&gt;\(P_g\)&lt;/span&gt;, and &lt;span class="math"&gt;\(P_b\)&lt;/span&gt; be three points, colored red, green, and blue, respectively. We must show they can&amp;rsquo;t be collinear; equivalently, the vectors &lt;span class="math"&gt;\(P_g - P_r\)&lt;/span&gt; and &lt;span class="math"&gt;\(P_b - P_r\)&lt;/span&gt; are not parallel. This is a question about linear independence, so we&amp;rsquo;d better take a determinant. Let &lt;span class="math"&gt;\(P_g - P_r = (x_g, y_g)\)&lt;/span&gt;, and &lt;span class="math"&gt;\(P_b - P_r = (x_b, y_b)\)&lt;/span&gt;.&lt;/p&gt;
&lt;div class="math"&gt;$$
\det M =
\det \begin{pmatrix}
x_g &amp;amp; x_b \\
y_g &amp;amp; y_b
\end{pmatrix}
=
x_g y_b - x_b y_g
$$&lt;/div&gt;
&lt;p&gt;To show that &lt;span class="math"&gt;\(\det M\)&lt;/span&gt; is non-zero, we can show that its &lt;span class="math"&gt;\(2\)&lt;/span&gt;-adic valuation is nonzero. This might seem harder, but since the only thing we know about these points is their valuations, it&amp;rsquo;s the only shot we have!&lt;/p&gt;
&lt;p&gt;By the previous claim, &lt;span class="math"&gt;\(P_g - P_r\)&lt;/span&gt; is green, and &lt;span class="math"&gt;\(P_b - P_r\)&lt;/span&gt; is blue. From the coloring rules, we then know that &lt;span class="math"&gt;\(\nu_2(y_b) &amp;lt; \nu_2(x_b)\)&lt;/span&gt; and &lt;span class="math"&gt;\(\nu_2(x_g) \le \nu_2(y_g)\)&lt;/span&gt;. So &lt;span class="math"&gt;\(\nu_2(x_g y_b)\)&lt;/span&gt; is strictly less than &lt;span class="math"&gt;\(\nu_2(x_b y_g)\)&lt;/span&gt;. The third property then tells us that &lt;span class="math"&gt;\(\nu_2(\det M) = \nu_2(x_g y_b) \le 0\)&lt;/span&gt;. Therefore, &lt;span class="math"&gt;\(\det M \ne 0\)&lt;/span&gt;, and so &lt;span class="math"&gt;\(P_r\)&lt;/span&gt;, &lt;span class="math"&gt;\(P_g\)&lt;/span&gt;, and &lt;span class="math"&gt;\(P_b\)&lt;/span&gt; cannot be collinear.&lt;/p&gt;
&lt;h1&gt;Putting it Together&lt;/h1&gt;
&lt;p&gt;Now we&amp;rsquo;re ready. Let &lt;span class="math"&gt;\(n\)&lt;/span&gt; be odd, and consider a dissection of the unit square into &lt;span class="math"&gt;\(n\)&lt;/span&gt; triangles of equal area.&lt;/p&gt;
&lt;p&gt;Using the coloring rule above, we claim we get a Sperner coloring. The time we invested in the previous section pays off handsomely, as both required properties become almost trivial.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;No face of the square, nor of a triangle in the dissection, can contain vertices of all three colors, because no line &lt;em&gt;anywhere&lt;/em&gt; in the plane can have vertices of all three colors!&lt;/li&gt;
&lt;li&gt;Again, we use the fact that there are no trichromatic lines.  Consider the corners of the square and their colors:&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="math"&gt;$$ (0, 0) \textrm{ is red} \qquad (1, 0) \textrm{ is green} \qquad (0, 1) \textrm{ is blue} \qquad (1, 1) \textrm{ is green} $$&lt;/div&gt;
&lt;!--TODO diagram instead?--&gt;

&lt;p&gt;The only segments that could be purple lie between &lt;span class="math"&gt;\((0, 0)\)&lt;/span&gt; and &lt;span class="math"&gt;\((0, 1)\)&lt;/span&gt;. And because one endpoint is red, and the other blue, there must be an odd number of purple segments. (Remember our exercise about deleting vertices on faces&amp;hellip;?)&lt;/p&gt;
&lt;p&gt;Therefore, this coloring is a Sperner coloring, and so somewhere, there is a trichromatic triangle. To finish the proof, we must show that this triangle can&amp;rsquo;t have area &lt;span class="math"&gt;\(1/n\)&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;Let&amp;rsquo;s revisit our second claim. Strong as it is, we can squeeze just a tiny bit more out of it. Using the same notation as before, basic coordinate geometry tells us that the area of the triangle formed by &lt;span class="math"&gt;\(P_r\)&lt;/span&gt;, &lt;span class="math"&gt;\(P_g\)&lt;/span&gt;, and &lt;span class="math"&gt;\(P_b\)&lt;/span&gt; is &lt;span class="math"&gt;\(K = \frac{1}{2} \det M\)&lt;/span&gt;. By showing that &lt;span class="math"&gt;\(\det M \ne 0\)&lt;/span&gt;, we showed that this triangle was not degenerate, i.e., the three points were not collinear. But we actually showed a little more than that; we showed that &lt;span class="math"&gt;\(\nu_2(\det M) \le 0\)&lt;/span&gt;. Therefore, if a trichromatic triangle has area &lt;span class="math"&gt;\(K\)&lt;/span&gt;, then &lt;span class="math"&gt;\(\nu_2(K) = \nu_2(\frac{1}{2} \det M) \le -1\)&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;But because &lt;span class="math"&gt;\(n\)&lt;/span&gt; is odd, &lt;span class="math"&gt;\(\nu_2(1/n) = 0\)&lt;/span&gt;. Contradiction.&lt;/p&gt;
&lt;h1&gt;Appendix&lt;/h1&gt;
&lt;p&gt;We promised a proof that a valuation on &lt;span class="math"&gt;\(\QQ\)&lt;/span&gt; can be extended to a valuation on &lt;span class="math"&gt;\(\RR\)&lt;/span&gt;. More generally, for a field extension &lt;span class="math"&gt;\(L/K\)&lt;/span&gt;, a valuation &lt;span class="math"&gt;\(\nu\)&lt;/span&gt; on &lt;span class="math"&gt;\(K\)&lt;/span&gt; can be extended to a valuation on &lt;span class="math"&gt;\(L\)&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;Unfortunately, I&amp;rsquo;ve got diagrams to finish making before Monday ends, so I&amp;rsquo;ll amend this later ;)&lt;/p&gt;
&lt;!--
*Proof*: We'll extend one element at a time. If we have a valuation on $K$, we'll extend it to a valuation on $K(\alpha)$, where $\alpha \in L$.

If $\alpha$ is transcendental over $K$, then we will write it as $t$ instead. First we extend the valuation to the polynomial ring $K[t]$, by defining $\nu(\sum_i a_i t^i)$ to be $\max(\nu(a_i))$. After that, we'll extend it to the fraction field $K(t)$ by defining $\nu(p/q) = \nu(p) / \nu(q)$, which will be a valuation for the same reason we could extend from $\ZZ$ to $\QQ$ earlier.

To show that what we defined on $K[t]$ is a valuation, let $p = \sum_i a_i t^i$ and $q = \sum_i b_i t^i$. If $\nu(p) = \max(\nu(a_i))$ is zero, then all the $\nu(a_i)$ are zero. But then all the $a_i$ must have been zero, giving $p = 0$.

Showing multiplicativity is an exercise to the reader cause I'm actually stuck on it lol TODO

If $\alpha$ is algebraic, then let $f(x) = x^n + a_{n-1} x^{n-1} + \cdots + a_1 x + a_0$ be the minimal polynomial of $\alpha$. We define
--&gt;

&lt;script type="text/javascript"&gt;if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) {
    var align = "center",
        indent = "0em",
        linebreak = "false";

    if (false) {
        align = (screen.width &lt; 768) ? "left" : align;
        indent = (screen.width &lt; 768) ? "0em" : indent;
        linebreak = (screen.width &lt; 768) ? 'true' : linebreak;
    }

    var mathjaxscript = document.createElement('script');
    mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#';
    mathjaxscript.type = 'text/javascript';
    mathjaxscript.src = 'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.3/latest.js?config=TeX-AMS-MML_HTMLorMML';

    var configscript = document.createElement('script');
    configscript.type = 'text/x-mathjax-config';
    configscript[(window.opera ? "innerHTML" : "text")] =
        "MathJax.Hub.Config({" +
        "    config: ['MMLorHTML.js']," +
        "    TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'none' } }," +
        "    jax: ['input/TeX','input/MathML','output/HTML-CSS']," +
        "    extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js']," +
        "    displayAlign: '"+ align +"'," +
        "    displayIndent: '"+ indent +"'," +
        "    showMathMenu: true," +
        "    messageStyle: 'normal'," +
        "    tex2jax: { " +
        "        inlineMath: [ ['\\\\(','\\\\)'] ], " +
        "        displayMath: [ ['$$','$$'] ]," +
        "        processEscapes: true," +
        "        preview: 'TeX'," +
        "    }, " +
        "    'HTML-CSS': { " +
        "        availableFonts: ['STIX', 'TeX']," +
        "        preferredFont: 'STIX'," +
        "        styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'inherit ! important'} }," +
        "        linebreaks: { automatic: "+ linebreak +", width: '90% container' }," +
        "    }, " +
        "}); " +
        "if ('default' !== 'default') {" +
            "MathJax.Hub.Register.StartupHook('HTML-CSS Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax['HTML-CSS'].FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
            "MathJax.Hub.Register.StartupHook('SVG Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax.SVG.FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
        "}";

    (document.body || document.getElementsByTagName('head')[0]).appendChild(configscript);
    (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript);
}
&lt;/script&gt;</content><category term="misc"></category><category term="geometry"></category></entry><entry><title>Doubling Loaves, in Two Ways</title><link href="https://mathmondays.com/doubling-loaves" rel="alternate"></link><published>2018-09-17T00:00:00-07:00</published><updated>2018-09-17T00:00:00-07:00</updated><author><name>Henry Swanson</name></author><id>tag:mathmondays.com,2018-09-17:/doubling-loaves</id><summary type="html">&lt;p&gt;This one comes from a puzzle that a coworker gave me.&lt;/p&gt;
&lt;p&gt;There’s a miracle in the Gospels in which Jesus feeds a crowd of 5000, using only a few loaves of bread and some fish. As he breaks the food apart and hands it out, it does not diminish, and eventually the entire crowd is fed.&lt;/p&gt;
&lt;p&gt;In our puzzle, we have a prophet who is not quite so saintly. He starts with a single loaf of bread, and has to feed a crowd of &lt;span class="math"&gt;\(N\)&lt;/span&gt; people. But he also wants to be able to feed himself. Furthermore, our guy’s got a bit of a gambling problem: at each step, he flips a fair, unbiased coin.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;If it comes up heads, he duplicates one of his loaves.&lt;/li&gt;
&lt;li&gt;Otherwise, he hands out a loaf of bread to someone in the crowd.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;He only stops when he runs out of bread, or he creates &lt;span class="math"&gt;\(N\)&lt;/span&gt; new loaves (at which point, the entire crowd can be fed, and he can eat the original loaf).&lt;/p&gt;
&lt;p&gt;The question is: what is the probability that he can successfully feed everyone?&lt;/p&gt;
&lt;script type='text/javascript'&gt;if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) {
    var align = "center",
        indent = "0em",
        linebreak = "false";

    if (false) {
        align = (screen.width &lt; 768) ? "left" : align;
        indent = (screen.width &lt; 768) ? "0em" : indent;
        linebreak = (screen.width &lt; 768) ? 'true' : linebreak;
    }

    var mathjaxscript = document.createElement('script');
    mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#';
    mathjaxscript.type = 'text/javascript';
    mathjaxscript.src = 'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.3/latest.js?config=TeX-AMS-MML_HTMLorMML';

    var configscript = document.createElement('script');
    configscript.type = 'text/x-mathjax-config';
    configscript[(window.opera ? "innerHTML" : "text")] =
        "MathJax.Hub.Config({" +
        "    config: ['MMLorHTML.js']," +
        "    TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'none' } }," +
        "    jax: ['input/TeX','input/MathML','output/HTML-CSS']," +
        "    extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js']," +
        "    displayAlign: '"+ align +"'," +
        "    displayIndent: '"+ indent +"'," +
        "    showMathMenu: true," +
        "    messageStyle: 'normal'," +
        "    tex2jax: { " +
        "        inlineMath: [ ['\\\\(','\\\\)'] ], " +
        "        displayMath: [ ['$$','$$'] ]," +
        "        processEscapes: true," +
        "        preview: 'TeX'," +
        "    }, " +
        "    'HTML-CSS': { " +
        "        availableFonts: ['STIX', 'TeX']," +
        "        preferredFont: 'STIX'," +
        "        styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'inherit ! important'} }," +
        "        linebreaks: { automatic: "+ linebreak +", width: '90% container' }," +
        "    }, " +
        "}); " +
        "if ('default' !== 'default') {" +
            "MathJax.Hub.Register.StartupHook('HTML-CSS Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax['HTML-CSS'].FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
            "MathJax.Hub.Register.StartupHook('SVG Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax.SVG.FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
        "}";

    (document.body || document.getElementsByTagName('head')[0]).appendChild(configscript);
    (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript);
}
&lt;/script&gt;</summary><content type="html">&lt;p&gt;This one comes from a puzzle that a coworker gave me.&lt;/p&gt;
&lt;p&gt;There&amp;rsquo;s a miracle in the Gospels in which Jesus feeds a crowd of 5000, using only a few loaves of bread and some fish. As he breaks the food apart and hands it out, it does not diminish, and eventually the entire crowd is fed.&lt;/p&gt;
&lt;p&gt;In our puzzle, we have a prophet who is not quite so saintly. He starts with a single loaf of bread, and has to feed a crowd of &lt;span class="math"&gt;\(N\)&lt;/span&gt; people. But he also wants to be able to feed himself. Furthermore, our guy&amp;rsquo;s got a bit of a gambling problem: at each step, he flips a fair, unbiased coin.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;If it comes up heads, he duplicates one of his loaves.&lt;/li&gt;
&lt;li&gt;Otherwise, he hands out a loaf of bread to someone in the crowd.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;He only stops when he runs out of bread, or he creates &lt;span class="math"&gt;\(N\)&lt;/span&gt; new loaves (at which point, the entire crowd can be fed, and he can eat the original loaf).&lt;/p&gt;
&lt;p&gt;The question is: what is the probability that he can successfully feed everyone?&lt;/p&gt;


&lt;hr&gt;
&lt;p&gt;For small values of &lt;span class="math"&gt;\(N\)&lt;/span&gt;, we can manage this by hand:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class="math"&gt;\(N = 0\)&lt;/span&gt;: He can always feed himself, so the probability of success, &lt;span class="math"&gt;\(p\)&lt;/span&gt;, is &lt;span class="math"&gt;\(1\)&lt;/span&gt;. &lt;/li&gt;
&lt;li&gt;&lt;span class="math"&gt;\(N = 1\)&lt;/span&gt;: Everything depends on the first coin toss. If it is heads, then he has two loaves, and can feed himself and someone else. Otherwise, he&amp;rsquo;s just handed away his only loaf, and the game ends. So &lt;span class="math"&gt;\(p = 1/2\)&lt;/span&gt;.&lt;/li&gt;
&lt;li&gt;&lt;span class="math"&gt;\(N = 2\)&lt;/span&gt;: As before, he must flip heads on the first toss. Consider the second toss. If it is heads, then he has created two loaves, plus the original, and so everyone can be fed. Otherwise, he hands out a loaf, leaving him with one loaf, and two people to feed. This reduces to the previous case, in which there is a &lt;span class="math"&gt;\(1/2\)&lt;/span&gt; chance of success. So if he makes the first toss, he has a &lt;span class="math"&gt;\(3/4\)&lt;/span&gt; chance of success, giving us &lt;span class="math"&gt;\(p = 3/8\)&lt;/span&gt; for the whole process.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Clearly, this gets tedious quickly. We need a more systematic approach.&lt;/p&gt;
&lt;h2&gt;First Approach&lt;/h2&gt;
&lt;p&gt;One approach is to rephrase this as a problem about lattice walks.&lt;/p&gt;
&lt;p&gt;Let the point &lt;span class="math"&gt;\((x, y)\)&lt;/span&gt; represent the state where we have created &lt;span class="math"&gt;\(x\)&lt;/span&gt; new loaves (not counting the original loaf), and fed &lt;span class="math"&gt;\(y\)&lt;/span&gt; people (not counting himself). Then duplicating a loaf is a step to the right, and handing out a loaf is a step upward. On this grid, the prophet starts at &lt;span class="math"&gt;\((0, 0)\)&lt;/span&gt;, and randomly chooses to walk right or up. He wins if he touches the line &lt;span class="math"&gt;\(x = N\)&lt;/span&gt;, and loses if he crosses the diagonal &lt;span class="math"&gt;\(x = y\)&lt;/span&gt;. (Touching the diagonal is okay, at that point, he still has one loaf left.)&lt;/p&gt;
&lt;p&gt;Let &lt;span class="math"&gt;\(p(a, b)\)&lt;/span&gt; be the probability that the prophet reaches the point &lt;span class="math"&gt;\((a, b)\)&lt;/span&gt; on his random walk. It&amp;rsquo;s only possible to reach the region &lt;span class="math"&gt;\(0 \le b \le a\)&lt;/span&gt;, so we will set &lt;span class="math"&gt;\(p(a, b) = 0\)&lt;/span&gt; outside this range. Since it&amp;rsquo;s our starting point, &lt;span class="math"&gt;\(p(0, 0)\)&lt;/span&gt; is clearly &lt;span class="math"&gt;\(1\)&lt;/span&gt;. For all other points, we can state our probability recursively; if the prophet gets to the point &lt;span class="math"&gt;\((a, b)\)&lt;/span&gt;, then he must have come from &lt;span class="math"&gt;\((a-1, b)\)&lt;/span&gt; or &lt;span class="math"&gt;\((a, b-1)\)&lt;/span&gt;. From either of those points, he has a &lt;span class="math"&gt;\(1/2\)&lt;/span&gt; chance of getting to &lt;span class="math"&gt;\((a, b)\)&lt;/span&gt;, so &lt;span class="math"&gt;\(p(a, b) = \frac{1}{2}(p(a-1, b) + p(a, b-1))\)&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;If you write these numbers out in a grid, you&amp;rsquo;ll quickly get tired of seeing powers of &lt;span class="math"&gt;\(2\)&lt;/span&gt; in the denominator:&lt;/p&gt;
&lt;!-- TODO remove header row --&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;span class="math"&gt;\(0\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math"&gt;\(0\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math"&gt;\(0\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math"&gt;\(0\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math"&gt;\(7/128\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math"&gt;\(21/256\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math"&gt;\(15/256\)&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;span class="math"&gt;\(0\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math"&gt;\(0\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math"&gt;\(0\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math"&gt;\(5/64\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math"&gt;\(7/64\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math"&gt;\(7/64\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math"&gt;\(3/32\)&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;span class="math"&gt;\(0\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math"&gt;\(0\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math"&gt;\(1/8\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math"&gt;\(5/32\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math"&gt;\(9/64\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math"&gt;\(7/64\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math"&gt;\(5/64\)&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;span class="math"&gt;\(0\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math"&gt;\(1/4\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math"&gt;\(1/4\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math"&gt;\(3/16\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math"&gt;\(1/8\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math"&gt;\(5/64\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math"&gt;\(3/64\)&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;span class="math"&gt;\(1\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math"&gt;\(1/2\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math"&gt;\(1/4\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math"&gt;\(1/8\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math"&gt;\(1/16\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math"&gt;\(1/32\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math"&gt;\(1/64\)&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;So we&amp;rsquo;ll define an auxilary function &lt;span class="math"&gt;\(q(a, b) = 2^{a+b} p(a, b)\)&lt;/span&gt;, leaving us with nice clean integers. The recurrence relation for &lt;span class="math"&gt;\(q\)&lt;/span&gt; is:
&lt;/p&gt;
&lt;div class="math"&gt;$$ q(0, 0) = 1 \qquad q(a, b) = 0 \textrm{ if } b &amp;gt; a \qquad q(a, b) = q(a-1, b) + q(a, b-1) \textrm{ otherwise} $$&lt;/div&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;span class="math"&gt;\(0\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math"&gt;\(0\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math"&gt;\(0\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math"&gt;\(0\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math"&gt;\(14\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math"&gt;\(42\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math"&gt;\(90\)&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;span class="math"&gt;\(0\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math"&gt;\(0\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math"&gt;\(0\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math"&gt;\(5\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math"&gt;\(14\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math"&gt;\(28\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math"&gt;\(48\)&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;span class="math"&gt;\(0\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math"&gt;\(0\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math"&gt;\(2\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math"&gt;\(5\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math"&gt;\(9\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math"&gt;\(14\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math"&gt;\(20\)&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;span class="math"&gt;\(0\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math"&gt;\(1\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math"&gt;\(2\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math"&gt;\(3\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math"&gt;\(4\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math"&gt;\(5\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math"&gt;\(6\)&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;span class="math"&gt;\(1\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math"&gt;\(1\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math"&gt;\(1\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math"&gt;\(1\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math"&gt;\(1\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math"&gt;\(1\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math"&gt;\(1\)&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;This table, and the recurrence relation, feel somewhat like Pascal&amp;rsquo;s triangle, with the apex in the lower left, and each counter-diagonal forming a row.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;span class="math"&gt;\(1\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math"&gt;\(5\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math"&gt;\(15\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math"&gt;\(35\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math"&gt;\(70\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math"&gt;\(126\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math"&gt;\(210\)&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;span class="math"&gt;\(1\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math"&gt;\(4\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math"&gt;\(10\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math"&gt;\(20\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math"&gt;\(35\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math"&gt;\(56\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math"&gt;\(84\)&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;span class="math"&gt;\(1\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math"&gt;\(3\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math"&gt;\(6\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math"&gt;\(10\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math"&gt;\(15\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math"&gt;\(21\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math"&gt;\(28\)&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;span class="math"&gt;\(1\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math"&gt;\(2\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math"&gt;\(3\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math"&gt;\(4\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math"&gt;\(5\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math"&gt;\(6\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math"&gt;\(7\)&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;span class="math"&gt;\(1\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math"&gt;\(1\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math"&gt;\(1\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math"&gt;\(1\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math"&gt;\(1\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math"&gt;\(1\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math"&gt;\(1\)&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;But since we&amp;rsquo;re forcing the region above the diagonal to be &lt;span class="math"&gt;\(0\)&lt;/span&gt;, this causes a defect. Subtracting the relevant parts of our grid from Pascal&amp;rsquo;s triangle, we get:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;span class="math"&gt;\(-\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math"&gt;\(-\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math"&gt;\(-\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math"&gt;\(-\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math"&gt;\(56\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math"&gt;\(84\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math"&gt;\(120\)&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;span class="math"&gt;\(-\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math"&gt;\(-\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math"&gt;\(-\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math"&gt;\(15\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math"&gt;\(21\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math"&gt;\(28\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math"&gt;\(36\)&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;span class="math"&gt;\(-\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math"&gt;\(-\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math"&gt;\(4\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math"&gt;\(5\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math"&gt;\(6\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math"&gt;\(7\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math"&gt;\(8\)&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;span class="math"&gt;\(-\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math"&gt;\(1\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math"&gt;\(1\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math"&gt;\(1\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math"&gt;\(1\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math"&gt;\(1\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math"&gt;\(1\)&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;span class="math"&gt;\(0\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math"&gt;\(0\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math"&gt;\(0\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math"&gt;\(0\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math"&gt;\(0\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math"&gt;\(0\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math"&gt;\(0\)&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;This is just a piece of Pascal&amp;rsquo;s triangle, shifted by one! It appears that &lt;span class="math"&gt;\(q(a, b) = \binom{a+b}{b} - \binom{a+b}{b-1}\)&lt;/span&gt;, a suspicion that is easy to confirm via the recurrence relations.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;Now we know &lt;span class="math"&gt;\(q(a, b)\)&lt;/span&gt; in closed form, and thus &lt;span class="math"&gt;\(p(a, b)\)&lt;/span&gt; as well. But we can&amp;rsquo;t just sum over &lt;span class="math"&gt;\(p(N, 0)\)&lt;/span&gt;, &lt;span class="math"&gt;\(p(N, 1)\)&lt;/span&gt;, &amp;hellip;, &lt;span class="math"&gt;\(p(N, N)\)&lt;/span&gt;, because these don&amp;rsquo;t correspond to disjoint events. In fact, to reach &lt;span class="math"&gt;\((N, N)\)&lt;/span&gt; safely, the prophet must have passed through the point &lt;span class="math"&gt;\((N, N-1)\)&lt;/span&gt; first!&lt;/p&gt;
&lt;p&gt;We&amp;rsquo;ll have to do something a little silly. Consider the counter-diagonal from &lt;span class="math"&gt;\((N, N)\)&lt;/span&gt; to &lt;span class="math"&gt;\((2N, 0)\)&lt;/span&gt;, and note that a path can touch at most one of those points. Furthermore, if there is a path of length &lt;span class="math"&gt;\(2N\)&lt;/span&gt;, and it touched the line &lt;span class="math"&gt;\(x = N\)&lt;/span&gt;, then it must end on one of these points.&lt;/p&gt;
&lt;!-- TODO add diagram here --&gt;

&lt;p&gt;So we&amp;rsquo;ll change the rules of the game a little bit. The prophet still loses if he runs out of bread, but otherwise, he must keep flipping until the coin is flipped &lt;span class="math"&gt;\(2N\)&lt;/span&gt; times. This doesn&amp;rsquo;t affect the end conditions: after the coin has been flipped &lt;span class="math"&gt;\(2N\)&lt;/span&gt; times, he&amp;rsquo;s either run out of loaves, or he&amp;rsquo;s flipped at least &lt;span class="math"&gt;\(N\)&lt;/span&gt; heads. And clearly, this doesn&amp;rsquo;t affect his chances of success (once &lt;span class="math"&gt;\(N\)&lt;/span&gt; new loaves have been created, it is impossible to fail). But it does change where the &amp;ldquo;finish line&amp;rdquo; for our walk is. The prophet succeeds exactly when his walk ends on the counter-diagonal from &lt;span class="math"&gt;\((N, N)\)&lt;/span&gt; to &lt;span class="math"&gt;\((2N, 0)\)&lt;/span&gt;!&lt;/p&gt;
&lt;p&gt;This telescopes easily into a clean expression:
&lt;/p&gt;
&lt;div class="math"&gt;$$ \sum_{k = 0}^N p(2N-k, k) = \sum_{k = 0}^N \frac{1}{2^{2N}} \left( \binom{2N}{k} - \binom{2N}{k-1} \right) = \frac{1}{2^{2N}} \binom{2N}{N} $$&lt;/div&gt;
&lt;hr&gt;
&lt;h2&gt;Second Approach&lt;/h2&gt;
&lt;p&gt;As suggested by the title of this post, I&amp;rsquo;ll also describe a second solution to this puzzle, using generating functions. Sure, this will involve some slightly heavier machinery than the previous approach, which was rather elementary, but there is a certain elegance to it.&lt;/p&gt;
&lt;p&gt;Let &lt;span class="math"&gt;\(a_n\)&lt;/span&gt; be the probability that the prophet ended up with exactly &lt;span class="math"&gt;\(n\)&lt;/span&gt; loaves, including the original loaf. The only way to end up with exactly one loaf is to flip tails immediately, so &lt;span class="math"&gt;\(a_1 = 1/2\)&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;For &lt;span class="math"&gt;\(n &amp;gt; 1\)&lt;/span&gt;, he must flip heads first, giving two loaves. If he ended up with exactly &lt;span class="math"&gt;\(n\)&lt;/span&gt; loaves total, he must have gotten &lt;span class="math"&gt;\(k\)&lt;/span&gt; from the first loaf, and &lt;span class="math"&gt;\(n-k\)&lt;/span&gt; from the second loaf. Since the loaves act independently, this has probability &lt;span class="math"&gt;\(\sum_{k=1}^{n-1} a_k a_{n-1}\)&lt;/span&gt;. Factoring in the fact that he needs to flip heads the first time, we deduce &lt;span class="math"&gt;\(a_n = \frac{1}{2} \sum_{k=1}^{n-1} a_k a_{n-k}\)&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;If we take the bold (and intuitive!) step of defining &lt;span class="math"&gt;\(a_0 = 0\)&lt;/span&gt;, we can change the bounds on that sum to be &lt;span class="math"&gt;\(0\)&lt;/span&gt; through &lt;span class="math"&gt;\(n\)&lt;/span&gt;, which will make our lives easier.&lt;/p&gt;
&lt;p&gt;Let &lt;span class="math"&gt;\(G(x) = a_0 + a_1 x + a_2 x^2 + \cdots\)&lt;/span&gt; be the generating function for &lt;span class="math"&gt;\(a_n\)&lt;/span&gt;. We can tease out a very nice expression for &lt;span class="math"&gt;\(G(x)\)&lt;/span&gt;:
&lt;/p&gt;
&lt;div class="math"&gt;$$
\begin{align*}
G(x) &amp;amp;= a_0 + a_1 x + \sum_{n=2}^\infty a_n x^n \\
&amp;amp;= \frac{1}{2} x + \sum_{n=2}^\infty a_n x^n \\
&amp;amp;= \frac{1}{2} x + \sum_{n=2}^\infty \left( \frac{1}{2} \sum_{k=0}^n a_k a_{n-k} \right) x^n \\
G(x) &amp;amp;= \frac{1}{2} x + \frac{1}{2} \sum_{n=2}^\infty \sum_{k=0}^n a_k a_{n-k} x^n \\
2 G(x) &amp;amp;= x + \sum_{n=2}^\infty \sum_{k=0}^n a_k a_{n-k} x^n
\end{align*}
$$&lt;/div&gt;
&lt;p&gt;Since either &lt;span class="math"&gt;\(a_k\)&lt;/span&gt; or &lt;span class="math"&gt;\(a_{n-k}\)&lt;/span&gt; will be &lt;span class="math"&gt;\(0\)&lt;/span&gt; for &lt;span class="math"&gt;\(n &amp;lt; 2\)&lt;/span&gt;, we can lower the bound on our sum to &lt;span class="math"&gt;\(k = 0\)&lt;/span&gt; without changing anything. After that, set &lt;span class="math"&gt;\(\ell = n - k\)&lt;/span&gt;:
&lt;/p&gt;
&lt;div class="math"&gt;$$
\begin{align*}
2 G(x) &amp;amp;= x + \sum_{n=0}^\infty \sum_{k=0}^n a_k a_{n-k} x^n \\
&amp;amp;= x + \sum_{k=0}^\infty \sum_{\ell=0}^\infty a_k a_\ell x^{k+\ell} \\
&amp;amp;= x + \left( \sum_{k=0}^\infty a_k x^k \right) \left( \sum_{\ell=0}^\infty a_\ell x^\ell \right) \\
2G(x) &amp;amp;= x + G(x)^2
\end{align*}
$$&lt;/div&gt;
&lt;p&gt;At first blush it looks hard to isolate &lt;span class="math"&gt;\(G(x)\)&lt;/span&gt;, but once we see this as the quadratic it is, we can apply the handy-dandy quadratic formula:
&lt;/p&gt;
&lt;div class="math"&gt;$$ G(x) = \frac{2 \pm \sqrt{4 - 4x}}{2} = 1 \pm \sqrt{1 - x} $$&lt;/div&gt;
&lt;p&gt;Since &lt;span class="math"&gt;\(G(0) = a_0 = 0\)&lt;/span&gt;, we know we should take the negative square root.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;We could at this point find a closed-form expression for &lt;span class="math"&gt;\(a_n\)&lt;/span&gt;, but that&amp;rsquo;s not what we&amp;rsquo;re going to do. Remember that we&amp;rsquo;re not interested in the probability of getting exactly &lt;span class="math"&gt;\(N+1\)&lt;/span&gt; loaves, but the probability of getting &lt;span class="math"&gt;\(N+1\)&lt;/span&gt; or more loaves. In other words, we&amp;rsquo;d like to know &lt;span class="math"&gt;\(b_{N+1}\)&lt;/span&gt;, where &lt;span class="math"&gt;\(b_n = 1 - \sum_{k=0}^{n-1} a_k\)&lt;/span&gt;. [Note: we&amp;rsquo;re not certain that this is the same as &lt;span class="math"&gt;\(\sum_{k=n}^\infty a_k\)&lt;/span&gt;; since we haven&amp;rsquo;t ruled out the possibility that this process goes on forever with positive probability. It&amp;rsquo;s possible that the &lt;span class="math"&gt;\(a_k\)&lt;/span&gt; sum to &lt;span class="math"&gt;\(&amp;lt;1\)&lt;/span&gt;.]&lt;/p&gt;
&lt;p&gt;Let &lt;span class="math"&gt;\(F(x) = b_0 + b_1 x + b_2 x^2 + \cdots\)&lt;/span&gt; be the generating function for the &lt;span class="math"&gt;\(b_n\)&lt;/span&gt;. We&amp;rsquo;ll set &lt;span class="math"&gt;\(b_0 = 1\)&lt;/span&gt;, since &lt;span class="math"&gt;\(1\)&lt;/span&gt; minus the empty sum should be &lt;span class="math"&gt;\(1\)&lt;/span&gt;. If you&amp;rsquo;re familiar with generating functions, you&amp;rsquo;ll know that &lt;span class="math"&gt;\(F(x) = \frac{1}{1 - x} - \frac{x}{1 - x} G(x)\)&lt;/span&gt;, but for the newcomers, we&amp;rsquo;ll do it in slow motion:&lt;/p&gt;
&lt;p&gt;To sum the terms of the series, we&amp;rsquo;ll multiply by the geometric series &lt;span class="math"&gt;\(\frac{1}{1-x} = 1 + x + x^2 + \cdots\)&lt;/span&gt;. The coefficient for the &lt;span class="math"&gt;\(x^n\)&lt;/span&gt; term will then be &lt;span class="math"&gt;\(a_0 + \cdots a_n\)&lt;/span&gt;.
&lt;/p&gt;
&lt;div class="math"&gt;$$ \frac{G(x)}{1 - x} = \sum_{n=0}^\infty \sum_{k=0}^n a_k x^n $$&lt;/div&gt;
&lt;p&gt;Multiplying by &lt;span class="math"&gt;\(x\)&lt;/span&gt; knocks our exponents up by one, equivalently, moves our coefficients down by one.
&lt;/p&gt;
&lt;div class="math"&gt;$$ \frac{x}{1- x} G(x) = \sum_{n=0}^\infty \sum_{k=0}^{n} a_k x^{n+1} = \sum_{n=1}^\infty \sum_{k=0}^{n-1} a_k x^n $$&lt;/div&gt;
&lt;p&gt;Lastly, we want to subtract every coefficient (except the first) from &lt;span class="math"&gt;\(1\)&lt;/span&gt;. Fortunately, we already know what &lt;span class="math"&gt;\(1 + x + x^2 + \cdots\)&lt;/span&gt; is:
&lt;/p&gt;
&lt;div class="math"&gt;$$ \frac{1}{1 - x} - \frac{x}{1 - x}G(x) = \sum_{n=1}^\infty \left( 1 - \sum_{k=0}^{n-1} a_k \right) x^n $$&lt;/div&gt;
&lt;p&gt;The coefficients on the right are exactly &lt;span class="math"&gt;\(b_n\)&lt;/span&gt;, so we get &lt;span class="math"&gt;\(F(x) = \frac{1}{1 - x} - \frac{x}{1 - x} G(x)\)&lt;/span&gt;, as promised. This cleans up to:
&lt;/p&gt;
&lt;div class="math"&gt;$$ F(x) = 1 + \frac{x}{\sqrt{1 - x}} $$&lt;/div&gt;
&lt;p&gt;Using the &lt;a href="https://en.wikipedia.org/wiki/Binomial_theorem#Newton's_generalized_binomial_theorem"&gt;generalized binomal theorem&lt;/a&gt;, we can arrive at a closed form for &lt;span class="math"&gt;\(b_n\)&lt;/span&gt;.
&lt;/p&gt;
&lt;div class="math"&gt;$$
\begin{align*}
F(x) &amp;amp;= 1 + x (1 - x)^{-1/2} \\
&amp;amp;= 1 + x \sum_{n=0}^\infty \frac{(-1/2)(-3/2)\cdots(-1/2 - (n-1))}{n!} 1^{-1/2 - n} (-x)^n \\
&amp;amp;= 1 + x \sum_{n=0}^\infty \frac{(1/2)(3/2)\cdots((2n-1)/2)}{n!} x^n \\
&amp;amp;= 1 + x \sum_{n=0}^\infty \frac{(1/2) \cdot 1 \cdot (3/2) \cdot 2 \cdots ((2n-1)/2) \cdot n}{n! \cdot n!} x^n \\
&amp;amp;= 1 + x \sum_{n=0}^\infty \frac{1}{2^{2n}} \frac{1 \cdot 2 \cdot 3 \cdot 4 \cdots (2n-1) \cdot 2n}{n! \cdot n!} x^n \\
&amp;amp;= 1 + x \sum_{n=0}^\infty \frac{1}{2^{2n}} \binom{2n}{n} x^n \\
&amp;amp;= 1 + \sum_{n=0}^\infty \frac{1}{2^{2n}} \binom{2n}{n} x^{n+1}
\end{align*}
$$&lt;/div&gt;
&lt;p&gt;So, the probability of getting &lt;span class="math"&gt;\(N+1\)&lt;/span&gt; or more loaves is &lt;span class="math"&gt;\(b_{N+1} = \frac{1}{2^{2N}} \binom{2N}{N}\)&lt;/span&gt;, which matches the answer we got before. Thank goodness!&lt;/p&gt;
&lt;script type="text/javascript"&gt;if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) {
    var align = "center",
        indent = "0em",
        linebreak = "false";

    if (false) {
        align = (screen.width &lt; 768) ? "left" : align;
        indent = (screen.width &lt; 768) ? "0em" : indent;
        linebreak = (screen.width &lt; 768) ? 'true' : linebreak;
    }

    var mathjaxscript = document.createElement('script');
    mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#';
    mathjaxscript.type = 'text/javascript';
    mathjaxscript.src = 'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.3/latest.js?config=TeX-AMS-MML_HTMLorMML';

    var configscript = document.createElement('script');
    configscript.type = 'text/x-mathjax-config';
    configscript[(window.opera ? "innerHTML" : "text")] =
        "MathJax.Hub.Config({" +
        "    config: ['MMLorHTML.js']," +
        "    TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'none' } }," +
        "    jax: ['input/TeX','input/MathML','output/HTML-CSS']," +
        "    extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js']," +
        "    displayAlign: '"+ align +"'," +
        "    displayIndent: '"+ indent +"'," +
        "    showMathMenu: true," +
        "    messageStyle: 'normal'," +
        "    tex2jax: { " +
        "        inlineMath: [ ['\\\\(','\\\\)'] ], " +
        "        displayMath: [ ['$$','$$'] ]," +
        "        processEscapes: true," +
        "        preview: 'TeX'," +
        "    }, " +
        "    'HTML-CSS': { " +
        "        availableFonts: ['STIX', 'TeX']," +
        "        preferredFont: 'STIX'," +
        "        styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'inherit ! important'} }," +
        "        linebreaks: { automatic: "+ linebreak +", width: '90% container' }," +
        "    }, " +
        "}); " +
        "if ('default' !== 'default') {" +
            "MathJax.Hub.Register.StartupHook('HTML-CSS Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax['HTML-CSS'].FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
            "MathJax.Hub.Register.StartupHook('SVG Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax.SVG.FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
        "}";

    (document.body || document.getElementsByTagName('head')[0]).appendChild(configscript);
    (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript);
}
&lt;/script&gt;</content><category term="misc"></category><category term="puzzles"></category></entry><entry><title>The Multiplicative Structure of \( \Bbb Z / n \Bbb Z \)</title><link href="https://mathmondays.com/units-mod-n" rel="alternate"></link><published>2018-09-10T00:00:00-07:00</published><updated>2018-09-10T00:00:00-07:00</updated><author><name>Henry Swanson</name></author><id>tag:mathmondays.com,2018-09-10:/units-mod-n</id><summary type="html">&lt;p&gt;&lt;span class="mathdefs"&gt;
&lt;span class="math"&gt;\(\newcommand{\ZZ}{\Bbb Z}
\newcommand{\ZZn}[1]{\ZZ / {#1} \ZZ}\)&lt;/span&gt;
&lt;/span&gt;&lt;/p&gt;
&lt;!--TODO i would like to make this more introductory--&gt;
&lt;p&gt;One of the most familiar rings is the ring of integers modulo &lt;span class="math"&gt;\(n\)&lt;/span&gt;, often denoted &lt;span class="math"&gt;\(\ZZn{n}\)&lt;/span&gt;. Like all rings, it has an additive structure and a multiplicative one. The additive structure is straightforward: &lt;span class="math"&gt;\(\ZZn{n}\)&lt;/span&gt; is cyclic, generated by &lt;span class="math"&gt;\(1\)&lt;/span&gt;. In fact, every integer &lt;span class="math"&gt;\(a\)&lt;/span&gt; coprime to &lt;span class="math"&gt;\(n\)&lt;/span&gt; is a generator for this group, giving a total of &lt;span class="math"&gt;\(\phi(n)\)&lt;/span&gt; generators. The multiplicative structure, on the other hand, is far less apparent.&lt;/p&gt;
&lt;p&gt;Not all elements of &lt;span class="math"&gt;\(\ZZn{n}\)&lt;/span&gt; can participate in the multiplicative group, because not all of them have inverses. For example, 4 has no inverse in &lt;span class="math"&gt;\(\ZZn{6}\)&lt;/span&gt;; there’s no integer &lt;span class="math"&gt;\(a\)&lt;/span&gt; such that &lt;span class="math"&gt;\(4a \equiv 1 \pmod 6\)&lt;/span&gt;. Elements that do have inverses are called &lt;em&gt;units&lt;/em&gt;, and we’ll denote the group of units in &lt;span class="math"&gt;\(\ZZn{n}\)&lt;/span&gt; as &lt;span class="math"&gt;\(U_n\)&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;Since an element &lt;span class="math"&gt;\(a \in \ZZn{n}\)&lt;/span&gt; is a unit iff &lt;span class="math"&gt;\(a\)&lt;/span&gt; and &lt;span class="math"&gt;\(n\)&lt;/span&gt; are coprime, there are &lt;span class="math"&gt;\(\phi(n)\)&lt;/span&gt; units, where &lt;span class="math"&gt;\(\phi\)&lt;/span&gt; is the &lt;a href="https://en.wikipedia.org/wiki/Euler%27s_totient_function"&gt;totient function&lt;/a&gt;. But the size of the group alone doesn’t nail down the group structure. &lt;/p&gt;
&lt;p&gt;For example:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class="math"&gt;\(U_5 = \{ 1, 2, 3, 4 \}\)&lt;/span&gt;:&lt;ul&gt;
&lt;li&gt;generated by &lt;span class="math"&gt;\(2\)&lt;/span&gt;: &lt;span class="math"&gt;\(2^0 = 1\)&lt;/span&gt;, &lt;span class="math"&gt;\(2^1 = 2\)&lt;/span&gt;, &lt;span class="math"&gt;\(2^2 = 4\)&lt;/span&gt;, &lt;span class="math"&gt;\(2^3 = 8 = 3\)&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;also generated by &lt;span class="math"&gt;\(3\)&lt;/span&gt;: &lt;span class="math"&gt;\(3^0 = 1\)&lt;/span&gt;, &lt;span class="math"&gt;\(3^1 = 3\)&lt;/span&gt;, &lt;span class="math"&gt;\(3^2 = 4\)&lt;/span&gt;, &lt;span class="math"&gt;\(3^3 = 2\)&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;this group is isomorphic to &lt;span class="math"&gt;\(\ZZn{4}\)&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;span class="math"&gt;\(U_8 = \{ 1, 3, 5, 7 \}\)&lt;/span&gt;&lt;ul&gt;
&lt;li&gt;every element squares to &lt;span class="math"&gt;\(1\)&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;this group is isomorphic to &lt;span class="math"&gt;\(\ZZn{2} \times \ZZn{2}\)&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Is there a way to find the structure of &lt;span class="math"&gt;\(U_n\)&lt;/span&gt;?&lt;/p&gt;
&lt;script type='text/javascript'&gt;if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) {
    var align = "center",
        indent = "0em",
        linebreak = "false";

    if (false) {
        align = (screen.width &lt; 768) ? "left" : align;
        indent = (screen.width &lt; 768) ? "0em" : indent;
        linebreak = (screen.width &lt; 768) ? 'true' : linebreak;
    }

    var mathjaxscript = document.createElement('script');
    mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#';
    mathjaxscript.type = 'text/javascript';
    mathjaxscript.src = 'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.3/latest.js?config=TeX-AMS-MML_HTMLorMML';

    var configscript = document.createElement('script');
    configscript.type = 'text/x-mathjax-config';
    configscript[(window.opera ? "innerHTML" : "text")] =
        "MathJax.Hub.Config({" +
        "    config: ['MMLorHTML.js']," +
        "    TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'none' } }," +
        "    jax: ['input/TeX','input/MathML','output/HTML-CSS']," +
        "    extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js']," +
        "    displayAlign: '"+ align +"'," +
        "    displayIndent: '"+ indent +"'," +
        "    showMathMenu: true," +
        "    messageStyle: 'normal'," +
        "    tex2jax: { " +
        "        inlineMath: [ ['\\\\(','\\\\)'] ], " +
        "        displayMath: [ ['$$','$$'] ]," +
        "        processEscapes: true," +
        "        preview: 'TeX'," +
        "    }, " +
        "    'HTML-CSS': { " +
        "        availableFonts: ['STIX', 'TeX']," +
        "        preferredFont: 'STIX'," +
        "        styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'inherit ! important'} }," +
        "        linebreaks: { automatic: "+ linebreak +", width: '90% container' }," +
        "    }, " +
        "}); " +
        "if ('default' !== 'default') {" +
            "MathJax.Hub.Register.StartupHook('HTML-CSS Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax['HTML-CSS'].FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
            "MathJax.Hub.Register.StartupHook('SVG Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax.SVG.FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
        "}";

    (document.body || document.getElementsByTagName('head')[0]).appendChild(configscript);
    (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript);
}
&lt;/script&gt;</summary><content type="html">&lt;p&gt;&lt;span class="mathdefs"&gt;
&lt;span class="math"&gt;\(\newcommand{\ZZ}{\Bbb Z}
\newcommand{\ZZn}[1]{\ZZ / {#1} \ZZ}\)&lt;/span&gt;
&lt;/span&gt;&lt;/p&gt;
&lt;!--TODO i would like to make this more introductory--&gt;
&lt;p&gt;One of the most familiar rings is the ring of integers modulo &lt;span class="math"&gt;\(n\)&lt;/span&gt;, often denoted &lt;span class="math"&gt;\(\ZZn{n}\)&lt;/span&gt;. Like all rings, it has an additive structure and a multiplicative one. The additive structure is straightforward: &lt;span class="math"&gt;\(\ZZn{n}\)&lt;/span&gt; is cyclic, generated by &lt;span class="math"&gt;\(1\)&lt;/span&gt;. In fact, every integer &lt;span class="math"&gt;\(a\)&lt;/span&gt; coprime to &lt;span class="math"&gt;\(n\)&lt;/span&gt; is a generator for this group, giving a total of &lt;span class="math"&gt;\(\phi(n)\)&lt;/span&gt; generators. The multiplicative structure, on the other hand, is far less apparent.&lt;/p&gt;
&lt;p&gt;Not all elements of &lt;span class="math"&gt;\(\ZZn{n}\)&lt;/span&gt; can participate in the multiplicative group, because not all of them have inverses. For example, 4 has no inverse in &lt;span class="math"&gt;\(\ZZn{6}\)&lt;/span&gt;; there&amp;rsquo;s no integer &lt;span class="math"&gt;\(a\)&lt;/span&gt; such that &lt;span class="math"&gt;\(4a \equiv 1 \pmod 6\)&lt;/span&gt;. Elements that do have inverses are called &lt;em&gt;units&lt;/em&gt;, and we&amp;rsquo;ll denote the group of units in &lt;span class="math"&gt;\(\ZZn{n}\)&lt;/span&gt; as &lt;span class="math"&gt;\(U_n\)&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;Since an element &lt;span class="math"&gt;\(a \in \ZZn{n}\)&lt;/span&gt; is a unit iff &lt;span class="math"&gt;\(a\)&lt;/span&gt; and &lt;span class="math"&gt;\(n\)&lt;/span&gt; are coprime, there are &lt;span class="math"&gt;\(\phi(n)\)&lt;/span&gt; units, where &lt;span class="math"&gt;\(\phi\)&lt;/span&gt; is the &lt;a href="https://en.wikipedia.org/wiki/Euler%27s_totient_function"&gt;totient function&lt;/a&gt;. But the size of the group alone doesn&amp;rsquo;t nail down the group structure. &lt;/p&gt;
&lt;p&gt;For example:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class="math"&gt;\(U_5 = \{ 1, 2, 3, 4 \}\)&lt;/span&gt;:&lt;ul&gt;
&lt;li&gt;generated by &lt;span class="math"&gt;\(2\)&lt;/span&gt;: &lt;span class="math"&gt;\(2^0 = 1\)&lt;/span&gt;, &lt;span class="math"&gt;\(2^1 = 2\)&lt;/span&gt;, &lt;span class="math"&gt;\(2^2 = 4\)&lt;/span&gt;, &lt;span class="math"&gt;\(2^3 = 8 = 3\)&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;also generated by &lt;span class="math"&gt;\(3\)&lt;/span&gt;: &lt;span class="math"&gt;\(3^0 = 1\)&lt;/span&gt;, &lt;span class="math"&gt;\(3^1 = 3\)&lt;/span&gt;, &lt;span class="math"&gt;\(3^2 = 4\)&lt;/span&gt;, &lt;span class="math"&gt;\(3^3 = 2\)&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;this group is isomorphic to &lt;span class="math"&gt;\(\ZZn{4}\)&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;span class="math"&gt;\(U_8 = \{ 1, 3, 5, 7 \}\)&lt;/span&gt;&lt;ul&gt;
&lt;li&gt;every element squares to &lt;span class="math"&gt;\(1\)&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;this group is isomorphic to &lt;span class="math"&gt;\(\ZZn{2} \times \ZZn{2}\)&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Is there a way to find the structure of &lt;span class="math"&gt;\(U_n\)&lt;/span&gt;?&lt;/p&gt;


&lt;hr&gt;
&lt;p&gt;A versatile theorem from ring theory is the Chinese Remainder Theorem, which (as a special case) says that, for &lt;span class="math"&gt;\(m\)&lt;/span&gt;, &lt;span class="math"&gt;\(n\)&lt;/span&gt; coprime, the rings &lt;span class="math"&gt;\(\ZZn{m} \times \ZZn{n}\)&lt;/span&gt; and &lt;span class="math"&gt;\(\ZZn{mn}\)&lt;/span&gt; are isomorphic. This induces an isomorphism on the units as well (can you see why?).&lt;/p&gt;
&lt;p&gt;This means that in order to understand the structure of &lt;span class="math"&gt;\(U_n\)&lt;/span&gt;, we only need to understand &lt;span class="math"&gt;\(U_{p^k}\)&lt;/span&gt; for all primes &lt;span class="math"&gt;\(p\)&lt;/span&gt; and positive integers &lt;span class="math"&gt;\(k\)&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;We claim that &lt;span class="math"&gt;\(U_{p^k}\)&lt;/span&gt; is always cyclic for odd &lt;span class="math"&gt;\(p\)&lt;/span&gt;, but for &lt;span class="math"&gt;\(p = 2\)&lt;/span&gt;, it&amp;rsquo;s only cyclic when &lt;span class="math"&gt;\(k = 1, 2\)&lt;/span&gt;.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;Let &lt;span class="math"&gt;\(p\)&lt;/span&gt; be an odd prime.&lt;/p&gt;
&lt;p&gt;Of course, we start with the simplest case, &lt;span class="math"&gt;\(U_p\)&lt;/span&gt;. Because &lt;span class="math"&gt;\(\ZZn{p}\)&lt;/span&gt; is a field, its multiplicative group is cyclic (see &lt;a href="https://math.stackexchange.com/a/59911/55540"&gt;here&lt;/a&gt; for a slick proof).&lt;/p&gt;
&lt;p&gt;It is tempting to use this as the base case for an induction on &lt;span class="math"&gt;\(k\)&lt;/span&gt;, but for technical reasons, we need to start our induction at &lt;span class="math"&gt;\(k = 2\)&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Technical Reasons&lt;/em&gt;: Assuming that our claim is true and that &lt;span class="math"&gt;\(U_{p^k}\)&lt;/span&gt; is indeed cyclic, let&amp;rsquo;s consider the number of generators as &lt;span class="math"&gt;\(k\)&lt;/span&gt; increases. Since the number of generators in a cyclic group of size &lt;span class="math"&gt;\(m\)&lt;/span&gt; is &lt;span class="math"&gt;\(\phi(m)\)&lt;/span&gt;, we have:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Group&lt;/th&gt;
&lt;th style="text-align: center;"&gt;# of elements&lt;/th&gt;
&lt;th style="text-align: center;"&gt;# of generators&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;span class="math"&gt;\(U_p\)&lt;/span&gt;&lt;/td&gt;
&lt;td style="text-align: center;"&gt;&lt;span class="math"&gt;\(p-1\)&lt;/span&gt;&lt;/td&gt;
&lt;td style="text-align: center;"&gt;&lt;span class="math"&gt;\(\phi(p-1)\)&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;span class="math"&gt;\(U_{p^2}\)&lt;/span&gt;&lt;/td&gt;
&lt;td style="text-align: center;"&gt;&lt;span class="math"&gt;\(p(p-1)\)&lt;/span&gt;&lt;/td&gt;
&lt;td style="text-align: center;"&gt;&lt;span class="math"&gt;\((p-1) \phi(p-1)\)&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;span class="math"&gt;\(U_{p^3}\)&lt;/span&gt;&lt;/td&gt;
&lt;td style="text-align: center;"&gt;&lt;span class="math"&gt;\(p^2(p-1)\)&lt;/span&gt;&lt;/td&gt;
&lt;td style="text-align: center;"&gt;&lt;span class="math"&gt;\(p (p-1) \phi(p-1)\)&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;span class="math"&gt;\(U_{p^4}\)&lt;/span&gt;&lt;/td&gt;
&lt;td style="text-align: center;"&gt;&lt;span class="math"&gt;\(p^3(p-1)\)&lt;/span&gt;&lt;/td&gt;
&lt;td style="text-align: center;"&gt;&lt;span class="math"&gt;\(p^2 (p-1) \phi(p-1)\)&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;span class="math"&gt;\(U_{p^k}\)&lt;/span&gt;&lt;/td&gt;
&lt;td style="text-align: center;"&gt;&lt;span class="math"&gt;\(p^{k-1} (p-1)\)&lt;/span&gt;&lt;/td&gt;
&lt;td style="text-align: center;"&gt;&lt;span class="math"&gt;\( p^{k-2}(p-1) \phi(p-1)\)&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;hr&gt;
&lt;p&gt;From the evidence above, we suspect that if &lt;span class="math"&gt;\(g\)&lt;/span&gt; is a generator mod &lt;span class="math"&gt;\(p\)&lt;/span&gt;, only &lt;span class="math"&gt;\(p-1\)&lt;/span&gt; of the &lt;span class="math"&gt;\(p\)&lt;/span&gt; possible lifts to &lt;span class="math"&gt;\(U_{p^2}\)&lt;/span&gt; will be generators. This suggests there is one &amp;ldquo;bad&amp;rdquo; lift for each generator.&lt;/p&gt;
&lt;p&gt;Fortunately, we can find this bad lift explicitly: we claim it&amp;rsquo;s &lt;span class="math"&gt;\(g^p\)&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;We know that &lt;span class="math"&gt;\(g^p \equiv g \pmod{p}\)&lt;/span&gt;, so &lt;span class="math"&gt;\(g^p\)&lt;/span&gt; really is a lift of &lt;span class="math"&gt;\(g\)&lt;/span&gt;. And since &lt;span class="math"&gt;\(g^{p(p-1)} \equiv 1 \pmod{p^2}\)&lt;/span&gt;, we know that the order of &lt;span class="math"&gt;\(g^p\)&lt;/span&gt; is at most &lt;span class="math"&gt;\(p-1\)&lt;/span&gt; &amp;ndash; too small to generate all of &lt;span class="math"&gt;\(U_{p^2}\)&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;If our hunch is true, then this is the &lt;em&gt;only&lt;/em&gt; bad lift of &lt;span class="math"&gt;\(g\)&lt;/span&gt;, and so, guided by our suspicions, make the following claim:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Claim&lt;/strong&gt;: if &lt;span class="math"&gt;\(a\)&lt;/span&gt; is not a multiple of &lt;span class="math"&gt;\(p\)&lt;/span&gt;, then &lt;span class="math"&gt;\(g^p + ap\)&lt;/span&gt; is a generator of &lt;span class="math"&gt;\(U_{p^2}\)&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Proof&lt;/em&gt;: Since &lt;span class="math"&gt;\(g^p + ap \equiv g \pmod{p}\)&lt;/span&gt;, it has order &lt;span class="math"&gt;\(p-1\)&lt;/span&gt; in &lt;span class="math"&gt;\(U_p\)&lt;/span&gt;. This means its order in &lt;span class="math"&gt;\(U_{p^2}\)&lt;/span&gt; must be a multiple of &lt;span class="math"&gt;\(p-1\)&lt;/span&gt;. Its order must also divide the size of the group, narrowing the possibilities to &lt;span class="math"&gt;\(p-1\)&lt;/span&gt; and &lt;span class="math"&gt;\(p(p-1)\)&lt;/span&gt;. Thus, to prove that &lt;span class="math"&gt;\(g^p + ap\)&lt;/span&gt; is a generator, we just have to show it doesn&amp;rsquo;t have order &lt;span class="math"&gt;\(p-1\)&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;Assume it does, and expand &lt;span class="math"&gt;\(1 \equiv (g^p + ap)^{p-1}\)&lt;/span&gt; by the binomial theorem:
&lt;/p&gt;
&lt;div class="math"&gt;$$ 1 \equiv (g^p + ap)^{p-1} \equiv \sum_{i = 0}^{p - 1} \binom{p - 1}{i} (g^p)^{p-1-i} (ap)^i \pmod{p^2} $$&lt;/div&gt;
&lt;p&gt;The terms for &lt;span class="math"&gt;\(i \ge 2\)&lt;/span&gt; have two or more factors of &lt;span class="math"&gt;\(p\)&lt;/span&gt; in them, so they get killed, leaving us with
&lt;/p&gt;
&lt;div class="math"&gt;$$ 1 \equiv g^{p(p-1)} + (p-1) g^{p(p-2)} ap \pmod{p^2} $$&lt;/div&gt;
&lt;p&gt;Recalling that &lt;span class="math"&gt;\(g^{p(p-1)} \equiv 1\)&lt;/span&gt;, we get:
&lt;/p&gt;
&lt;div class="math"&gt;$$ 0 \equiv (p-1) g^{p(p-2)} ap \pmod{p^2} $$&lt;/div&gt;
&lt;p&gt;For this to be true, we would need to find two factors of &lt;span class="math"&gt;\(p\)&lt;/span&gt; in &lt;span class="math"&gt;\((p-1) g^{p(p-2)} ap\)&lt;/span&gt;. There&amp;rsquo;s clearly one factor, from the &lt;span class="math"&gt;\(p\)&lt;/span&gt;, but none of the other terms can provide the second. By contradiction, &lt;span class="math"&gt;\(g^p + ap\)&lt;/span&gt; must have order &lt;span class="math"&gt;\(p(p-1)\)&lt;/span&gt; and thus generate &lt;span class="math"&gt;\(U_{p^2}\)&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;Note that there are &lt;span class="math"&gt;\(p-1\)&lt;/span&gt; choices of &lt;span class="math"&gt;\(a\)&lt;/span&gt;, and so we&amp;rsquo;ve confirmed our suspicion that every generator mod &lt;span class="math"&gt;\(p\)&lt;/span&gt; has &lt;span class="math"&gt;\(p-1\)&lt;/span&gt; good lifts and one bad lift mod &lt;span class="math"&gt;\(p^2\)&lt;/span&gt;.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;Now we&amp;rsquo;re ready for the inductive step.&lt;/p&gt;
&lt;p&gt;Let &lt;span class="math"&gt;\(k \ge 2\)&lt;/span&gt; and &lt;span class="math"&gt;\(g\)&lt;/span&gt; be a generator of &lt;span class="math"&gt;\(U_{p^k}\)&lt;/span&gt;. We claim &lt;span class="math"&gt;\(g\)&lt;/span&gt; is also a generator for &lt;span class="math"&gt;\(U_{p^{k+1}}\)&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;Since it&amp;rsquo;s a generator, it has order &lt;span class="math"&gt;\(p^{k-1} (p-1)\)&lt;/span&gt; in &lt;span class="math"&gt;\(U_{p^k}\)&lt;/span&gt;, and so its order in &lt;span class="math"&gt;\(U_{p^{k+1}}\)&lt;/span&gt; must be a multiple of that. This means it is either &lt;span class="math"&gt;\(p^{k-1} (p - 1)\)&lt;/span&gt; or &lt;span class="math"&gt;\(p^k (p - 1)\)&lt;/span&gt;. We just need to show it isn&amp;rsquo;t the former.&lt;/p&gt;
&lt;p&gt;Let&amp;rsquo;s try to do a binomial expansion like before. We know that &lt;span class="math"&gt;\(g^{p^{k-1} (p-1)} = (g^{p^{k-2} (p-1)})^p\)&lt;/span&gt;, and that &lt;span class="math"&gt;\(g^{p^{k-2} (p-1)} = a p^{k-1} + b\)&lt;/span&gt; for some &lt;span class="math"&gt;\(b &amp;lt; p^{k-1}\)&lt;/span&gt;.
By Euler&amp;rsquo;s theorem, &lt;span class="math"&gt;\(g^{p^{k-2} (p-1)} \equiv 1 \pmod{p^{k-1}}\)&lt;/span&gt; (consider the size of &lt;span class="math"&gt;\(U_{p^{k-1}}\)&lt;/span&gt;). This means that &lt;span class="math"&gt;\(b = 1\)&lt;/span&gt;. Furthermore, because &lt;span class="math"&gt;\(g\)&lt;/span&gt; is a generator in &lt;span class="math"&gt;\(U_{p^k}\)&lt;/span&gt;, we know that &lt;span class="math"&gt;\(p \nmid a\)&lt;/span&gt;. So &lt;span class="math"&gt;\(g^{p^{k-2} (p-1)} = 1 + a p^{k-1}\)&lt;/span&gt; where &lt;span class="math"&gt;\(p\)&lt;/span&gt; and &lt;span class="math"&gt;\(a\)&lt;/span&gt; are coprime.&lt;/p&gt;
&lt;p&gt;Now we can do our binomial business:
&lt;/p&gt;
&lt;div class="math"&gt;$$ g^{p^{k-1} (p-1)} = \sum_{i = 0}^p \binom{p}{i} (a p^{k-1})^i $$&lt;/div&gt;
&lt;p&gt;How many factors of &lt;span class="math"&gt;\(p\)&lt;/span&gt; are in each term?&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class="math"&gt;\(i = 0, 1\)&lt;/span&gt;: don&amp;rsquo;t care.&lt;/li&gt;
&lt;li&gt;&lt;span class="math"&gt;\(i \ge 2, i \ne p\)&lt;/span&gt;: &lt;span class="math"&gt;\(1\)&lt;/span&gt; from the binomial, and at least &lt;span class="math"&gt;\(2(k-1)\)&lt;/span&gt; from the power, for a total of at least &lt;span class="math"&gt;\(2k-1\)&lt;/span&gt;. Since &lt;span class="math"&gt;\(k \ge 2\)&lt;/span&gt;, we have &lt;span class="math"&gt;\(2k-1 \ge k+1\)&lt;/span&gt;, and these terms vanish mod &lt;span class="math"&gt;\(p^{k+1}\)&lt;/span&gt;.&lt;/li&gt;
&lt;li&gt;&lt;span class="math"&gt;\(i = p\)&lt;/span&gt;: we lose the factor from the binomial, so we have exactly &lt;span class="math"&gt;\(p(k-1)\)&lt;/span&gt; factors of &lt;span class="math"&gt;\(p\)&lt;/span&gt;. Since &lt;span class="math"&gt;\(p\)&lt;/span&gt; is odd, &lt;span class="math"&gt;\(p \ge 3\)&lt;/span&gt;, and for &lt;span class="math"&gt;\(k \ge 2\)&lt;/span&gt;, &lt;span class="math"&gt;\(3k-3 \ge k+1\)&lt;/span&gt;, and this term also vanishes.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;So we are left with &lt;span class="math"&gt;\(g^{p^{k-1} (p-1)} \equiv 1 + a p^k \pmod{p^{k+1}}\)&lt;/span&gt;, and since &lt;span class="math"&gt;\(a\)&lt;/span&gt; isn&amp;rsquo;t a multiple of &lt;span class="math"&gt;\(p\)&lt;/span&gt;, this shows that &lt;span class="math"&gt;\(g\)&lt;/span&gt; does not have order &lt;span class="math"&gt;\(p^{k-1} (p - 1)\)&lt;/span&gt;. Thus, &lt;span class="math"&gt;\(g\)&lt;/span&gt; must be a generator mod &lt;span class="math"&gt;\(p^{k+1}\)&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;By induction, this shows that &lt;span class="math"&gt;\(U_{p^k}\)&lt;/span&gt; is cyclic for all &lt;span class="math"&gt;\(k\)&lt;/span&gt;.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;Note that the above argument &lt;em&gt;almost&lt;/em&gt; works for &lt;span class="math"&gt;\(p = 2\)&lt;/span&gt;; the base case goes through, and the inductive step fails only when we look at the last term: when &lt;span class="math"&gt;\(p = 2\)&lt;/span&gt;, we can&amp;rsquo;t conclude &lt;span class="math"&gt;\(p(k-1) \ge k+1\)&lt;/span&gt;. But this only fails at &lt;span class="math"&gt;\(k = 2\)&lt;/span&gt;, it actually continues to work for &lt;span class="math"&gt;\(k \ge 3\)&lt;/span&gt;. So if there &lt;em&gt;were&lt;/em&gt; generators for &lt;span class="math"&gt;\(U_8\)&lt;/span&gt;, then they would lift to generators for &lt;span class="math"&gt;\(U_{16}\)&lt;/span&gt;, and those to &lt;span class="math"&gt;\(U_{32}\)&lt;/span&gt;, and so on. But we just barely fail the jump from &lt;span class="math"&gt;\(k = 2\)&lt;/span&gt; to &lt;span class="math"&gt;\(k = 3\)&lt;/span&gt;, and this is why &lt;span class="math"&gt;\(p = 2\)&lt;/span&gt; is different from its odd peers.&lt;/p&gt;
&lt;p&gt;Still though, we can modify our argument slightly to derive the structure of &lt;span class="math"&gt;\(U_{2^k}\)&lt;/span&gt; for &lt;span class="math"&gt;\(k \ge 3\)&lt;/span&gt;. Since &lt;span class="math"&gt;\(U_8\)&lt;/span&gt; is non-cyclic, there is no chance for any higher &lt;span class="math"&gt;\(U_{2^k}\)&lt;/span&gt; to be cyclic. But we will show they&amp;rsquo;re pretty darn close.&lt;/p&gt;
&lt;p&gt;We will call &lt;span class="math"&gt;\(g\)&lt;/span&gt; a &amp;ldquo;near-generator&amp;rdquo; of &lt;span class="math"&gt;\(U_{2^k}\)&lt;/span&gt; if &lt;span class="math"&gt;\(g\)&lt;/span&gt; generates half the group, and multiplying by &lt;span class="math"&gt;\(-1\)&lt;/span&gt; gives the other half. Our base case is &lt;span class="math"&gt;\(U_8 = \{ 1, 3, 5, 7 \}\)&lt;/span&gt;, for which &lt;span class="math"&gt;\(3\)&lt;/span&gt; and &lt;span class="math"&gt;\(5\)&lt;/span&gt; are near-generators.&lt;/p&gt;
&lt;p&gt;Say that &lt;span class="math"&gt;\(g\)&lt;/span&gt; is a near-generator of &lt;span class="math"&gt;\(U_{2^k}\)&lt;/span&gt;. We claim that it is also a near-generator of &lt;span class="math"&gt;\(U_{2^{k+1}}\)&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;As before, we show the possible orders for &lt;span class="math"&gt;\(g\)&lt;/span&gt;, and eliminate all but one possibility. Since &lt;span class="math"&gt;\(g\)&lt;/span&gt; is a near-generator mod &lt;span class="math"&gt;\(2^k\)&lt;/span&gt;, it has order &lt;span class="math"&gt;\(2^{k-2}\)&lt;/span&gt; in &lt;span class="math"&gt;\(U_{2^k}\)&lt;/span&gt;. Thus its order in &lt;span class="math"&gt;\(U_{2^{k+1}}\)&lt;/span&gt; must be a multiple of &lt;span class="math"&gt;\(2^{k-2}\)&lt;/span&gt;. This leaves possibilities &lt;span class="math"&gt;\(2^{k-2}\)&lt;/span&gt;, &lt;span class="math"&gt;\(2^{k-1}\)&lt;/span&gt;, and &lt;span class="math"&gt;\(2^k\)&lt;/span&gt;. It cannot be &lt;span class="math"&gt;\(2^k\)&lt;/span&gt;, because that would imply that &lt;span class="math"&gt;\(U_{2^{k+1}}\)&lt;/span&gt; is cyclic, and that is impossible. So it remains to eliminate &lt;span class="math"&gt;\(2^{k-2}\)&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;A similar argument to the odd &lt;span class="math"&gt;\(p\)&lt;/span&gt; case can be used to tell us that &lt;span class="math"&gt;\(g^{2^{k-3}} = 1 + a 2^{k-1}\)&lt;/span&gt; for some odd &lt;span class="math"&gt;\(a\)&lt;/span&gt;. Then:
&lt;/p&gt;
&lt;div class="math"&gt;$$ g^{2^{k-2}} = (g^{2^{k-3}})^2 = (1 + a 2^{k-1})^2 = 1 + 2 \cdot a 2^{k-1} + a^2 2^{2k-2} $$&lt;/div&gt;
&lt;p&gt;Taken mod &lt;span class="math"&gt;\(2^{k+1}\)&lt;/span&gt;, this tells us that &lt;span class="math"&gt;\(g^{2^{k-2}} \equiv 1 + a 2^k \pmod{2^{k+1}}\)&lt;/span&gt;, eliminating the possibility of &lt;span class="math"&gt;\(2^{k-2}\)&lt;/span&gt; as the order. Thus, &lt;span class="math"&gt;\(g\)&lt;/span&gt; must have order &lt;span class="math"&gt;\(2^{k-1}\)&lt;/span&gt; in &lt;span class="math"&gt;\(U_{2^{k+1}}\)&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;To show that &lt;span class="math"&gt;\(-1\)&lt;/span&gt; gives the rest of the group, it suffices to show that &lt;span class="math"&gt;\(-1\)&lt;/span&gt; is not in the half generated by &lt;span class="math"&gt;\(g\)&lt;/span&gt;. But if &lt;span class="math"&gt;\(g^r \equiv -1 \pmod{2^{k+1}}\)&lt;/span&gt;, then surely this would also be true mod &lt;span class="math"&gt;\(2^k\)&lt;/span&gt;, and so this situation does not arise.&lt;/p&gt;
&lt;p&gt;Therefore, for &lt;span class="math"&gt;\(k \ge 3\)&lt;/span&gt;, &lt;span class="math"&gt;\(U_{2^k} = \{ \pm g^r \mid r = 0, 1, \ldots 2^{k-2} - 1 \} \cong \ZZn{2} \times \ZZn{2^{k-2}}\)&lt;/span&gt;. The cases of &lt;span class="math"&gt;\(U_2\)&lt;/span&gt; and &lt;span class="math"&gt;\(U_4\)&lt;/span&gt; are easily computed to be the trivial group and &lt;span class="math"&gt;\(\ZZn{2}\)&lt;/span&gt;, respectively.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;Now we are finally ready to understand &lt;span class="math"&gt;\(U_n\)&lt;/span&gt; in general: factor &lt;span class="math"&gt;\(n\)&lt;/span&gt; into primes, and apply the results we learned above.&lt;/p&gt;
&lt;p&gt;Specifically, we can answer the question of exactly when &lt;span class="math"&gt;\(U_n\)&lt;/span&gt; is cyclic.&lt;/p&gt;
&lt;p&gt;If &lt;span class="math"&gt;\(n\)&lt;/span&gt; has two odd prime factors &lt;span class="math"&gt;\(p\)&lt;/span&gt; and &lt;span class="math"&gt;\(q\)&lt;/span&gt;, then &lt;span class="math"&gt;\(n = p^k q^\ell n'\)&lt;/span&gt; with &lt;span class="math"&gt;\(n'\)&lt;/span&gt; coprime to &lt;span class="math"&gt;\(p\)&lt;/span&gt; and &lt;span class="math"&gt;\(q\)&lt;/span&gt;. So &lt;span class="math"&gt;\(U_n \cong U_{p^k} \times U_{q^\ell} \times U_{n'}\)&lt;/span&gt;. The first two factors in this product have even size, i.e., their sizes have a common factor. This makes it impossible for &lt;span class="math"&gt;\(U_{p^k} \times U_{q^\ell}\)&lt;/span&gt; to be cyclic, and therefore, &lt;span class="math"&gt;\(U_n\)&lt;/span&gt; can&amp;rsquo;t be cyclic either.&lt;/p&gt;
&lt;p&gt;If &lt;span class="math"&gt;\(8\)&lt;/span&gt; divides &lt;span class="math"&gt;\(n\)&lt;/span&gt;, then &lt;span class="math"&gt;\(n = 2^k m\)&lt;/span&gt; for some odd &lt;span class="math"&gt;\(m\)&lt;/span&gt; and some &lt;span class="math"&gt;\(k \ge 3\)&lt;/span&gt;, and &lt;span class="math"&gt;\(U_n = U_{2^k} \times U_m\)&lt;/span&gt;. But &lt;span class="math"&gt;\(U_{2^k}\)&lt;/span&gt; is not cyclic, and this also disqualifies &lt;span class="math"&gt;\(n\)&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;So we are left with &lt;span class="math"&gt;\(n = 1\)&lt;/span&gt;, &lt;span class="math"&gt;\(2\)&lt;/span&gt;, &lt;span class="math"&gt;\(4\)&lt;/span&gt;, &lt;span class="math"&gt;\(p^k\)&lt;/span&gt;, &lt;span class="math"&gt;\(2p^k\)&lt;/span&gt;, and &lt;span class="math"&gt;\(4p^k\)&lt;/span&gt;. The first three can be checked by hand; they&amp;rsquo;re all cyclic. We showed earlier that &lt;span class="math"&gt;\(U_{p^k}\)&lt;/span&gt; is cyclic, and the Chinese Remainder Theorem tells us that &lt;span class="math"&gt;\(U_{2p^k} \cong U_2 \times U_{p^k}\)&lt;/span&gt; is too (note that &lt;span class="math"&gt;\(U_2\)&lt;/span&gt; is the trivial group). But &lt;span class="math"&gt;\(U_{4p^k} \cong U_4 \times U_{p^k}\)&lt;/span&gt;, and both groups have even size, and so &lt;span class="math"&gt;\(U_{4p^k}\)&lt;/span&gt; is not cyclic.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;To summarize:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class="math"&gt;\(U_n\)&lt;/span&gt; is cyclic exactly when &lt;span class="math"&gt;\(n = 1\)&lt;/span&gt;, &lt;span class="math"&gt;\(2\)&lt;/span&gt;, &lt;span class="math"&gt;\(4\)&lt;/span&gt;, &lt;span class="math"&gt;\(p^k\)&lt;/span&gt; or &lt;span class="math"&gt;\(2p^k\)&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class="math"&gt;\(U_{p^k} \cong \ZZn{p^{k-1} (p-1)}\)&lt;/span&gt; for odd &lt;span class="math"&gt;\(p\)&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class="math"&gt;\(U_{2^k} \cong \ZZn{2} \times \ZZn{2^{k-2}}\)&lt;/span&gt; for &lt;span class="math"&gt;\(k \ge 3\)&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;lifting a generator always produces another generator, except potentially from &lt;span class="math"&gt;\(p\)&lt;/span&gt; to &lt;span class="math"&gt;\(p^2\)&lt;/span&gt; (but the &amp;ldquo;bad lift&amp;rdquo; is known explicitly)&lt;/li&gt;
&lt;/ul&gt;
&lt;script type="text/javascript"&gt;if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) {
    var align = "center",
        indent = "0em",
        linebreak = "false";

    if (false) {
        align = (screen.width &lt; 768) ? "left" : align;
        indent = (screen.width &lt; 768) ? "0em" : indent;
        linebreak = (screen.width &lt; 768) ? 'true' : linebreak;
    }

    var mathjaxscript = document.createElement('script');
    mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#';
    mathjaxscript.type = 'text/javascript';
    mathjaxscript.src = 'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.3/latest.js?config=TeX-AMS-MML_HTMLorMML';

    var configscript = document.createElement('script');
    configscript.type = 'text/x-mathjax-config';
    configscript[(window.opera ? "innerHTML" : "text")] =
        "MathJax.Hub.Config({" +
        "    config: ['MMLorHTML.js']," +
        "    TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'none' } }," +
        "    jax: ['input/TeX','input/MathML','output/HTML-CSS']," +
        "    extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js']," +
        "    displayAlign: '"+ align +"'," +
        "    displayIndent: '"+ indent +"'," +
        "    showMathMenu: true," +
        "    messageStyle: 'normal'," +
        "    tex2jax: { " +
        "        inlineMath: [ ['\\\\(','\\\\)'] ], " +
        "        displayMath: [ ['$$','$$'] ]," +
        "        processEscapes: true," +
        "        preview: 'TeX'," +
        "    }, " +
        "    'HTML-CSS': { " +
        "        availableFonts: ['STIX', 'TeX']," +
        "        preferredFont: 'STIX'," +
        "        styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'inherit ! important'} }," +
        "        linebreaks: { automatic: "+ linebreak +", width: '90% container' }," +
        "    }, " +
        "}); " +
        "if ('default' !== 'default') {" +
            "MathJax.Hub.Register.StartupHook('HTML-CSS Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax['HTML-CSS'].FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
            "MathJax.Hub.Register.StartupHook('SVG Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax.SVG.FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
        "}";

    (document.body || document.getElementsByTagName('head')[0]).appendChild(configscript);
    (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript);
}
&lt;/script&gt;</content><category term="misc"></category><category term="algebra"></category><category term="number-theory"></category></entry></feed>